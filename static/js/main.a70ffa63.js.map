{"version":3,"file":"static/js/main.a70ffa63.js","mappings":"ysBAUA,IAAMA,EAA0B,CAC9BC,OAAQ,KACRC,YAAa,KACbC,aAAc,KACdC,aAAa,GAGTC,GAAYC,EAAAA,EAAAA,aAAY,CAC5BC,KAAM,OACNP,aAAAA,EACAQ,SAAU,CACRC,iBAAkB,SAACC,GAAK,OAAAC,EAAAA,EAAA,GACnBD,GAAK,IACRN,aAAa,GAAI,EAEnBQ,MAAO,SACLC,EAACC,GAAA,IAAAC,EAAAD,EAECE,QAA4C,MAE1C,CACJf,OAHmBc,EAANd,OAIbC,YAJgCa,EAAXb,YAKrBC,aAL8CY,EAAZZ,aAMlCC,aAAa,EACd,EACDa,OAAQ,kBAAAN,EAAAA,EAAC,CAAD,EACHX,GAAY,IACfI,aAAa,GAAI,KAKhBc,EAA4Cb,EAAUc,QAA9CP,EAAKM,EAALN,MAAOK,EAAMC,EAAND,OAAQR,EAAgBS,EAAhBT,iBAC9B,QAAeJ,EAAiB,QCzChC,IAEMe,GAAYd,EAAAA,EAAAA,aAAY,CAC5BC,KAAM,YACNP,aAJwC,CAAC,EAKzCQ,SAAU,CACRa,aAAc,SAACR,EAACC,GAAW,OAAAA,EAAPE,OACX,EACTM,aAAc,SAACT,EAACU,GAAW,MAA+B,CACxDC,aADyBD,EAAPP,QAEnB,EACDS,eAAgB,SAACf,GAAK,MAAM,CAC1Bc,aAAcd,EAAMc,aACrB,KAIEE,EAAuDN,EAAUD,QAAzDE,EAAYK,EAAZL,aAAcC,EAAYI,EAAZJ,aAAcG,EAAcC,EAAdD,eAC3C,QAAeL,EAAiB,QCdhC,IAKMO,GAAgBrB,EAAAA,EAAAA,aAAY,CAChCC,KAAM,WACNP,aAPkC,CAClC4B,QAAQ,EACRC,SAAS,GAMTrB,SAAU,CACRsB,YAAa,SAACjB,EAACC,GAAW,OAAAA,EAAPE,OAAmD,KAI3Dc,EAAgBH,EAAcR,QAA9BW,YACf,QAAeH,EAAqB,Q,sBClB9BI,E,OAAKC,aAAoB,c,kDCDlBC,GAAkBC,EAAAA,EAAAA,KAAGC,IAAAA,GAAAC,EAAAA,EAAAA,SAAA,yLAarBC,GAAkBH,EAAAA,EAAAA,KAAGI,IAAAA,GAAAF,EAAAA,EAAAA,SAAA,yLAarBG,GAAyBL,EAAAA,EAAAA,KAAGM,IAAAA,GAAAJ,EAAAA,EAAAA,SAAA,mKAU5BK,GAAoCP,EAAAA,EAAAA,KAAGQ,IAAAA,GAAAN,EAAAA,EAAAA,SAAA,+GAMvCO,GAAeT,EAAAA,EAAAA,KAAGU,IAAAA,GAAAR,EAAAA,EAAAA,SAAA,uFAUlBS,GAAwBX,EAAAA,EAAAA,KAAGY,IAAAA,GAAAV,EAAAA,EAAAA,SAAA,yKAa3BW,GAAuBb,EAAAA,EAAAA,KAAGc,IAAAA,GAAAZ,EAAAA,EAAAA,SAAA,mJAW1Ba,GAAuBf,EAAAA,EAAAA,KAAGgB,IAAAA,GAAAd,EAAAA,EAAAA,SAAA,qUAmB1Be,GAAajB,EAAAA,EAAAA,KAAGkB,IAAAA,GAAAhB,EAAAA,EAAAA,SAAA,0JCjGhBiB,EAAY,WACZC,EAAa,YACbC,EAAW,WCQXC,EACX,SAACC,GAAkB,sBAAA3C,GAAA4C,EAAAA,EAAAA,UACnB,UAAOC,GANqB,IAACC,EAO3BD,EAAS/C,EAAM6C,IAPYG,EAQLH,EAPxBI,EAAYC,aAAaT,EAAWU,KAAKC,UAAUJ,GAQnD,IAAC,gBAAAK,GAAA,OAAAnD,EAAAoD,MAAA,KAAAC,UAAA,EAJkB,EAIlB,ECUUC,GAAa,WAAH,OAAmB,SAACT,EAAUU,GACnD,IAAMlE,EAAgBkE,IAAyBC,KAAKnE,aACpD0D,EAAYU,gBAAgBlB,GAC5BM,EAASa,GAAQC,UAAUxD,OAAOyD,SAASvE,IAC3CwD,EAAS1C,IACX,CAAE,EA4DWuD,IAAUG,EAAAA,EAAAA,WAAU,CAC/BC,YAAa,UACbC,UA3DA,SADqC/D,GAAA,IAEnCgE,EAAOhE,EAAPgE,QAAOC,EAAAjE,EACPkE,eAAAA,OAAc,IAAAD,EAAG,SAACE,GAAO,OAAKA,CAAO,EAAAF,EAAA,sBAAAG,GAAAxB,EAAAA,EAAAA,UAMvC,UAAAnC,EAAA4D,GAAwD,IAA/CC,EAAI7D,EAAJ6D,KAAMC,EAAS9D,EAAT8D,UAAehB,EAAQc,EAARd,SAAUV,EAAQwB,EAARxB,SACtC,SAASsB,IACP,OAAOD,EAAe,IAAIM,QAAW,CACnCjB,SAAAA,EACAV,SAAAA,GAEJ,CACA,IACE,MAAO,CAAE4B,WAAYC,EAAAA,EAAAA,SAAQV,EAASM,EAAMC,QAAiBJ,KAC/D,CAAE,MAAOQ,GACP,GAAIA,aAAiBC,EAAAA,YAAa,CAAC,IAADC,EAChC,GACuB,OADvBA,EACEF,EAAMG,SAASC,SAAfF,EAAuBG,MACrB,SAACC,GAAC,IAAAC,EAAA,MAA4B,qBAAX,OAAZA,EAAAD,EAAEE,iBAAU,EAAZD,EAAcE,KAA0B,IAGjD,IACE,IAAM/F,EAAgBkE,IAAyBC,KAAKnE,aAC9CgG,QAAsBX,EAAAA,EAAAA,SAC1BV,EACAvC,EACA,CACEpC,aAAAA,IAIJ,OADAwD,EAASH,EAAa2C,EAAchG,eAC7B,CACLoF,WAAYC,EAAAA,EAAAA,SAAQV,EAASM,EAAMC,QAAiBJ,KAExD,CAAE,MAAOQ,GAEP,OADA9B,EAASS,MACF,CACLqB,MAAO,CACLlF,KAAM,gBACN6F,QAAS,oCAGf,CAGF,MAAO,CAAEX,MAAO,CAAElF,KADekF,EAAzBlF,KACgB6F,QADSX,EAAnBW,QACmBC,MADAZ,EAAVY,OAEzB,CACA,GAAIZ,aAAiBa,MACnB,MAAO,CAAEb,MAAO,CAAElF,KAAM,QAAS6F,QAASX,EAAMW,UAElD,MAAMX,CACR,CACF,IAAC,gBAAAxB,EAAAsC,GAAA,OAAArB,EAAAhB,MAAA,KAAAC,UAAA,EArDsC,EAqDtC,CAIUqC,CAA2B,CACpC1B,QAAS,oCACTE,eAAgB,SAACC,EAAOwB,GAAoB,IACpCvG,GAAemE,EADaoC,EAARpC,YACoBC,KAAKpE,YAInD,OAHIA,GACF+E,EAAQyB,IAAI,gBAAgB,UAAWxG,GAElC+E,CACT,IAEF0B,SAAU,CAAC,UACXlC,UAAW,SAACmC,GAAO,MAAM,CACvBC,OAAQD,EAAQE,SAAsC,CACpDC,MAAO,SAACC,GAAI,MAAM,CAChB5B,KAAMnD,EACNoD,UAAW,CAAE4B,MAAOD,GACrB,EACDE,kBAAmB,SAACtB,GAAkC,OACpDA,EAASiB,MAAM,IAEnBM,OAAQP,EAAQE,SAAsC,CACpDC,MAAO,SAACC,GAAI,MAAM,CAChB5B,KAAM/C,EACNgD,UAAW,CAAE4B,MAAOD,GACrB,EACDE,kBAAmB,SAACtB,GAAkC,OACpDA,EAASuB,MAAM,IAEnBlG,OAAQ2F,EAAQE,SAA0B,CACxCC,MAAO,SAAC5G,GAAY,MAAM,CACxBiF,KAAM3C,EACN4C,UAAW,CAAElF,aAAAA,GACd,IAEHiH,OAAQR,EAAQG,MAAyB,CACvCA,MAAO,iBAAO,CACZ3B,KAAMzC,EACP,EACDuE,kBAAmB,SAACtB,GAAiC,OAAKA,EAASwB,MAAM,EACzEC,aAAc,iBAAM,CAAC,SAAS,IAEhCC,YAAaV,EAAQE,SAAgC,CACnDC,MAAO,SAACQ,GAAK,MAAM,CACjBnC,KAAMvC,EACNwC,UAAW,CAAEkC,MAAAA,GACd,EACDL,kBAAmB,SAACtB,GAAwC,OAC1DA,EAAS0B,WAAW,EACtBE,gBAAiB,CAAC,YAEpBC,WAAYb,EAAQE,SAAS,CAC3BC,MAAO,SAACW,GAAQ,MAAM,CACpBtC,KAAMrC,EACNsC,UAAW,CAAEqC,SAAAA,GACd,EACDR,kBAAmB,SAACtB,GAAsC,OACxDA,EAAS6B,UAAU,IAEvBE,KAAMf,EAAQG,MAAwB,CACpCA,MAAO,SAACa,GAAM,MAAM,CAClBxC,KAAMjC,EACNkC,UAAW,CAAEuC,OAAAA,GACd,EACDV,kBAAmB,SAACtB,GAA4B,OAAKA,EAAS+B,IAAI,EAC5DE,kBAAiB,eAAAC,GAAApE,EAAAA,EAAAA,UAAC,UACtBkE,EAAMG,GAEL,IADCC,EAAgBD,EAAhBC,iBAAkBC,EAAeF,EAAfE,gBAAiBC,EAAiBH,EAAjBG,kBAE/BC,GAASC,EAAAA,EAAAA,cAAa,CAC1BC,IAAK,qCAGP,UACQJ,QAEA,IAAIK,SAAQ,SAACC,EAASC,GAC1BL,EAAOM,UACL,CACE1B,MAAM,sCAAuCa,EAAM,qDAErD,CACEc,KAAM,SAAC1H,GACLgH,GAAiB,WACf,OAAOhH,EAAQuE,KAAKoD,UACtB,GACF,EACAlD,MAAO+C,EACPI,SAAU,kBAAML,CAAO,GAG7B,GACF,CAAE,MAAOM,GACPC,QAAQC,IAAIF,EACd,OAEMX,EACNC,EAAOa,SACT,IAAC,gBAAAC,EAAAC,GAAA,OAAApB,EAAA5D,MAAA,KAAAC,UAAA,EAjCsB,KAmCzBgF,WAAYvC,EAAQE,SAAoC,CACtDC,MAAO,SAACY,GAAI,MAAM,CAChBvC,KAAMnC,EACNoC,UAAW,CACTuC,OAAQD,EAAKC,OACbwB,SAAUzB,EAAKyB,SACfC,YAAa1B,EAAK0B,aAErB,EACDnC,kBAAmB,SAACtB,GAAsC,OACxDA,EAASuD,UAAU,IAExB,IAIDG,GAME9E,GANF8E,kBACAC,GAKE/E,GALF+E,kBACAC,GAIEhF,GAJFgF,eACAC,GAGEjF,GAHFiF,sBACAC,GAEElF,GAFFkF,aACAC,GACEnF,GADFmF,sB,WCnMWC,IAAaC,EAAAA,EAAAA,kBACxB,oBAAoB,WAAD,IAAAtI,GAAAmC,EAAAA,EAAAA,UACnB,UAAO7C,EAACC,GAA2B,IAAvBgJ,EAAehJ,EAAfgJ,gBACV,IAEE,aLMJ,IAAIxB,SAAQ,SAACC,EAASC,GACpBzG,EAAGgI,aAAY,SAACC,GACdA,EAAGC,WACD,2DACA,IACA,SAACpJ,EAAGqJ,GACF3B,EAAQ2B,EACV,IACA,SAACrJ,EAAGgI,GAEF,OADAL,EAAOK,IACA,CACT,GAEJ,GACF,KKpBoBsB,KAAKC,MACvB,CAAE,MAAOvB,GACP,OAAOiB,EAAgBjB,EACzB,CACF,IAAC,gBAAA5E,EAAAsC,GAAA,OAAAhF,EAAA2C,MAAA,KAAAC,UAAA,EARmB,IAWTmD,IAAcuC,EAAAA,EAAAA,kBACzB,qBAAqB,WAAD,IAAA3E,GAAAxB,EAAAA,EAAAA,UACpB,UAAO2G,EAAgClF,GAAqC,IAAjCxB,EAAQwB,EAARxB,SAAUmG,EAAe3E,EAAf2E,gBACnDnG,EAASa,GAAQC,UAAU6C,YAAY5C,SAAS2F,EAAS9C,QACzD,IACE,IAAM+C,QLUoB,SAACD,GAAgC,OAC/D,IAAI/B,SAAQ,SAACC,EAASC,GACpBzG,EAAGgI,aAAY,SAACC,GACdA,EAAGC,WACD,sDACA,CAACI,EAAS3C,SAAU2C,EAAS9C,QAC7B,SAAC1G,EAAGqJ,GACF3B,EAAQ2B,EACV,IACA,SAACrJ,EAAGgI,GAEF,OADAL,EAAOK,IACA,CACT,GAEJ,GACF,GAAG,CKzByB0B,CAAiBF,GACzC,MAAO,CACLG,IAAKF,EAASG,SAAUC,WACxBnD,MAAO8C,EAAS9C,MAChBG,SAAU2C,EAAS3C,SAEvB,CAAE,MAAOmB,GACP,OAAOiB,EAAgBjB,EACzB,CAAC,QACC8B,GAAAA,QAAAA,WAAwBrH,GACxBK,EAASlC,IACX,CACF,IAAC,gBAAAwH,EAAAC,GAAA,OAAAhE,EAAAhB,MAAA,KAAAC,UAAA,EAhBoB,IAiCvB,UAdoB7D,EAAAA,EAAAA,aAAY,CAC9BC,KAAM,SACNP,aAtCgC,CAChC4K,YAAa,IAsCbpK,SAAU,CAAC,EACXqK,cAAe,SAACjE,GACdA,EAAQkE,QAAQxD,GAAYyD,WAAW,SAACrK,EAAK+F,GAAmB,IAAfzF,EAAOyF,EAAPzF,QAC/CN,EAAMkK,YAAclK,EAAMkK,YAAYI,OAAOhK,EAC/C,IACE4F,EAAQkE,QAAQlB,GAAWmB,WAAW,SAACrK,EAAKqH,GAAmB,IAAf/G,EAAO+G,EAAP/G,QAC9CN,EAAMkK,YAAc5J,CACtB,GACJ,IAGgC,QC5ClC,UAZciK,EAAAA,EAAAA,gBAAe,CAC3BC,SAAOC,EAAAA,EAAAA,SAAA,CACL7G,KAAMjE,EACNsH,KAAMvG,EACNgK,SAAUzJ,EACVyF,OAAQiE,IACP7G,GAAQI,YAAcJ,GAAQ0G,SAEjCI,WAAY,SAACC,GAAoB,OAC/BA,IAAuBP,OAAOxG,GAAQ8G,WAAW,I,0BChBxCE,GAA0C,CACrD,KAAM,cACN,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,UACH,EAAG,WAGOC,GAAS,SAATA,GAAS,OAATA,EAAS,kBAATA,EAAS,aAATA,EAAS,kBAATA,EAAS,uBAATA,EAAS,sBAATA,EAAS,mBAATA,EAAS,gBAATA,CAAS,M,uDCcrB,SAjB2B,SAAH3K,GAA+C,IAAzC4K,EAAQ5K,EAAR4K,SAC5B,OACEC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOC,OAAOL,SAAA,EACzBM,EAAAA,GAAAA,KAACC,GAAAA,QAAS,CAACJ,MAAM,WACjBG,EAAAA,GAAAA,KAACE,GAAAA,eAAc,CACbL,MAAOC,GAAOK,WACdC,OAAQ,CACNX,GAAUY,aACVZ,GAAUa,QACVb,GAAUc,eAGbb,IAGP,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/BT,OAAQ,CACNU,KAAM,GAERN,WAAY,CACVO,SAAU,WACVC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,K,gnBC1BZ,SAJoB,SAAHhM,GAA+C,IAAzC4K,EAAQ5K,EAAR4K,SAAUG,EAAK/K,EAAL+K,MAC/B,OAAOG,EAAAA,GAAAA,KAACe,GAAAA,QAAI,CAAClB,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOkB,MAASnB,GAAQH,SAAEA,GACrD,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/BQ,KAAM,CACJC,WAAY,a,mnBC2BhB,SA1BsB,SAAHnM,GAKK,IAJtB4K,EAAQ5K,EAAR4K,SACAG,EAAK/K,EAAL+K,MACAqB,EAASpM,EAAToM,UACGC,GAAKC,EAAAA,GAAAA,SAAAtM,EAAAuM,IAER,OACErB,EAAAA,GAAAA,KAACsB,GAAAA,QAAgB3M,GAAAA,GAAA,CACfkL,MAAO,CAACC,GAAOyB,OAAQ1B,GACvB2B,cAAe,IACXL,GAAK,IAAAzB,UAETC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO2B,oBAAoB/B,SAAA,CACrCyB,EAAMO,WACL1B,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAO6B,cAAcjC,UAChCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAO8B,UAGxB5B,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOgC,YAAeZ,GAAYxB,SACxDA,SAKX,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/Be,OAAQ,CACNQ,gBAAiB,GACjBC,kBAAmB,GACnBC,aAAc,IAEhBN,cAAe,CACbjB,SAAU,WACVG,IAAK,EACLC,OAAQ,EACRH,KAAM,EACNC,MAAO,EACPsB,eAAgB,SAChBC,OAAQ,GAEVP,KAAM,CACJQ,kBAAmB,EACnBC,YAAa,OAEfZ,oBAAqB,CACnBa,UAAW,UAEbR,WAAY,CACVS,MAAO,QACPR,gBAAiB,EACjBS,SAAU,M,0lBC5Cd,SAAeC,EAAAA,MAXI,SAAH3N,GAAwD,IAAlD4N,EAAY5N,EAAZ4N,aAAcC,EAAI7N,EAAJ6N,KAAM9C,EAAK/K,EAAL+K,MACxC,OACEG,EAAAA,GAAAA,KAACsB,GAAAA,QAAgB,CACfsB,QAASF,EACT7C,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOyB,QAAW1B,GAAQH,UAEtCM,EAAAA,GAAAA,KAAC6C,GAAAA,QAAK,CAAChD,MAAOC,GAAO6C,KAAMG,WAAW,QAAQC,OAAQJ,KAG5D,IAIA,IAAM7C,GAASU,GAAAA,QAAAA,OAAkB,CAC/Be,OAAQ,CACNyB,MAAO,GACPC,OAAQ,IAEVN,KAAM,CACJK,MAAO,OACPC,OAAQ,U,iCCuBZ,SAAeR,EAAAA,MAzCW,SAAH3N,GAGQ,IAF7BoO,EAAQpO,EAARoO,SACAC,EAAkBrO,EAAlBqO,mBAEA,OACEnD,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOsD,2BAA2B1D,UAC7CC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOuD,kBAAkB3D,SAAA,EACpCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOwD,eAAe5D,UACjCM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOyD,MAAM7D,SAAC,kBAEpCC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO0D,kBAAkB9D,SAAA,EACpCM,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAO,CACLC,GAAOoD,SACM,UAAbA,GAAwBpD,GAAO4D,kBAEjCxC,UAAW,CAAEqB,MAAoB,UAAbW,EAAuB,QAAU,SACrDN,QAAS,WACPO,EAAmB,QACrB,EAAEzD,SACH,WAGDM,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAO,CACLC,GAAOoD,SACM,WAAbA,GAAyBpD,GAAO4D,kBAElCxC,UAAW,CAAEqB,MAAoB,WAAbW,EAAwB,QAAU,SACtDN,QAAS,WACPO,EAAmB,SACrB,EAAEzD,SACH,kBAOX,IAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/B4C,2BAA4B,CAC1BO,WAA4B,YAAhBC,GAAAA,QAAAA,GAA4B3D,GAAAA,QAAAA,cAA0B,EAClE4D,gBAAiB,QAEnBR,kBAAmB,CACjBnB,eAAgB,WAChB4B,WAAY,SACZD,gBAAiB,OACjBZ,OAA0C,GAAlCc,GAAAA,QAAAA,IAAe,UAAUd,QAEnCK,eAAgB,CACdU,cAAe,MACfF,WAAY,UAEdP,MAAO,CACLhB,MAAO,QACPC,SAAU,IAEZgB,kBAAmB,CACjBQ,cAAe,MACfjC,gBAAiB,IAEnBmB,SAAU,CACRzC,KAAM,EACNoD,gBAAiB,SAEnBH,iBAAkB,CAChBG,gBAAiB,QACjB5B,aAAc,M,+kBC7ElB,SAJa,SAAHnN,GAAwC,IAAlC4K,EAAQ5K,EAAR4K,SAAUG,EAAK/K,EAAL+K,MACxB,OAAOG,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOmE,MAASpE,GAAQH,SAAEA,GACrD,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/ByD,KAAM,CACJJ,gBAAiB,QACjB5B,aAAc,GACdiC,YAAa,QACbC,cAAe,IACfC,aAAc,CAAEpB,MAAO,EAAGC,OAAQ,GAClCoB,aAAc,EACdC,UAAW,K,omBCtBR,IAAKC,GAAe,SAAfA,GAAe,OAAfA,EAAe,4BAAfA,EAAe,wBAAfA,CAAe,MAqBdC,GAAe,SAC1B9P,EACA+P,GAEA,OAAQA,EAAOC,MACb,KAAKH,GAAgBI,aACnB,OAAAhQ,GAAAA,GAAA,GACKD,GAAK,IACRkQ,MAAOH,EAAOG,MACdC,QAASJ,EAAOI,UAEpB,KAAKN,GAAgBO,WACnB,OAAAnQ,GAAAA,GAAA,GACKD,GAAK,IACRqQ,SAAS,IAGb,QACE,OAAOrQ,EAEb,E,+kBC4CA,SAAe+N,EAAAA,MAjED,SAACtB,GAAwC,IAAD6D,EAAAC,EACpDC,GAA+BC,EAAAA,EAAAA,YAAWX,GAAc,CACtDI,MAA0B,OAArBI,EAAO,MAAL7D,OAAK,EAALA,EAAOiE,cAAYJ,EAAI,GAC9BH,QAA8B,OAAvBI,EAAO,MAAL9D,OAAK,EAALA,EAAOkE,iBAAcJ,EAC9BF,SAAS,IACTO,GAAAC,EAAAA,GAAAA,SAAAL,EAAA,GAJKM,EAAUF,EAAA,GAAE3N,EAAQ2N,EAAA,GAMnBG,EAAsBtE,EAAtBsE,GAAIC,EAAkBvE,EAAlBuE,eAEZC,EAAAA,EAAAA,YAAU,WACJH,EAAWT,SACbW,EAAcvE,EAAMsE,GAAID,EAAWZ,MAAOY,EAAWX,QAEzD,GAAG,CAACY,EAAID,EAAYE,IAiCpB,OACE/F,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO8F,QAAQlG,SAAA,EAC1BM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAO+F,MAAMnG,SAAEyB,EAAM0E,SACzC7F,EAAAA,GAAAA,KAAC8F,GAAAA,QAASnR,GAAAA,GAAA,GACJwM,GAAK,IACTtB,MAAOC,GAAO7E,MACd2J,MAAOY,EAAWZ,MAClBmB,aAtCqB,SAAC/E,GAC1B,IAEI6D,GAAU,EACV1D,EAAM6E,UAAmC,IAAvBhF,EAAKiF,OAAOC,SAChCrB,GAAU,GAER1D,EAAMgF,QALR,0JAK6BC,KAAKpF,EAAKqF,iBACvCxB,GAAU,GAEK,MAAb1D,EAAMmF,MAAgBtF,EAAOG,EAAMmF,MACrCzB,GAAU,GAEK,MAAb1D,EAAMoF,MAAgBvF,EAAOG,EAAMoF,MACrC1B,GAAU,GAEW,MAAnB1D,EAAMqF,WAAqBxF,EAAKkF,OAAS/E,EAAMqF,YACjD3B,GAAU,GAGZlN,EAAS,CACP+M,KAAMH,GAAgBI,aACtBC,MAAO5D,EACP6D,QAAAA,GAEJ,EAcM4B,OAZmB,WACvB9O,EAAS,CAAE+M,KAAMH,GAAgBO,YACnC,MAYMU,EAAWX,SAAWW,EAAWT,UACjC/E,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAO4G,eAAehH,UACjCM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOrG,MAAMiG,SAAEyB,EAAMwF,gBAKnD,IAIA,IAAM7G,GAASU,GAAAA,QAAAA,OAAkB,CAC/BoF,QAAS,CACP5C,MAAO,QAET6C,MAAO,CACLtD,MAAO,OACPC,SAAU,GACVoE,eAAgB,GAElB3L,MAAO,CACL+G,kBAAmB,EACnBD,gBAAiB,EACjB8E,kBAAmB,OACnBzE,kBAAmB,EACnBI,SAAU,GACVD,MAAO,SAETmE,eAAgB,CACdE,eAAgB,GAElBnN,MAAO,CACL8I,MAAO,MACPC,SAAU,M,oxBClFd,SAAeC,EAAAA,MAjBF,SAAH3N,GAA4C,IAAtC4P,EAAI5P,EAAJ4P,KAAM1B,EAAKlO,EAALkO,MAAO8D,EAAMhS,EAANgS,OAC3B,OACE9G,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CACHC,MAAKlL,GAAAA,GAAA,GACAmL,GAAOiH,MACP,CACD3E,kBAAmB0E,EAAS,EAAI,EAChCzE,YAAayE,EAAS,QAAU,GAChC9D,MAAAA,EACAC,OAAQD,EACRa,gBAAiBrE,GAAakF,MAKxC,IAIA,IAAM5E,GAASU,GAAAA,QAAAA,OAAkB,CAC/BuG,KAAM,CAON,I,+kBC1BK,IAAMC,GAA8C,IAAjCjD,GAAAA,QAAAA,IAAe,UAAUf,MAyCnD,SAAeP,EAAAA,MAvCD,SAAH3N,GAA6D,IAAvDyO,EAAKzO,EAALyO,MAAO0D,EAAKnS,EAALmS,MAAOC,EAAqBpS,EAArBoS,sBACvBC,EACJF,IACAG,EAAAA,GAAAA,SAAIH,GAAOI,KAAI,SAAC3C,EAAM4C,GAAG,OACvBtH,EAAAA,GAAAA,KAACuH,GAAI,CAEH7C,KAAgB,KAATA,GAAcwC,GAAyB,GAAKxC,EACnD1B,MAAOgE,GAAa,EACpBF,QAASI,GAAsB,KAHrBI,EAIV,IAGN,OACE3H,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA9H,SAAA,EACEM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOyD,MAAM7D,SAAE6D,KACnCvD,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CACHC,MAAKlL,GAAAA,GAAA,GACAmL,GAAO2H,gBACP,CACDpF,YAAa6E,EAAwB,GAAK,OAC1CQ,YAAaR,EAAwB,EAAI,IAE3CxH,UAEFM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CACHC,MAAKlL,GAAAA,GAAA,GACAmL,GAAOmH,OACP,CACDpD,gBAAiBqD,EAAwB,GAAK,SAEhDxH,SAEDyH,QAKX,IAIA,IAAMrH,GAASU,GAAAA,QAAAA,OAAkB,CAC/BiH,eAAgB,CACdE,aAAc,IAEhBpE,MAAO,CACLhB,MAAO,OACPC,SAAU,GACVoF,UAAW,UAEbX,MAAO,CACLjE,MAAOgE,GACP/D,OAAQ+D,GACRhD,cAAe,MACf6D,SAAU,UCzDRC,GAAkB/D,GAAAA,QAAAA,IAAe,UAAUd,OAAS+D,GACpDe,GAAiBhE,GAAAA,QAAAA,IAAe,UAAUf,MAAQgE,GA6CxD,SA3C2B,SAAHlS,GAA+C,IAAzC4K,EAAQ5K,EAAR4K,SACtBsI,GAASC,EAAAA,EAAAA,QAAOC,OAAOC,OAAOC,KAAaC,QACjDC,GAAgCC,EAAAA,EAAAA,UAC9BC,KAAKC,MAAMD,KAAKE,SAAWX,KAC5BY,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAFMM,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAGtBG,GAAcb,EAAAA,EAAAA,QAAO,IAAIc,GAAAA,QAAAA,MAAe,IAAIV,QAoBlD,OAlBA1C,EAAAA,EAAAA,YAAU,YACU,SAAZqD,IACJD,GAAAA,QAAAA,OAAgBD,EAAa,CAC3BG,QAASnB,GACToB,SAAU,IACVC,iBAAiB,IAChBC,OAAM,SAAA7T,GAAWA,EAAR8T,WAERR,EAAYL,KAAKC,MAAMD,KAAKE,SAAWX,KACvCe,EAAYQ,SAAS,GACrBN,IAEJ,GACF,CAEAA,EACF,GAAG,KAGDrJ,EAAAA,GAAAA,MAAC4J,GAAkB,CAAA7J,SAAA,EACjBM,EAAAA,GAAAA,KAAC+I,GAAAA,QAAAA,KAAa,CACZlJ,MAAO,CACLc,KAAMiI,EACNY,UAAW,CAAC,CAAEC,WAAYX,KAC1BpJ,UAEFM,EAAAA,GAAAA,KAAC0J,GAAK,CACJzC,MAAOe,EAAOQ,KAAKC,MAAMD,KAAKE,SAAWV,EAAO9B,SAChDgB,uBAAqB,MAGxBxH,IAGP,EAIec,GAAAA,QAAAA,OAAkB,CAC/BmJ,cAAe,CACbjJ,SAAU,WACVG,IAAK,KAHT,I,4CClDA,SAR0C,CACxC,EAAG,EACH,EAAG,IACH,EAAG,IACH,EAAG,IACH,EAAG,KCLkC,IAEjC+I,GAAK,WAST,SAAAA,EACEC,GAIC,IAHDrU,EAAY2C,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG,EACf4R,EAAY5R,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG,EACf6R,EAAY7R,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG,GAAC8R,EAAAA,GAAAA,SAAA,KAAAL,GAEhBM,KAAKC,cAAgB3U,EACrB0U,KAAKE,OAAS5U,EACd0U,KAAKG,OAASN,EACdG,KAAKI,OAASN,EACdE,KAAKK,OAAqB,MAAZV,EAAAA,EAAgBK,KAAKM,MACrC,CAoEC,OApEAC,EAAAA,GAAAA,SAAAb,EAAA,EAAAc,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKK,MACd,GAAC,CAAAG,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKG,MACd,GAAC,CAAAK,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKE,MACd,GAAC,CAAAM,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKI,MACd,GAAC,CAAAI,IAAA,OAAA9F,MAED,WAEE,IADA,IAAMgG,EAAQ,IAAIC,WAAWjB,EAAMkB,EAAIlB,EAAMmB,GACpCC,EAAS,EAAGA,EAASpB,EAAMkB,EAAGE,GAAU,EAC/C,IAAK,IAAIC,EAAS,EAAGA,EAASrB,EAAMmB,EAAGE,GAAU,EAC/CL,EAAMI,EAASpB,EAAMmB,EAAIE,GACZ,IAAXA,GAAgBA,IAAWrB,EAAMmB,EAAI,GAAKC,IAAWpB,EAAMkB,EAAI,EAC3D,EACA,EAEV,OAAOF,CACT,GAAC,CAAAF,IAAA,aAAA9F,MAGD,SAAWsG,GAGT,IAFA,IAAIC,EAAe,EAEVC,EAAWF,EAASE,EAAWxB,EAAMkB,EAAI,EAAGM,GAAY,EAAG,CAElE,IADA,IAAIC,GAAW,EACNJ,EAAS,EAAGA,EAASrB,EAAMmB,EAAGE,GAAU,EAC/C,GAC+C,IAA7Cf,KAAKK,OAAOa,EAAWxB,EAAMmB,EAAIE,SACYnB,IAA7CI,KAAKK,OAAOa,EAAWxB,EAAMmB,EAAIE,GACjC,CACAI,GAAW,EACX,KACF,CAGF,GAAIA,EAAU,CAEZ,IAAK,IAAIC,EAAWF,EAAUE,EAAW,EAAGA,GAAY,EACtD,IAAK,IAAIL,EAAS,EAAGA,EAASrB,EAAMmB,EAAI,EAAGE,GAAU,EACnDf,KAAKU,MAAMU,EAAW1B,EAAMmB,EAAIE,GAC9Bf,KAAKU,OAAOU,EAAW,GAAK1B,EAAMmB,EAAIE,GAE5CE,IACAjB,KAAKG,QACP,CACF,CAEAH,KAAKI,QAAUJ,KAAKqB,MAAQJ,EAAeK,GAAOL,GAElDjB,KAAKE,OAAS5B,KAAKC,OAAOyB,KAAKuB,MAAQ,IAAM,KAAOvB,KAAKC,cAAgB,EAC3E,GAAC,CAAAO,IAAA,QAAA9F,MAED,WACEsF,KAAKI,OAAS,EACdJ,KAAKG,OAAS,EACdH,KAAKE,OAASF,KAAKC,cACnBD,KAAKK,OAASL,KAAKM,MACrB,KAACZ,CAAA,CAxFQ,GAALA,GAMGmB,EAAI,GANPnB,GAOGkB,EAAI,GAoFb,YC7F4B,IAAAP,IAAAmB,EAAAA,GAAAA,SAAA,SAGtBhC,GAAK,WAUT,SAAAA,EAAYiC,EAAcf,IAAcX,EAAAA,GAAAA,SAAA,KAAAP,GAAAxB,OAAA0D,eAAA,KAAArB,GAAA,CAAAsB,UAAA,EAAAjH,WAAA,IACtCsF,KAAK4B,EAAIH,EAAMG,EACf5B,KAAK6B,EAAIJ,EAAMI,EACf7B,KAAK8B,EAAIL,EAAMK,EACf9B,KAAK+B,OAASN,GACdO,EAAAA,GAAAA,SAAAhC,KAAIK,IAAAA,IAAUK,EACdV,KAAKiC,UAAW,CAClB,CAmGC,OAnGA1B,EAAAA,GAAAA,SAAAf,EAAA,EAAAgB,IAAA,QAAAC,IAED,WACE,OAAOT,KAAK+B,OAAON,KACrB,GAAC,CAAAjB,IAAA,QAAAC,IAED,WACE,OAAOuB,EAAAA,GAAAA,SAAAhC,KAAIK,IAAAA,IAAQK,KACrB,GAAC,CAAAF,IAAA,QAAA9F,MAED,WACEsF,KAAK4B,EAAI5B,KAAK+B,OAAOH,EACrB5B,KAAK6B,EAAI7B,KAAK+B,OAAOF,EACrB7B,KAAK8B,EAAI9B,KAAK+B,OAAOD,EACrB9B,KAAKiC,UAAW,CAClB,GAAC,CAAAzB,IAAA,SAAA9F,MAED,SAAOwH,EAAiBlB,EAAiBc,GACvC,OAAQA,EAAI,GACV,KAAK,EAEH,OAAOtC,EAAMqB,GAAKrB,EAAMqB,EAAI,GAAKG,EAAUxB,EAAMqB,EAAIqB,EACvD,KAAK,EAEH,OAAO1C,EAAMqB,EAAIrB,EAAMqB,EAAI,EAAIrB,EAAMqB,EAAIG,EAAUkB,EACrD,KAAK,EAEH,OAAO1C,EAAMqB,EAAI,EAAIG,EAAUxB,EAAMqB,EAAIqB,EAC3C,QAEE,OAAO1C,EAAMqB,EAAIG,EAAUkB,EAEjC,GAAC,CAAA1B,IAAA,WAAA9F,MAED,WACE,IADwD,IAAjDyH,EAAKlU,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG+R,KAAK4B,EAAGQ,EAAKnU,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG+R,KAAK6B,EAAGQ,EAAKpU,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG+R,KAAK8B,EAC3Cd,EAAU,EAAGA,EAAUxB,EAAMqB,EAAGG,GAAW,EAClD,IAAK,IAAIkB,EAAU,EAAGA,EAAU1C,EAAMqB,EAAGqB,GAAW,EAClD,GACwD,KAArDlC,KAAKyB,MAAMzB,KAAKsC,OAAOJ,EAASlB,EAASqB,KACsB,IAAhErC,KAAKU,OAAOM,EAAUoB,GAAS1C,GAAAA,GAAWwC,EAAUC,IAEpD,OAAO,EAEb,OAAO,CACT,GAAC,CAAA3B,IAAA,OAAA9F,MAED,WACE,IAAK,IAAIsG,EAAU,EAAGA,EAAUxB,EAAMqB,EAAGG,GAAW,EAClD,IAAK,IAAIkB,EAAU,EAAGA,EAAU1C,EAAMqB,EAAGqB,GAAW,EACS,KAAtDlC,KAAKyB,MAAMzB,KAAKsC,OAAOJ,EAASlB,EAAShB,KAAK8B,MACjD9B,KAAKU,OAAOM,EAAUhB,KAAK6B,GAAKnC,GAAAA,GAAWwC,EAAUlC,KAAK4B,KACvD5B,KAAKyB,MAAMzB,KAAKsC,OAAOJ,EAASlB,EAAShB,KAAK8B,IAEzD,GAAC,CAAAtB,IAAA,WAAA9F,MAGD,WACE,GAAIsF,KAAKuC,SAASvC,KAAK4B,EAAG5B,KAAK6B,EAAI,GAIjC,OAHA7B,KAAKiC,UAAW,EAChBjC,KAAKwC,YACLR,EAAAA,GAAAA,SAAAhC,KAAIK,IAAAA,IAAQoC,WAAWzC,KAAK6B,GAG9B7B,KAAK6B,GAAK,CACZ,GAAC,CAAArB,IAAA,WAAA9F,MAED,WACEsF,KAAK4B,GAAM5B,KAAKuC,SAASvC,KAAK4B,EAAI,GAAS,EAAJ,CACzC,GAAC,CAAApB,IAAA,YAAA9F,MAED,WACEsF,KAAK4B,GAAM5B,KAAKuC,SAASvC,KAAK4B,EAAI,GAAS,EAAJ,CACzC,GAAC,CAAApB,IAAA,WAAA9F,MAED,WAAsC,IAArBgI,EAAMzU,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG,EAExB,OACG+R,KAAKuC,SAASvC,KAAK4B,EAAIc,EAAQ1C,KAAK6B,EAAG7B,KAAK8B,EAAI,IACjDY,GAAU,GACVA,EAAS,EAEFA,EAGA1C,KAAK2C,SAAUD,GAAU1C,KAAK4B,EAAIlC,GAAAA,EAAU,GAAK,EAAI,EAEhE,GAAC,CAAAc,IAAA,cAAA9F,MAED,WAEE,IAAMgI,EAAS1C,KAAK2C,WACf3C,KAAKuC,SAASvC,KAAK4B,EAAI5B,KAAK2C,WAAY3C,KAAK6B,EAAG7B,KAAK8B,EAAI,KAC5D9B,KAAK4B,GAAKc,EACV1C,KAAK8B,GAAK,EAEd,GAAC,CAAAtB,IAAA,WAAA9F,MAED,WACE,MAAQsF,KAAKiC,UAAUjC,KAAK4C,UAC9B,KAACpD,CAAA,CApHQ,GAALA,GAQGqB,EAAI,EA+Gb,Y,+kBC5CA,SAjEc,SAAHjW,GAA8D,IAAxDiY,EAASjY,EAATiY,UAAWnC,EAAK9V,EAAL8V,MAAOoC,EAAUlY,EAAVkY,WAAYlG,EAAMhS,EAANgS,OACvCmG,GAAYC,EAAAA,EAAAA,UAAQ,kBAAM1E,KAAKC,MAAMuE,EAAaG,GAAAA,EAAa,GAAE,IAEjEC,GAAYF,EAAAA,EAAAA,UAChB,kBACEtC,EAAMvD,KAAI,SAAC3C,EAAM4C,GACf,OACEtH,EAAAA,GAAAA,KAACuH,GAAI,CAEH7C,KAAMA,EACN1B,MAAOiK,EACPnG,OAAQA,GAAO,KAHLQ,EAMhB,GAAE,GACJ,CAACsD,IAGGyC,GAAYC,EAAAA,EAAAA,cAChB,SAAC1C,EAAsB3D,EAAcsG,GACnC,IADyE,IAArBC,EAAOrV,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,IAAAA,UAAA,GAClD+S,EAAU,EAAGA,EAAUxB,GAAAA,EAASwB,GAAW,EAClD,IAAK,IAAIkB,EAAU,EAAGA,EAAU1C,GAAAA,EAAS0C,GAAW,EAAG,CACrD,IAAMqB,GACHF,EAAUrC,GAAWiC,GAAAA,GAAgBlG,EAAM6E,EAAIM,GAC5CsB,EAASzG,EAAMuF,OAAOJ,EAASlB,EAASjE,EAAM+E,GACvB,KAAxB/E,EAAM0E,MAAM+B,KACf9C,EAAM6C,IACJzN,EAAAA,GAAAA,KAACuH,GAAI,CAEH7C,KAAM8I,EAAU,GAAKvG,EAAM0E,MAAM+B,GACjC1K,MAAOiK,EACPnG,OAAQA,GAAO,KAHL2G,GAMlB,CACJ,GACA,IAGIE,GAAYL,EAAAA,EAAAA,cAAY,SAAC1C,EAAsB3D,GAInD,IAHA,IAAI2G,GAAQxG,EAAAA,GAAAA,SAAOwD,GAEfiD,EAAU,KACLJ,EAASN,GAAAA,EAAe,EAAGM,EAASxG,EAAM8E,EAAG0B,GAAU,EACzDxG,EAAMwF,SAASxF,EAAM6E,EAAG2B,KAC7BI,EAAUJ,EAAS,GAQrB,OAJAI,GAAWR,EAAUO,EAAU3G,EAAO4G,GAAS,GAE/CR,EAAUO,EAAU3G,EAAOA,EAAM8E,GAE1B6B,CACT,GAAG,IAEH,OACE5N,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOgO,cAAcpO,UAChCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOiO,MAAI,IAAE/K,MAAOgK,IAAatN,SAChDqN,EAAYY,EAAUP,EAAWL,GAAaK,KAIvD,EAIA,IAAMtN,GAASU,GAAAA,QAAAA,OAAkB,CAC/BsN,cAAe,CACb5L,eAAgB,SAChB4B,WAAY,UAEdiK,KAAM,CACJ/J,cAAe,MACf6D,SAAU,UCrCd,SAhDoB,SAAC0D,EAAeyC,EAAoBC,GACtD,IAAMC,GAASjG,EAAAA,EAAAA,QAAsB,MAC/BkG,GAAgBjB,EAAAA,EAAAA,UAAQ,kBAAM,IAAO3B,CAAK,GAAE,CAACA,IAC7C6C,GAAcnG,EAAAA,EAAAA,QAAOoG,YAAYC,OACjCC,GAAStG,EAAAA,EAAAA,QAAO,GAChBuG,GAAUvG,EAAAA,EAAAA,SAAO,GAEjBwG,EAAW,SAAXA,EAAYC,GAChB,IAAMC,EAA2BD,EAAON,EAAY/F,QACpD+F,EAAY/F,QAAUqG,EACtBH,EAAOlG,SAAWsG,EAGlB,IAFA,IAAIC,EAAQ,EAELL,EAAOlG,SAAW8F,GAKvB,GAHAH,IACAO,EAAOlG,SAAW8F,IAEZS,EAAQ,IAAK,CACjBL,EAAOlG,QAAU,EACjB,KACF,CAKEuG,GAAOX,IACXC,EAAO7F,QAAUwG,sBAAsBJ,EACzC,EAiBA,MAAO,CAAErF,OAfKkE,EAAAA,EAAAA,cAAY,WACnBkB,EAAQnG,UACXmG,EAAQnG,SAAU,EAElB+F,EAAY/F,QAAUgG,YAAYC,MAClCC,EAAOlG,QAAU,EACjB6F,EAAO7F,QAAUwG,sBAAsBJ,GAE3C,GAAG,CAACD,EAAQnG,QAASkD,IAOLuD,MALHxB,EAAAA,EAAAA,cAAY,WACvBkB,EAAQnG,SAAU,EAClB6F,EAAO7F,SAAW0G,qBAAqBb,EAAO7F,QAChD,GAAG,IAGL,E,qCC7Ca2G,GAAiB,WAAH,OAASC,EAAAA,EAAAA,cAA2B,EAClDC,GAAkDC,EAAAA,YC8C/D,SAtCuB,SAAHra,GAIQ,IAH1B4N,EAAY5N,EAAZ4N,aACAC,EAAI7N,EAAJ6N,KAAIyM,EAAAta,EACJua,SAAAA,OAAQ,IAAAD,EAAG,QAAOA,EAEZE,GAAQrH,EAAAA,EAAAA,QAA8B,MACtCsH,EAAmBL,IAAe,SAACxa,GAAK,OAAKA,EAAM0K,SAASvJ,OAAO,IAmBzE,OACEmK,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAO0P,gBAAgB9P,UAClCM,EAAAA,GAAAA,KAACsB,GAAAA,QAAgB,CACfmO,UApBgB,SAAhBC,IACJ,GAAIH,EACF,GACO,WADCF,EAEJM,GAAQC,YAAYD,GAAAA,oBAAAA,aAGpBA,GAAQE,iBAGdnN,IACA4M,EAAMjH,QAAUyH,WAAWJ,EAAe,IAC5C,EASMK,WARiB,WACrBC,aAAaV,EAAMjH,QACrB,EAOMxI,MAAOC,GAAOmQ,eAAevQ,UAE7BM,EAAAA,GAAAA,KAACkQ,GAAAA,QAAW,CAAC3b,KAAMoO,EAAMwN,KAAM,GAAI5N,MAAM,wBAIjD,EAIA,IAAMzC,GAASU,GAAAA,QAAAA,OAAkB,CAC/BgP,gBAAiB,CACftN,eAAgB,SAChB4B,WAAY,SACZsM,OAAQ,GAEVH,eAAgB,CACd/N,eAAgB,SAChB4B,WAAY,SACZD,gBAAiB,SACjBb,MAAO,GACPC,OAAQ,GACRyE,YAAa,EACbrF,YAAa,QACbJ,aAAc,GACdoC,aAAc,GACdD,aAAc,CAAEpB,MAAO,EAAGC,OAAQ,GAClCkB,cAAe,MCrEdkM,GAAQ,SAARA,GAAQ,OAARA,EAAQ,qBAARA,EAAQ,uBAARA,EAAQ,qBAARA,EAAQ,2BAARA,EAAQ,yBAARA,EAAQ,qBAARA,EAAQ,uBAARA,CAAQ,EAARA,IAAQ,IAUb,YCqCA,SAAe5N,EAAAA,MAtCE,SAAH3N,GAAwC,IAAlCwb,EAAWxb,EAAXwb,YAClB,OACE3Q,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOyQ,SAAS7Q,SAAA,EAC3BC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO0Q,eAAe9Q,SAAA,EACjCM,EAAAA,GAAAA,KAACyQ,GAAc,CACb9N,KAAK,WACLD,aAAc,kBAAM4N,EAAYD,GAAAA,SAAkB,EAClDhB,SAAS,YAEX1P,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO4Q,wBAAwBhR,SAAA,EAC1CM,EAAAA,GAAAA,KAACyQ,GAAc,CACb9N,KAAK,aACLD,aAAc,kBAAM4N,EAAYD,GAAAA,SAAkB,KAEpDrQ,EAAAA,GAAAA,KAACyQ,GAAc,CACb9N,KAAK,aACLD,aAAc,kBAAM4N,EAAYD,GAAAA,SAAkB,KAEpDrQ,EAAAA,GAAAA,KAACyQ,GAAc,CACb9N,KAAK,cACLD,aAAc,kBAAM4N,EAAYD,GAAAA,UAAmB,WAIzD1Q,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO6Q,gBAAgBjR,SAAA,EAClCM,EAAAA,GAAAA,KAACyQ,GAAc,CACb9N,KAAK,WACLD,aAAc,kBAAM4N,EAAYD,GAAAA,UAAmB,KAErDrQ,EAAAA,GAAAA,KAACyQ,GAAc,CACb9N,KAAK,eACLD,aAAc,kBAAM4N,EAAYD,GAAAA,YAAqB,SAK/D,IAIA,IAAMvQ,GAASU,GAAAA,QAAAA,OAAkB,CAC/B+P,SAAU,CACRtN,OAA0C,GAAlCc,GAAAA,QAAAA,IAAe,UAAUd,OACjCe,cAAe,MACf9B,eAAgB,SAChB4B,WAAY,SACZ6D,aAAc,IAEhB6I,eAAgB,CACd/P,KAAM,GAERiQ,wBAAyB,CACvB1M,cAAe,MACf9B,eAAgB,UAElByO,gBAAiB,CACflQ,KAAM,KCvDV,SARuB,WACrB,IAAMmQ,GAAcrI,EAAAA,EAAAA,WAAS,GAAO,GAEpC,OAAO+E,EAAAA,EAAAA,cAAY,WACjBsD,GAAY,SAACC,GAAC,OAAMA,CAAC,GACvB,GAAG,GACL,E,eCgBA,SAAepO,EAAAA,MAdO,SAAH3N,GAAwD,IAAlDyO,EAAKzO,EAALyO,MAAOuN,EAAShc,EAATgc,UAAWnO,EAAI7N,EAAJ6N,KACzC,OACEhD,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOiR,uBAAuBrR,SAAA,EACzCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOkR,cAActR,UAChCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOmR,cAAcvR,UAChCM,EAAAA,GAAAA,KAAC6C,GAAAA,QAAK,CAAChD,MAAOC,GAAO6C,KAAMG,WAAW,QAAQC,OAAQJ,SAG1D3C,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOyD,MAAM7D,SAAE6D,KACnCvD,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAEoR,MAGxC,IAIA,IAAMhR,GAASU,GAAAA,QAAAA,OAAkB,CAC/BuQ,uBAAwB,CACtBtQ,KAAM,EACNyB,eAAgB,WAChB4B,WAAY,SACZ6D,aAAc,GAEhBqJ,cAAe,CACbhO,MAAO,OACPgB,cAAe,SACfF,WAAY,SACZ5B,eAAgB,gBAElB+O,cAAe,CACbhO,OAAQ,GACRD,MAAO,IAETL,KAAM,CACJK,MAAO,OACPC,OAAQ,QAEVM,MAAO,CACLf,SAAU,GACVD,MAAO,QAETvB,KAAM,CACJwB,SAAU,GACVD,MAAO,OACP2O,UAAW,KCdf,SAxBmB,SAAHpc,GAAkD,IAA5CyW,EAAKzW,EAALyW,MAAOE,EAAK3W,EAAL2W,MAAOlQ,EAAKzG,EAALyG,MAClC,OACEyE,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOqR,oBAAoBzR,UACtCC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOsR,WAAW1R,SAAA,EAC7BM,EAAAA,GAAAA,KAACqR,GAAa,CACZ9N,MAAM,QACNuN,UAAWvF,EACX5I,KAAM2O,EAAQ,QAEhBtR,EAAAA,GAAAA,KAACqR,GAAa,CACZ9N,MAAM,QACNuN,UAAWrF,EACX9I,KAAM2O,EAAQ,SAEhBtR,EAAAA,GAAAA,KAACqR,GAAa,CACZ9N,MAAM,QACNuN,UAAWvV,EACXoH,KAAM2O,EAAQ,YAKxB,EAIA,IAAMxR,GAASU,GAAAA,QAAAA,OAAkB,CAC/B2Q,oBAAqB,CACnBxN,WAA4B,YAAhBC,GAAAA,QAAAA,GAA4B3D,GAAAA,QAAAA,cAA0B,EAClE4D,gBAAiB,QAEnBuN,WAAY,CACVpN,cAAe,MACff,OAA0C,IAAlCc,GAAAA,QAAAA,IAAe,UAAUd,OACjCD,MAAO,OACPZ,kBAAmB,EACnBC,YAAa,OACbwB,gBAAiB,U,UCrDrB,UACEyN,EAAQ,KACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,MACRA,EAAQ,OC4DV,SAjEkB,WAChB,IAAMC,GAActJ,EAAAA,EAAAA,QAClB,IAAIuJ,MAAMC,GAAYvL,SACtBmC,QACIqJ,GAAiBzJ,EAAAA,EAAAA,QAA2B,MAClDK,GAAkCC,EAAAA,EAAAA,WAAS,GAAKI,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAAzCqJ,EAAShJ,EAAA,GAAEiJ,EAAYjJ,EAAA,GAC9BkJ,GAAkCtJ,EAAAA,EAAAA,WAAS,GAAMuJ,GAAAvM,EAAAA,GAAAA,SAAAsM,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACxBG,EAAmB/C,IAAe,SAACxa,GAAK,OAAKA,EAAM0K,SAASxJ,MAAM,IAElEsc,GAAY5E,EAAAA,EAAAA,aAAY,WAAD,IAAAxY,GAAA4C,EAAAA,EAAAA,UAC3B,UAAOya,GACL,GAAKF,EACL,IACEP,EAAerJ,QAAUkJ,EAAYY,SAC/BT,EAAerJ,QAAQ+J,sBAAsB,GACnDJ,GAAa,EACf,CAAE,MAAOnV,GACPC,QAAQC,IAAIF,EACd,CACF,IAAC,gBAAA5E,GAAA,OAAAnD,EAAAoD,MAAA,KAAAC,UAAA,EAV2B,GAW5B,CAAC8Z,EAAkBP,EAAerJ,UAG9BgK,GAAY/E,EAAAA,EAAAA,cAAY,WACvB2E,GACLP,EAAerJ,SAAWqJ,EAAerJ,QAAQiK,WACnD,GAAG,CAACL,EAAkBP,EAAerJ,UA6BrC,OA3BA1C,EAAAA,EAAAA,YAAU,WACR,GAAKsM,EAAL,CAEA,KACEva,EAAAA,EAAAA,UAAC,YACC,IAAK,IAAI6a,EAAI,EAAGA,EAAIhB,EAAYrL,OAAQqM,GAAK,EAAG,CAC9C,IAAeC,SAA2BC,GAAAA,MAAAA,YACxChB,GAAYc,GACZ,CAAEG,OAAQ,KACV,SAAAvZ,GAAgBA,EAAbwZ,eACkBX,GAAa,EAClC,KALMY,MAORrB,EAAYgB,GAAKC,CACnB,CACAZ,GAAa,EACf,GAZAla,EAaF,CAAE,MAAOmF,GACPC,QAAQC,IAAIF,EACd,CACA,OAAO,WAEL,IAAK,IAAI0V,EAAI,EAAGA,EAAIhB,EAAYrL,OAAQqM,GAAK,EAC3ChB,EAAYgB,IAAMhB,EAAYgB,GAAGM,aACrC,CAvB6B,CAwB/B,GAAG,IAEI,CAACX,EAAWG,EAAW,CAAEV,UAAAA,EAAWI,UAAAA,GAQ7C,ECjDA,IAAM/E,GAA+C,GAAlCjJ,GAAAA,QAAAA,IAAe,UAAUd,OA6F5C,SA3Fa,SAAHnO,GAAuC,IAAjC6G,EAAI7G,EAAJ6G,KAAM+D,EAAQ5K,EAAR4K,SACZoT,GACNC,EAAAA,GAAAA,iBAGAC,EAAiDC,KAAWC,GAAA3N,EAAAA,GAAAA,SAAAyN,EAAA,GAArDd,EAASgB,EAAA,GAAGC,GAAAD,EAAA,GAAAA,EAAA,IAAIvB,EAASwB,EAATxB,UAAWI,EAASoB,EAATpB,UAC5B9D,EAAOmF,KAEP9C,GAAchD,EAAAA,EAAAA,cAAY,SAAC+F,GAC7B1X,EAAK2X,aAAaD,GAClBpF,GACJ,GAAG,IAEGD,GAASV,EAAAA,EAAAA,cAAY,WACvB3R,EAAKqS,QACT,GAAG,IAEHuF,EAAwBC,GAAY7X,EAAK4P,MAAOyC,EAAQC,GAAhD7E,EAAKmK,EAALnK,MAAO0F,EAAIyE,EAAJzE,KAsDf,OApDA2E,EAAAA,GAAAA,iBACInG,EAAAA,EAAAA,cAAY,WAKR,OAJI3R,EAAKyB,UACLzB,EAAK+X,QAETtK,IACO,WACH0F,GACJ,CACJ,GAAG,CAACnT,EAAK4P,UAIb5F,EAAAA,EAAAA,YAAU,WACL,IAAMgO,EAAiB,SAAC5Z,GACjB,IAAM6Z,EAAoC,CACtCC,UAAW,kBAAMvD,EAAYD,GAAAA,SAAkB,EAC/CyD,WAAY,kBAAMxD,EAAYD,GAAAA,UAAmB,EACjD0D,QAAS,kBAAMzD,EAAYD,GAAAA,SAAkB,EAC7C2D,UAAW,kBAAM1D,EAAYD,GAAAA,SAAkB,EAC/C4D,OAAQ,kBAAM3D,EAAYD,GAAAA,WAAoB,EAC9C6D,SAAU,kBAAM5D,EAAYD,GAAAA,YAAqB,EACjD8D,UAAW,kBAAM7D,EAAYD,GAAAA,UAAmB,GAClDtW,EAAEG,MACG,MAAP0Z,GAAAA,GACJ,EACJ,GAAmB,OAAfhQ,GAAAA,QAAAA,GAEA,OADAwQ,OAAOC,iBAAiB,UAAWV,GAC5B,kBAAMW,oBAAoB,UAAWX,EAAgB,CAEpE,GAAG,KAEHhO,EAAAA,EAAAA,YAAU,WACDgM,GACDO,EAAUvW,EAAK4P,MAEvB,GAAG,CAACoG,EAAWI,KAEfpM,EAAAA,EAAAA,YAAU,WACFhK,EAAKyB,UACL0V,EAAWyB,SAAS,YAAa,CAAEnX,UAAU,GAErD,GAAG,CAACzB,EAAKyB,YAEToX,EAAAA,EAAAA,kBAAgB,WACZ1B,EAAW2B,WAAW,CAClBC,OAAQ,kBACJ1U,EAAAA,GAAAA,KAAC2U,GAAU,CAACpJ,MAAO5P,EAAK4P,MAAOE,MAAO9P,EAAK8P,MAAOlQ,MAAOI,EAAKJ,OAAS,GAGnF,GAAG,CAACI,EAAK4P,MAAO5P,EAAK8P,MAAO9P,EAAKJ,SAG7BoE,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO8U,cAAclV,SAAA,EAC9BC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOnE,KAAK+D,SAAA,EACrBM,EAAAA,GAAAA,KAAC4J,GAAK,CACFmD,UAAWpR,EAAKoR,UAChBnC,MAAO4G,MAAMqD,KAAKlZ,EAAKiP,OACvBoC,WAAYA,GACZlG,QAAM,KAEVnH,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOgV,UAAUpV,SAAA,EAC1BM,EAAAA,GAAAA,KAAC0J,GAAK,CAACnG,MAAM,OAAO0D,MAAOtL,EAAKoZ,aAChC/U,EAAAA,GAAAA,KAAC0J,GAAK,CAACnG,MAAM,OAAO0D,MAAOtL,EAAKqZ,YAC/BtV,SAGTM,EAAAA,GAAAA,KAACiV,GAAQ,CAAC3E,YAAaA,MAGnC,EAIA,IAAMxQ,GAASU,GAAAA,QAAAA,OAAkB,CAC7BoU,cAAe,CACX5R,MAAO,OACPC,OAAQ,OACRa,WAAY,SACZ5B,eAAgB,YAEpBvG,KAAM,CACFqI,cAAe,OAEnB8Q,UAAW,CACPI,WAAY,EACZpR,WAAY,Y,sBCvHdqR,GAAa,WACjB,OAAOC,GAAKC,UAAU,CACpBC,QAAShE,EAAQ,OAErB,EAgBA,SAdqB,SAAHxc,GAAyC,IAAnC4K,EAAQ5K,EAAR4K,SACtB4I,GAAoCC,EAAAA,EAAAA,WAAS,GAAMI,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAA5CiN,EAAU5M,EAAA,GAAE6M,EAAa7M,EAAA,GAEhC,OAAO4M,GACLvV,EAAAA,GAAAA,KAAAwH,GAAAA,SAAA,CAAA9H,SAAGA,KAEHM,EAAAA,GAAAA,KAACyV,GAAAA,QAAU,CACTC,WAAYP,GACZQ,SAAU,kBAAMH,GAAc,EAAK,EACnCI,QAAS,SAAC/Y,GAAG,OAAKC,QAAQC,IAAIF,EAAI,GAGxC,E,+kBCOA,SAAe4F,EAAAA,MAtBG,SAAH3N,GAA+C,IAAzC+gB,EAAI/gB,EAAJ+gB,KAAMta,EAAKzG,EAALyG,MAAOhH,EAAIO,EAAJP,KAAMuhB,EAAEhhB,EAAFghB,GACtC,OACEnW,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOvE,MAAMmE,SAAA,EACxBM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOiW,MAAMrW,UACxBC,EAAAA,GAAAA,MAACkC,GAAW,CAAChC,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOkB,MAAI,IAAEuB,MAAOuT,EAAK,SAAW,UAAUpW,SAAA,CACpEmW,EAAK,UAGV7V,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOiW,MAAMrW,UACxBM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOkB,MAAI,IAAEuB,MAAOuT,EAAK,SAAW,UAAUpW,SACpEnE,OAGLyE,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOiW,MAAMrW,UACxBM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAKlL,GAAAA,GAAA,GAAOmL,GAAOkB,MAAI,IAAEuB,MAAOuT,EAAK,SAAW,UAAUpW,SACpEnL,EAAKyhB,MAAM,EAAG,SAKzB,IAIA,IAAMlW,GAASU,GAAAA,QAAAA,OAAkB,CAC/BjF,MAAO,CACLyI,cAAe,MACf9B,eAAgB,eAChBH,gBAAiB,IAEnBgU,MAAO,CACLtV,KAAM,EACNwV,WAAY,EACZnS,WAAY,UAEd9C,KAAM,CACJwB,SAAU,MC1Bd,SAAeC,EAAAA,MAhBS,WACtB,OACE9C,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOoW,WAAWxW,SAAA,EAC7BM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOyD,MAAM7D,UACxBM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAC,YAEnCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOyD,MAAM7D,UACxBM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAC,aAEnCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOyD,MAAM7D,UACxBM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAC,aAIzC,IAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/B0V,WAAY,CACVlS,cAAe,MACf9B,eAAgB,eAChB2B,gBAAiB,QAEnBN,MAAO,CACLsD,kBAAmBpH,GAAUa,QAC7B8B,kBAAmB,EACnBL,gBAAiB,GAEnBf,KAAM,CACJuB,MAAO,QACPC,SAAU,MCuBd,SAnDiB,WACf,IAAMjH,EAAQ2T,IAAe,SAACxa,GAAK,OAAKA,EAAMiH,KAAKqO,YAAY,IAC/D1B,GAAwBC,EAAAA,EAAAA,UAAS,IAAGI,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAA7B/T,EAAIoU,EAAA,GAAEwN,EAAOxN,EAAA,GACpBkJ,GAAsCtJ,EAAAA,EAAAA,WAAS,GAAMuJ,GAAAvM,EAAAA,GAAAA,SAAAsM,EAAA,GAA9CuE,EAAWtE,EAAA,GAAEuE,EAAcvE,EAAA,GAClCwE,GAAgD/N,EAAAA,EAAAA,WAAS,GAAMgO,GAAAhR,EAAAA,GAAAA,SAAA+Q,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACtC5e,EAAWqX,KAEX0H,GAAoBpJ,EAAAA,EAAAA,cAAY,SAACzY,EAAGmM,EAAc6D,GACtDsR,EAAQnV,GACRqV,EAAexR,EACjB,GAAG,IAEH,OACElF,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA9H,SAAA,EACEM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOyD,MAAM7D,SAAC,eAClCC,EAAAA,GAAAA,MAACkC,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAA,CAAC,gBACnBC,EAAAA,GAAAA,MAACoB,GAAAA,QAAI,CAAClB,MAAOC,GAAOvE,MAAMmE,SAAA,CAAC,IAAEnE,QAEzCib,GA2BAxW,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAC,mBA1BjCC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO6W,KAAKjX,SAAA,EACvBM,EAAAA,GAAAA,KAAC4W,GAAK,CACJnR,GAAI,OACJI,MAAO,mBACPjB,MAAOrQ,EACPmR,cAAegR,EACfjd,OAAQ2c,EACRzP,UAAW,+BACXkQ,eAAe,OACfvQ,IAAK,EACLwQ,UAAW,KAEb9W,EAAAA,GAAAA,KAACyD,GAAa,CACZb,QAAS,WACPjL,EAAS2D,GAAY,CAAEI,SAAUnH,EAAMgH,MAAOA,KAC3Cwb,SACAC,MAAK,WACJP,GAAoB,EACtB,GACJ,EACA/U,UAAW0U,EAAY1W,SACxB,oBASX,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/B+C,MAAO,CACLhB,MAAO,OACPC,SAAU,IAEZxB,KAAM,CACJuB,MAAO,OACPC,SAAU,IAEZjH,MAAO,CACLgH,MAAO,OACPC,SAAU,IAEZmU,KAAM,CACJzU,eAAgB,SAChB4B,WAAY,YC7DhB,SAXc,WACZ,OACEnE,EAAAA,GAAAA,MAAA6H,GAAAA,SAAA,CAAA9H,SAAA,EACEM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOyD,MAAM7D,SAAC,WAClCM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAC,iEAKvC,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/B+C,MAAO,CACLhB,MAAO,OACPC,SAAU,IAEZxB,KAAM,CACJuB,MAAO,OACPC,SAAU,GACVT,gBAAiB,KCPfiL,GAA+C,GAAlCjJ,GAAAA,QAAAA,IAAe,UAAUd,OA2C5C,SAzCwB,SAAHnO,GAAoD,IAA9C6G,EAAI7G,EAAJ6G,KAAM+D,EAAQ5K,EAAR4K,SAAU4Q,EAAWxb,EAAXwb,YACnCwC,GACJC,EAAAA,GAAAA,iBAGFC,EAAiDC,KAAWC,GAAA3N,EAAAA,GAAAA,SAAAyN,EAAA,GAArDd,EAASgB,EAAA,GAAGC,GAAAD,EAAA,GAAAA,EAAA,IAAIvB,EAASwB,EAATxB,UAAWI,EAASoB,EAATpB,UAgBlC,OAdApM,EAAAA,EAAAA,YAAU,WACHgM,GACHO,EAAUvW,EAAK4P,MAEnB,GAAG,CAACoG,EAAWI,KAEfyC,EAAAA,EAAAA,kBAAgB,WACd1B,EAAW2B,WAAW,CACpBC,OAAQ,kBACN1U,EAAAA,GAAAA,KAAC2U,GAAU,CAACpJ,MAAO5P,EAAK4P,MAAOE,MAAO9P,EAAK8P,MAAOlQ,MAAOI,EAAKJ,OAAS,GAG7E,GAAG,CAACI,EAAK4P,MAAO5P,EAAK8P,MAAO9P,EAAKJ,SAG/BoE,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO8U,cAAclV,SAAA,EAChCC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOnE,KAAK+D,SAAA,EACvBM,EAAAA,GAAAA,KAAC4J,GAAK,CACJmD,UAAWpR,EAAKoR,UAChBnC,MAAO4G,MAAMqD,KAAKlZ,EAAKiP,OACvBoC,WAAYA,GACZlG,QAAM,KAERnH,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOgV,UAAUpV,SAAA,EAC5BM,EAAAA,GAAAA,KAAC0J,GAAK,CAACnG,MAAM,OAAO0D,MAAOtL,EAAKoZ,aAChC/U,EAAAA,GAAAA,KAAC0J,GAAK,CAACnG,MAAM,OAAO0D,MAAOtL,EAAKqZ,YAC/BtV,SAGLM,EAAAA,GAAAA,KAACiV,GAAQ,CAAC3E,YAAaA,MAG7B,EAIA,IAAMxQ,GAASU,GAAAA,QAAAA,OAAkB,CAC/BoU,cAAe,CACb5R,MAAO,OACPC,OAAQ,OACRa,WAAY,SACZ5B,eAAgB,YAElBvG,KAAM,CACJqI,cAAe,OAEjB8Q,UAAW,CACTI,WAAY,EACZpR,WAAY,Y,0lBC9DhB,IA0DMhE,GAASU,GAAAA,QAAAA,OAAkB,CAC/ByW,KAAM,CACJzU,SAAU,IACVD,MAAO,SAET2U,KAAM,CACJzW,KAAM,EACNqD,WAAY,SACZ5B,eAAgB,gBAElBiV,WAAY,CACVtT,gBAAiBpE,GAAUc,YAC3B6W,SAAU,IACV/S,aAAc,EACdD,aAAc,CAAEpB,MAAO,EAAGC,OAAQ,GAClCkB,cAAe,KAInB,SA3Ea,SAAHrP,GAAmC,IAA7Bge,EAAUhe,EAAVge,WACRuE,GAAeC,EAAAA,GAAAA,WACfC,EAAarI,IAAe,SAACxa,GAAK,QAAOA,EAAM4D,KAAKpE,WAAW,IAC/DsjB,EAAatI,IAAe,SAACxa,GAAK,QAAOA,EAAMiH,KAAKkO,YAAY,IAEtE,OACE7J,EAAAA,GAAAA,KAACyX,GAAkB,CAAA/X,UACjBC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAKlL,GAAA,CAAIgT,aAAc0P,GAAiBvX,GAAOoX,MAAOxX,SAAA,EAC1DM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOmX,KAAKvX,UAC7B0H,EAAAA,GAAAA,SAXE,WAWQC,KAAI,SAACqQ,EAAMpQ,GAAG,OACvBtH,EAAAA,GAAAA,KAACe,GAAAA,QAAI,CACHlB,MAAO,CAAE0C,MAAO/C,GAAa8H,EAAM,IAAK5H,SAGvCgY,GAFOA,EAAI,IAAIpQ,EAGX,OAGXtH,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOqX,WACdvU,QAAS,WACPkQ,EAAWyB,SAAS,eACtB,EAAE7U,SAED8X,EAAa,SAAW,cAE3BxX,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOqX,WACdvU,QAAS,WACPkQ,EAAWyB,SAAS,cACtB,EAAE7U,SACH,iBAGDM,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOqX,WACdzV,UAAW6V,EACX3U,QAAS,WACPkQ,EAAWyB,SAAS,mBACtB,EAAE7U,SACH,iBAGDM,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOqX,WACdvU,QAAS,WACPkQ,EAAWyB,SAAS,WACtB,EAAE7U,SACH,iBAMT,E,eCpDA,SAfiB,SAAKiY,GACpB,IAAMC,GAAM3P,EAAAA,EAAAA,UAWZ,YAToB6B,IAAhB8N,EAAIvP,UACNuP,EAAIvP,QAAU,CACZzD,MAC0B,oBAAjB+S,EACFA,IACDA,IAIHC,EAAIvP,QAAQzD,KACrB,ECuBA,SAnCW,WAOT,SAAAiT,EAAYlM,EAAeG,EAAWC,EAAWC,IAAW/B,EAAAA,GAAAA,SAAA,KAAA4N,GAC1D3N,KAAK+B,OAASN,EACdzB,KAAKjS,GAAK6T,EACV5B,KAAK4N,GAAK/L,EACV7B,KAAK6N,GAAK/L,CACZ,CAoBC,OApBAvB,EAAAA,GAAAA,SAAAoN,EAAA,EAAAnN,IAAA,QAAAC,IAED,WACE,OAAOT,KAAK+B,MACd,GAAC,CAAAvB,IAAA,IAAAC,IAED,WACE,OAAOT,KAAKjS,EACd,GAAC,CAAAyS,IAAA,IAAAC,IAED,WACE,OAAOT,KAAK4N,EACd,GAAC,CAAApN,IAAA,IAAAC,IAED,WACE,OAAOT,KAAK6N,EACd,GAAC,CAAArN,IAAA,WAAA9F,MAED,SAASgG,GACP,OAAO,IAAIlB,GAAMQ,KAAMU,EACzB,KAACiN,CAAA,CAhCQ,GCiBX,SAhBkB,WAGhB,SAAAG,EAAYC,GACV,IAAK,IAAMtM,KADyC1B,EAAAA,GAAAA,SAAA,KAAA+N,GAAA,KAF9CE,YAAuB,GAGTD,EAClB/N,KAAKgO,YAAYC,KACf,IAAIN,GAAMI,EAActM,IAAS/B,GAAAA,EAAUF,GAAAA,GAAW,GAAI,EAAG,GAGnE,CAIC,OAJAe,EAAAA,GAAAA,SAAAuN,EAAA,EAAAtN,IAAA,aAAAC,IAED,WACE,OAAOT,KAAKgO,WACd,KAACF,CAAA,CAbe,GC8GlB,SA7Ge,WAQb,SAAAI,EACEpQ,EACA4C,EACAyN,EACAC,EACAC,GACC,IAADC,EAAA,MAAAvO,EAAAA,GAAAA,SAAA,KAAAmO,GAAA,KATMK,aAAc,EAAM,KAC5BC,kBAAmB,EAAK,KA+ExBpF,aAAe,SAACD,GAAqB,IAADsF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAChB,OAAlBL,EAAIH,EAAKzL,YAAL4L,EAAgBxM,WAChBkH,IAAYhD,GAAAA,SAAiC,OAAduI,EAAAJ,EAAKzL,YAAL6L,EAAgBK,WAC1C5F,IAAYhD,GAAAA,UAAkC,OAAdwI,EAAAL,EAAKzL,YAAL8L,EAAgBK,YAChD7F,IAAYhD,GAAAA,SAAiC,OAAdyI,EAAAN,EAAKzL,YAAL+L,EAAgBhM,WAC/CuG,IAAYhD,GAAAA,YAAoC,OAAd0I,EAAAP,EAAKzL,YAALgM,EAAgBI,cAClD9F,IAAYhD,GAAAA,SAAiC,OAAd2I,EAAAR,EAAKzL,YAALiM,EAAgBI,WAC/C/F,IAAYhD,GAAAA,WAAoBmI,EAAKa,YAChD,EA9EEnP,KAAKoP,MAAQ,IAAI9H,MAAMxJ,EAAO9B,QAE9B,IAAK,IAAIqT,EAAS,EAAGA,EAASvR,EAAO9B,OAAQqT,GAAU,EACrDrP,KAAKoP,MAAMC,GAAUvR,EAAOuR,GAAQC,SAAS5O,GAG/CV,KAAKuP,WAAapB,EACdnO,KAAKoP,MAAMjB,EAAwB,GACnC,KACJnO,KAAKwP,WAAapB,EACdpO,KAAKoP,MAAMhB,EAAwB,GACnC,KACJpO,KAAKyP,WAAapB,EACdrO,KAAKoP,MAAMf,EAAwB,GACnCrO,KAAK0P,aACX,CA4EC,OA5EAnP,EAAAA,GAAAA,SAAA2N,EAAA,EAAA1N,IAAA,YAAAC,IAED,WACE,OAAOT,KAAKuP,UACd,EAAC/e,IAUD,SAAsBsa,GACpB9K,KAAKuP,WAAazE,CACpB,GAAC,CAAAtK,IAAA,YAAAC,IAVD,WACE,OAAOT,KAAKyP,UACd,EAACjf,IAUD,SAAsB8e,GACpBtP,KAAKyP,WAAaH,CACpB,GAAC,CAAA9O,IAAA,YAAAC,IAVD,WACE,OAAOT,KAAKwP,UACd,EAAChf,IAUD,SAAsBqS,GACpB7C,KAAKwP,WAAa3M,CACpB,GAAC,CAAArC,IAAA,cAAA9F,MAED,WACE,IAAMiV,EAAWrR,KAAKC,MAAMD,KAAKE,SAAWwB,KAAKoP,MAAMpT,QACvD,OAAOgE,KAAKoP,MAAMO,EACpB,GAAC,CAAAnP,IAAA,WAAA9F,MAED,WAAoB,IAADkV,EAAAC,EACH,OAAdD,EAAA5P,KAAK6C,YAAL+M,EAAgBpG,QAChBxJ,KAAKuO,aAAc,EAEnBvO,KAAKwO,mBAAkC,OAAfqB,EAAC7P,KAAK8K,YAAL+E,EAAgBtN,YACzCvC,KAAK6C,UAAY7C,KAAKwO,iBAAmBxO,KAAK8K,UAAY,KACtD9K,KAAKwO,mBAAkBxO,KAAK8K,UAAY9K,KAAK0P,cACnD,GAAC,CAAAlP,IAAA,YAAA9F,MAED,WACE,GAAuB,OAAnBsF,KAAK6C,YAAuB7C,KAAKuO,YAAa,CAEhD,GADAvO,KAAK6C,UAAU2G,QACQ,OAAnBxJ,KAAK6K,UACP7K,KAAK6K,UAAY7K,KAAK6C,UACtB7C,KAAKsP,eACA,CACL,IAAIQ,EAAO9P,KAAK6C,UAChB7C,KAAK6C,UAAY7C,KAAK6K,UACtB7K,KAAK6K,UAAYiF,CACnB,CACA9P,KAAKuO,aAAc,CACrB,CACF,GAAC,CAAA/N,IAAA,SAAA9F,MAYD,WAAU,IAADqV,EACP/P,KAAK6C,YAAc7C,KAAK6C,UAAUZ,SAChB,OADwB8N,EACtC/P,KAAK6C,YAALkN,EAAgBnN,WAChB5C,KAAKsP,UACX,GAAC,CAAA9O,IAAA,QAAA9F,MAED,WAAS,IAADsV,EACQ,OAAdA,EAAAhQ,KAAK6C,YAALmN,EAAgBxG,QAChBxJ,KAAK6C,UAAY,KACjB7C,KAAK6K,UAAY,KACjB7K,KAAK8K,UAAY9K,KAAK0P,aACxB,KAACxB,CAAA,CA1GY,GCFqB,IAG9B+B,GAAI,WAIR,SAAAA,EAAArlB,GAQsB,IAPpB+U,EAAY/U,EAAZ+U,aACAwO,EAAqBvjB,EAArBujB,sBACAC,EAAqBxjB,EAArBwjB,sBACAC,EAAqBzjB,EAArByjB,sBACA/iB,EAAYV,EAAZU,aACAuU,EAAYjV,EAAZiV,aACAC,EAAYlV,EAAZkV,cAAYC,EAAAA,GAAAA,SAAA,KAAAkQ,GAEZjQ,KAAKK,OAAS,IAAIX,GAChBC,EACArU,EACAuU,EACAC,GAEFE,KAAKkQ,WAAa,IAAIhC,GACpB,IAAIJ,GAAahQ,IAAQqS,WACzBnQ,KAAKK,OACL8N,EACAC,EACAC,EAEJ,CA6CC,OA7CA9N,EAAAA,GAAAA,SAAA0P,EAAA,EAAAzP,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKK,OAAOK,KACrB,GAAC,CAAAF,IAAA,YAAAC,IAED,WACE,OAAOT,KAAKkQ,WAAWrN,SACzB,GAAC,CAAArC,IAAA,YAAAC,IAED,WAAiB,IAAD2P,EACd,OAAgC,OAAhCA,EAAOpQ,KAAKkQ,WAAWrF,gBAAS,EAAzBuF,EAA2B3O,KACpC,GAAC,CAAAjB,IAAA,YAAAC,IAED,WAAiB,IAAD4P,EACd,OAAgC,OAAhCA,EAAOrQ,KAAKkQ,WAAWpF,gBAAS,EAAzBuF,EAA2B5O,KACpC,GAAC,CAAAjB,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKK,OAAOgB,KACrB,GAAC,CAAAb,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKK,OAAOkB,KACrB,GAAC,CAAAf,IAAA,QAAAC,IAED,WACE,OAAOT,KAAKK,OAAOhP,KACrB,GAAC,CAAAmP,IAAA,WAAAC,IAED,WACE,OAAQT,KAAKkQ,WAAW1B,gBAC1B,GAAC,CAAAhO,IAAA,eAAAC,IAED,WACE,OAAOT,KAAKkQ,WAAW9G,YACzB,GAAC,CAAA5I,IAAA,SAAA9F,MAED,WACEsF,KAAKkQ,WAAWpM,QAClB,GAAC,CAAAtD,IAAA,QAAA9F,MAED,WACEsF,KAAKK,OAAOmJ,QACZxJ,KAAKkQ,WAAW1G,OAClB,KAACyG,CAAA,CAvEO,GA0EV,YCnEA,IAAMK,GAAqB,SACzB5P,EACAW,EACAE,EACAlQ,EACAyZ,EACAjI,EACAgI,GAEA,MAAO,CACLlL,aAAc2H,MAAMqD,KAAKjK,GACzByN,sBACGtL,IAAcA,EAAU0N,QAAQ,MAAO,IAAI,SAAO3Q,EACrDwO,sBACGvD,IAAcA,EAAU0F,QAAQ,MAAO,IAAI,SAAO3Q,EACrDyO,sBACGvD,IAAcA,EAAUyF,QAAQ,MAAO,IAAI,SAAO3Q,EACrDtU,aAAc+V,EACdxB,aAAc0B,EACdzB,aAAczO,EAElB,EAuGA,SAjG2B,SAAHzG,GAAiD,IAA3Cge,EAAUhe,EAAVge,WAC5B4H,EAQIxL,IAAe,SAACxa,GAAK,OAAKA,EAAMiH,IAAI,IAPtCkO,EAAY6Q,EAAZ7Q,aACAwO,EAAqBqC,EAArBrC,sBACAC,EAAqBoC,EAArBpC,sBACAC,EAAqBmC,EAArBnC,sBACA/iB,EAAYklB,EAAZllB,aACAuU,EAAY2Q,EAAZ3Q,aACAC,EAAY0Q,EAAZ1Q,aAEIrS,EAAWqX,KACX2L,GAAW1S,EAAAA,EAAAA,QAAO2S,GAAAA,QAAAA,cAElBjf,EAAOkf,IACX,kBACE,IAAIC,GAAU,CACZjR,aAAcA,GAAgBgB,WAAWgK,KAAKhL,GAC9CwO,sBAAAA,EACAC,sBAAAA,EACAC,sBAAAA,EACA/iB,aAAAA,EACAuU,aAAAA,EACAC,aAAAA,GACA,IAoBA+Q,GAAuBzN,EAAAA,EAAAA,cAAY,SAAC0N,GAEjB,WAArBL,EAAStS,SACT2S,EAAaC,MAAM,wBApBQ,WAAO,IAADC,EACnCvc,GAAAA,QAAAA,QACE,YACA5G,KAAKC,UACHwiB,GACE7e,EAAKiP,MACLjP,EAAK4P,MACL5P,EAAK8P,MACL9P,EAAKJ,MACLI,EAAKqZ,UACS,OADAkG,EACdvf,EAAKoR,gBAAS,EAAdmO,EAAgBvP,MAChBhQ,EAAKoZ,YAIb,CAOIoG,GAEFR,EAAStS,QAAU2S,CACrB,GAAG,IAEGI,GAAc9N,EAAAA,EAAAA,cAAY,WAC9BwF,EAAWyB,SAAS,YAAa,CAAEnX,UAAU,GAC/C,GAAG,IA8BH,OA5BAqW,EAAAA,GAAAA,iBAAe,WACb,OAAO,WAAO,IAAD4H,EACX1jB,EACEtC,EACEmlB,GACE7e,EAAKiP,MACLjP,EAAK4P,MACL5P,EAAK8P,MACL9P,EAAKJ,MACLI,EAAKqZ,UACS,OADAqG,EACd1f,EAAKoR,gBAAS,EAAdsO,EAAgB1P,MAChBhQ,EAAKoZ,YAIb,CACF,KAEApP,EAAAA,EAAAA,YAAU,WACR,IAAM2V,EAAeV,GAAAA,QAAAA,iBACnB,SACAG,GAEF,OAAO,WACLO,EAAaC,QACf,CACF,GAAG,KAGDvb,EAAAA,GAAAA,KAACuJ,GAAkB,CAAA7J,UACjBM,EAAAA,GAAAA,KAACma,GAAI,CAACxe,KAAMA,EAAK+D,UACfM,EAAAA,GAAAA,KAACwb,GAAU,CACT9Y,aAAc0Y,EACdzY,KAAM2O,EAAQ,WAKxB,E,eC5CA,SAhE0B,SAAHxc,GAAgD,IAA1Cge,EAAUhe,EAAVge,WAC3BxK,GAAgCC,EAAAA,EAAAA,UAAmB,SAAQI,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAApDpF,EAAQyF,EAAA,GAAE8S,EAAW9S,EAAA,GACtB+S,GAAUzT,EAAAA,EAAAA,QAAiB,MAC3BrJ,EAAcsQ,IAAe,SAACxa,GAAK,OAAKA,EAAM0G,OAAOwD,WAAW,IAChE3K,EAASib,IAAe,SAACxa,GAAK,OAAKA,EAAM4D,KAAKrE,MAAM,IAC5C0nB,EAAiBne,KAAvBjE,KACF5B,EAAWqX,KAEX7L,GAAqBmK,EAAAA,EAAAA,cAAY,SAACpK,GAAwB,IAAD0Y,EAC7DH,EAAYvY,GACG,OAAf0Y,EAAAF,EAAQrT,UAARuT,EAAiBC,eAAe,CAAEC,UAAU,EAAMlP,OAAQ,GAC5D,GAAG,IAEGmP,GAAkBzO,EAAAA,EAAAA,cACtB,SAAA/X,GAA0D,IAAvDymB,EAAIzmB,EAAJymB,KAAMC,EAAK1mB,EAAL0mB,MACP,OACEjc,EAAAA,GAAAA,KAACkc,GAAS,CACRrG,KAAMoG,EAAQ,EACd1gB,MAAOygB,EAAKzgB,MACZhH,KAAMynB,EAAKtgB,SACXoa,GAAIkG,EAAKxd,MAAQvK,GAGvB,GACA,CAACA,IAkBH,OAfA0R,EAAAA,EAAAA,YAAU,WACRhO,EAASiG,KACX,GAAG,CAACjG,KAEJ6c,EAAAA,EAAAA,kBAAgB,WACd1B,EAAW2B,WAAW,CACpBC,OAAQ,kBACN1U,EAAAA,GAAAA,KAACmc,GAAiB,CAChBjZ,SAAUA,EACVC,mBAAoBA,GACpB,GAGR,GAAG,CAACD,KAGFvD,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAOsc,qBAAqB1c,SAAA,EACvCM,EAAAA,GAAAA,KAACqc,GAAAA,QAAQ,CACPzE,IAAK8D,EACLniB,KAAmB,UAAb2J,EAAuBtE,EAAc+c,EAC3CW,aAAc,SAACN,GAAI,OAAKA,EAAKxd,GAAG,EAChC+d,WAAYR,EACZS,oBAAqB,CAAC,GACtBC,qBAAqBzc,EAAAA,GAAAA,KAAC0c,GAAe,OAEvC1c,EAAAA,GAAAA,KAACyD,GAAa,CACZb,QAAS,WACPkQ,EAAW6J,QACb,EACAzb,UAAWpB,GAAOyB,OAAO7B,SAC1B,YAKP,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/B4b,qBAAsB,CACpB3b,KAAM,EACNoD,gBAAiB,QAEnBtC,OAAQ,CACNiB,SAAU,MCjGd,SAAehC,GAAAA,QAAAA,OAAkB,CAC/Boc,SAAU,CACRnc,KAAM,EACNyB,eAAgB,SAChB4B,WAAY,YCkBhB,SAhBgB,WACd,IAAMnM,EAAWqX,KACjB,OACEhP,EAAAA,GAAAA,KAACuJ,GAAkB,CAAA7J,UACjBM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOgd,GAAcD,SAASld,UAClCM,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOgd,aACdla,QAAS,kBAAMjL,EAASS,KAAa,EAACsH,SACvC,cAMT,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/Bsc,aAAc,CACZjZ,gBAAiBpE,GAAUhG,S,qBCnBzBuJ,GAAQe,GAAAA,QAAAA,IAAe,UAAUf,MA4CvC,SArCwB,SAAHlO,GAAqD,IAA/Cge,EAAUhe,EAAVge,WAAYiK,EAAKjoB,EAALioB,MACrC,OACE/c,EAAAA,GAAAA,KAACgd,GAAAA,QAAQ,CAACnd,MAAOC,GAAOC,OAAQkd,UAAW,GAAGvd,UAC5CM,EAAAA,GAAAA,KAACkd,GAAAA,QAAS,CACRrd,MAAOC,GAAOqd,SACdva,QAAS,WACPkQ,EAAW6J,QACb,EAAEjd,UAEFM,EAAAA,GAAAA,KAACod,GAAI,CAACvd,MAAOC,GAAOud,eAAe3d,UACjCC,EAAAA,GAAAA,MAACud,GAAAA,QAAS,CAACrd,MAAOC,GAAOwd,MAAM5d,SAAA,CAC5Bqd,EAAMQ,OAAOngB,UAAW4C,EAAAA,GAAAA,KAACwd,GAAQ,KAAMxd,EAAAA,GAAAA,KAACyd,GAAK,KAC9C9d,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO3K,QAAQuK,SAAA,EAC1BM,EAAAA,GAAAA,KAACwb,GAAU,CACT7Y,KAAM2O,EAAQ,MACd5O,aAAc,WACZoQ,EAAWyB,SAAS,OACtB,KAEFvU,EAAAA,GAAAA,KAACwb,GAAU,CACT7Y,KACEoa,EAAMQ,OAAOngB,SACTkU,EAAQ,MACRA,EAAQ,MAEd5O,aAAc,WACZoQ,EAAW6J,QACb,eAQhB,EAIA,IAAM7c,GAASU,GAAAA,QAAAA,OAAkB,CAC/BT,OAAQ,CACNU,KAAM,GAER0c,SAAU,CACR1c,KAAM,EACNyB,eAAgB,SAChB4B,WAAY,UAEduZ,eAAgB,CACdra,MAAe,IAARA,GACPC,OAAgB,IAARD,GACRa,gBAAiB,YACjB6Z,QAAS,GACTzb,aAAc,IAEhBqb,MAAO,CACLta,MAAO,OACPC,OAAQ,OACRa,WAAY,SACZ5B,eAAgB,iBAElB/M,QAAS,CACP6O,cAAe,MACfhB,MAAO,MACPd,eAAgB,kB,gnBC9Eb,IAAKyb,GAAc,SAAdA,GAAc,OAAdA,EAAc,0BAAdA,CAAc,MA+E1B,SA9BgB,SAKdhH,GAEA,IAAAzR,GAAuCC,EAAAA,EAAAA,aAnCvC,SAACzQ,EAAqBkpB,GACpB,GAAQA,EAAWlZ,OACZiZ,GAAeE,YAApB,CACE,IAAMC,EAAanpB,GAAAA,GAAA,GACdD,EAAMqpB,aAAW,IAAA5e,EAAAA,EAAAA,SAAA,GACnBye,EAAW5oB,QAAQiG,MAAQ2iB,EAAW5oB,QAAQ4P,QAE3CoZ,EAAiBrpB,GAAAA,GAAA,GAClBD,EAAMupB,iBAAe,IAAA9e,EAAAA,EAAAA,SAAA,GACvBye,EAAW5oB,QAAQiG,MAAQ2iB,EAAW5oB,QAAQ6P,UAE7CqZ,GAAqB,EACzB,IAAK,IAAMxT,KAAOsT,EAChB,IAA+B,IAA3BA,EAAkBtT,GAAgB,CACpCwT,GAAqB,EACrB,KACF,CAEF,MAAO,CACLC,YAAaD,EACbH,YAAaD,EACbG,gBAAiBD,EAClB,CAED,OAAOtpB,CAEb,GAS0E,CACxEqpB,YAAWppB,GAAA,GACNgiB,GAELsH,gBAAiB/V,OAAOkW,KAAKzH,GAAM0H,QAAO,SAACC,EAAKC,GAC9C,OAAA5pB,GAAAA,GAAA,GAAY2pB,GAAG,IAAAnf,EAAAA,EAAAA,SAAA,GAAGof,IAAO5H,EAAK4H,IAChC,GAAG,CAAC,GACJJ,aAAa,IACb7Y,GAAAC,EAAAA,GAAAA,SAAAL,EAAA,GARKsZ,EAASlZ,EAAA,GAAEmZ,EAAiBnZ,EAAA,GAoBnC,MAAO,CAACkZ,GAVmBlR,EAAAA,EAAAA,cACzB,SAACrS,EAAe2J,EAAeC,GAC7B4Z,EAAkB,CAChB/Z,KAAMiZ,GAAeE,YACrB7oB,QAAS,CAAE4P,MAAAA,EAAOC,QAAAA,EAAS5J,MAAAA,IAE/B,GACA,CAACwjB,IAIL,E,0BC1DA,SAlB4B,WAC1B,IAAAC,GAAoCC,EAAAA,GAAAA,kBAAgBC,GAAArZ,EAAAA,GAAAA,SAAAmZ,EAAA,GAA7CG,EAAMD,EAAA,GAAEE,EAAiBF,EAAA,GAchC,OAZqBtR,EAAAA,EAAAA,cAAW5V,EAAAA,EAAAA,UAAC,YAC/B,IAAIqnB,EACAC,EAOJ,OANW,MAANH,GAAAA,EAAQI,UACXF,SAAqBD,KAAqBD,SAElC,MAANA,GAAAA,EAAQI,SAA2B,YAAhBF,KACrBC,SAAmBE,EAAAA,GAAAA,YAAyB3lB,MAEvCylB,CACT,IAAG,CAACH,EAAQC,GAGd,E,eCjBaK,GAAsB,WAE7B,IADJ1lB,EAAatB,UAAA+N,OAAA,QAAA4D,IAAA3R,UAAA,GAAAA,UAAA,GAAG,wBAEhBinB,GAAAA,QAAAA,MAAY,oBAAqB3lB,EACnC,E,+lBCoHA,SAxGmB,WACjB,IAAA6O,GAAkCC,EAAAA,EAAAA,WAAS,GAAMI,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAA1C+W,EAAS1W,EAAA,GAAE2W,EAAY3W,EAAA,GAC9B4W,EACEC,GAAQ,CAAE9jB,SAAU,GAAIyK,MAAO,GAAIsZ,SAAU,KAAKC,GAAAna,EAAAA,GAAAA,SAAAga,EAAA,GAAAI,EAAAD,EAAA,GAD3C3B,EAAW4B,EAAX5B,YAAaE,EAAe0B,EAAf1B,gBAAiBE,EAAWwB,EAAXxB,YAAeyB,EAAkBF,EAAA,GAElE/nB,EAAWqX,KACX6Q,EAAeC,KAErBC,EAAgCxiB,GAAkB,CAChDyiB,cAAe,gBACfC,GAAA1a,EAAAA,GAAAA,SAAAwa,EAAA,GAFK5kB,EAAM8kB,EAAA,GAAItO,EAASsO,EAAA,GAATtO,UAGjBuO,EAAiB5iB,GAAkB,CAAE0iB,cAAe,gBAA7CnlB,GAA6D0K,EAAAA,GAAAA,SAAA2a,EAAA,GAAvD,GAEPC,EAAW,eAAArrB,GAAA4C,EAAAA,EAAAA,UAAG,YAClB,IAAM0oB,QAAkBP,IACH7kB,GAAS+iB,EAAtBriB,UAAiB0F,EAAAA,GAAAA,SAAK2c,EAAW1c,KACzC,IACE,IAAMgf,QAAsBhB,EACxBxkB,EAAMlG,GAAAA,GAAC,CAAC,EAAIopB,GAAW,IAAEqC,UAAAA,KACzBjlB,EAAMxG,GAAAA,GAAC,CAAC,EAAIqG,GAAI,IAAEolB,UAAAA,MACpBrJ,SACFsJ,EAAa9mB,KACT5B,EAASH,EAAa6oB,EAAa9mB,OACnC4lB,GAAoBkB,EAAaC,QACvC,CAAE,MAAOzjB,GACPsiB,IACF,CACF,IAAC,kBAdgB,OAAArqB,EAAAoD,MAAA,KAAAC,UAAA,KAgBjB,OACE6H,EAAAA,GAAAA,KAACuJ,GAAkB,CAAA7J,UACjBM,EAAAA,GAAAA,KAACugB,GAAAA,QAAoB,CACnBC,SAA0B,YAAhB5c,GAAAA,QAAAA,GAA4B,SAAW,UACjD/D,MAAOgd,GAAcD,SAASld,UAE9BM,EAAAA,GAAAA,KAACod,GAAI,CAACvd,MAAOC,GAAO2gB,cAAc/gB,UAChCC,EAAAA,GAAAA,MAAC+gB,GAAAA,QAAU,CAAAhhB,SAAA,CACR2f,IACCrf,EAAAA,GAAAA,KAAC4W,GAAK,CACJnR,GAAG,WACHI,MAAM,WACNjB,MAAOmZ,EAAYriB,SACnBgK,cAAeka,EACf5Z,UAAQ,EACRQ,UAAW,EACXqQ,eAAe,OACfpd,OAAQwkB,EAAgBviB,SACxBiL,UAAU,oCAGd3G,EAAAA,GAAAA,KAAC4W,GAAK,CACJnR,GAAG,QACHI,MAAM,QACNjB,MAAOmZ,EAAY5X,MACnBT,cAAeka,EACf5Z,UAAQ,EACRG,OAAK,EACLK,UAAW,GACXma,aAAa,gBACb9J,eAAe,OACfpd,OAAQwkB,EAAgB9X,MACxBQ,UAAU,yCAEZ3G,EAAAA,GAAAA,KAAC4W,GAAK,CACJnR,GAAG,WACHI,MAAM,WACNjB,MAAOmZ,EAAY0B,SACnB/Z,cAAeka,EACf5Z,UAAQ,EACR4a,iBAAe,EACfpa,UAAW,EACXqQ,eAAe,OACfpd,OAAQwkB,EAAgBwB,SACxB9Y,UAAU,mCAEXgL,GACC3R,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAO+gB,eAAenhB,UACjCM,EAAAA,GAAAA,KAAC8gB,GAAAA,QAAiB,CAAC3Q,KAAK,QAAQ5N,MAAM,cAGxCvC,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOyB,OACdG,SACE2d,GACKlB,GACAF,EAAgB9X,QAAU8X,EAAgBwB,SAEjD7c,QAASud,EAAYzgB,SAEpB2f,EAAY,WAAa,WAG9Brf,EAAAA,GAAAA,KAACyD,GAAa,CACZ5D,MAAOC,GAAOyB,OACdqB,QAAS,kBAAM0c,GAAa,SAACyB,GAAS,OAAMA,CAAS,GAAC,EAACrhB,SAEtD2f,EAAY,kBAAoB,+BAO/C,EAIA,IAAMvf,GAASU,GAAAA,QAAAA,OAAkB,CAC/BigB,cAAe,CACb5c,gBAAiB,YACjBb,MAAO,MACPge,SAAU,IACVC,UAAW,IACXvD,QAAS,IAEXmD,eAAgB,CACd3P,UAAW,IAEb3P,OAAQ,CACN2P,UAAW,GACX5O,UAAW,SACXN,kBAAmB,KCpFvB,SA1CqB,WACnB,IAAMrK,EAAWqX,KAgCjB,OA9BArJ,EAAAA,EAAAA,YAAU,YAERjO,EAAAA,EAAAA,UAAC,YACC,IAAIE,EAAW,KACK,QAAhBgM,GAAAA,QAAAA,KACFhM,QAAiBC,EAAYqpB,aAAa7pB,IAO5CM,EAJKC,EAIIhD,EAAMmD,KAAKopB,MAAMvpB,IAHfnD,IAIb,GAXAiD,IAcAA,EAAAA,EAAAA,UAAC,YACC,IAAM0pB,QAAkBziB,GAAAA,QAAAA,QAAqBrH,GACxC8pB,GACLzpB,EAAStC,EAAa0C,KAAKopB,MAAMC,IACnC,GAJA1pB,IAOAA,EAAAA,EAAAA,UAAC,YACC,IAAM0H,QAAiBT,GAAAA,QAAAA,QAAqBpH,GACvC6H,GACLzH,EAAS7B,EAAYiC,KAAKopB,MAAM/hB,IAClC,GAJA1H,EAKF,GAAG,CAACC,KAGFqI,EAAAA,GAAAA,KAACuJ,GAAkB,CAAA7J,UACjBM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOgd,GAAcD,SAASld,UAClCM,EAAAA,GAAAA,KAAC8gB,GAAAA,QAAiB,CAAC3Q,KAAK,QAAQ5N,MAAM,cAI9C,E,qCC9CM8e,GAAqB,eAAAvsB,GAAA4C,EAAAA,EAAAA,UAAG,UAAO0H,GACnCT,GAAAA,QAAAA,QAAqBpH,EAAUQ,KAAKC,UAAUoH,GAChD,IAAC,gBAF0BnH,GAAA,OAAAnD,EAAAoD,MAAA,KAAAC,UAAA,KCkF3B,SA1EuB,SAAHrD,GAAuC,IAAjCge,EAAUhe,EAAVge,WAClBwO,EAAiBpS,IAAe,SAACxa,GAAK,OAAKA,EAAMiH,KAAKnG,YAAY,IAClE+rB,EAAgBrS,IAAe,SAACxa,GAAK,OAAKA,EAAM0K,QAAQ,IAC9DkJ,GAA0BC,EAAAA,EAAAA,UAAS+Y,GAAkB,GAAE3Y,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAAhDiD,EAAK5C,EAAA,GAAE6Y,EAAQ7Y,EAAA,GACtBkJ,GAA4BtJ,EAAAA,EAAAA,UAASgZ,EAAc3rB,QAAOkc,GAAAvM,EAAAA,GAAAA,SAAAsM,EAAA,GAAnDjc,EAAMkc,EAAA,GAAE2P,EAAS3P,EAAA,GACxBwE,GAA8B/N,EAAAA,EAAAA,UAASgZ,EAAc1rB,SAAQ0gB,GAAAhR,EAAAA,GAAAA,SAAA+Q,EAAA,GAAtDzgB,EAAO0gB,EAAA,GAAEmL,EAAUnL,EAAA,GACpB5e,EAAWqX,KAEjB,OACEhP,EAAAA,GAAAA,KAACuJ,GAAkB,CAAA7J,UACjBM,EAAAA,GAAAA,KAAC0gB,GAAAA,QAAU,CAACiB,sBAAuB7hB,GAAO8hB,kBAAkBliB,UAC1DC,EAAAA,GAAAA,MAACyd,GAAI,CAACvd,MAAOC,GAAOV,SAASM,SAAA,EAC3BC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO+hB,QAAQniB,SAAA,EAC1BC,EAAAA,GAAAA,MAACkC,GAAW,CAAChC,MAAOC,GAAO+F,MAAMnG,SAAA,CAAC,SAAO6L,MACzCvL,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAAAF,UACHM,EAAAA,GAAAA,KAAC8hB,KAAM,CACLld,MAAO2G,EACPwW,cAAe,SAACnd,GACd4c,EAAS5c,EACX,EACAod,KAAM,EACNC,aAAc,EACdC,aAAc,GACdriB,MAAOC,GAAOqiB,OACdC,sBAAuB3iB,GAAUa,QACjC+hB,eAAgB5iB,GAAU6iB,cAIhCtiB,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAACC,MAAOC,GAAOyiB,cAAc7iB,UAChCM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAO0iB,KAAK9iB,SAAC,iEAInCC,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO+hB,QAAQniB,SAAA,EAC1BM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAO+F,MAAMnG,SAAC,YAClCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAAAF,UACHM,EAAAA,GAAAA,KAACyiB,GAAAA,QAAM,CACL7d,MAAOhP,EACPmsB,cAAe,WACbN,GAAU,SAAC/sB,GAAK,OAAMA,CAAK,GAC7B,EACAguB,WAAY,CAAEC,KAAMljB,GAAUa,SAC9BsiB,WAAYnjB,GAAU6iB,cAI5B3iB,EAAAA,GAAAA,MAACC,GAAAA,QAAI,CAACC,MAAOC,GAAO+hB,QAAQniB,SAAA,EAC1BM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAO+F,MAAMnG,SAAC,aAClCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAAAF,UACHM,EAAAA,GAAAA,KAACyiB,GAAAA,QAAM,CACL7d,MAAO/O,EACPksB,cAAe,WACbL,GAAW,SAAChtB,GAAK,OAAMA,CAAK,GAC9B,EACAguB,WAAY,CAAEC,KAAMljB,GAAUa,SAC9BsiB,WAAYnjB,GAAU6iB,cAI5BtiB,EAAAA,GAAAA,KAACwb,GAAU,CACT3b,MAAOC,GAAOyB,OACdmB,aAAc,WACZ/K,EDlEZ,SADuBpC,GAAA,IACpBgW,EAAKhW,EAALgW,MAAO3V,EAAML,EAANK,OAAQC,EAAON,EAAPM,QAAO,OACzB,SAAC8B,GACCA,EAASrC,EAAaiW,IACtB5T,EAAS7B,EAAY,CAAEF,OAAAA,EAAQC,QAAAA,KAC/BwrB,GAAsB,CAAEzrB,OAAAA,EAAQC,QAAAA,GAClC,CAAE,CC6DmBgtB,CAAa,CAAEtX,MAAAA,EAAO3V,OAAAA,EAAQC,QAAAA,KACvCid,EAAW6J,QACb,EACAha,KAAM2O,EAAQ,cAM1B,EAIA,IAAMxR,GAASU,GAAAA,QAAAA,OAAkB,CAC/BohB,kBAAmB,CACjBlE,QAAS,IAEXte,SAAU,CACRse,QAAS,GACT7Z,gBAAiBpE,GAAUqjB,MAC3Bhf,WAAY,UAEd+d,QAAS,CACP7d,cAAe,MACf9B,eAAgB,gBAChB4B,WAAY,SACZd,MAAO,OACPjB,gBAAiB,IAEnB8D,MAAO,CACLtD,MAAO9C,GAAU6iB,MACjB9f,SAAU,IAEZ+f,cAAe,CACbxgB,gBAAiB,GACjBiB,MAAO,QAETwf,KAAM,CACJhgB,SAAU,GACVD,MAAO,OACPR,gBAAiB,GAEnBogB,OAAQ,CACNnf,MAAO,IACPC,OAAQ,IAEV1B,OAAQ,CACN2P,UAAW,MCxCf,SA7D0B,SAAHpc,GAAgD,IAA1Cge,EAAUhe,EAAVge,WAC3BxK,GAAgCC,EAAAA,EAAAA,UAAS,IAAGI,GAAApD,EAAAA,GAAAA,SAAA+C,EAAA,GAArC5M,EAAQiN,EAAA,GAAEoa,EAAWpa,EAAA,GAC5BkJ,GAA8CtJ,EAAAA,EAAAA,WAAS,GAAMuJ,GAAAvM,EAAAA,GAAAA,SAAAsM,EAAA,GAAtDmR,EAAelR,EAAA,GAAEmR,EAAkBnR,EAAA,GAEpC4E,GAAoBpJ,EAAAA,EAAAA,cAAY,SAACzY,EAAGmM,EAAc6D,GACtDke,EAAY/hB,GACZiiB,EAAmBpe,EACrB,GAAG,IAEHqe,EAAqBzlB,KAAdhC,GAAqC8J,EAAAA,GAAAA,SAAA2d,EAAA,GAA3B,GAEXC,GAAmB7V,EAAAA,EAAAA,cAAW5V,EAAAA,EAAAA,UAAC,YACnC,IACE,IAAM0rB,QAAqB3nB,EAAWC,GAAUqb,SAChDqM,EAAa7pB,KACTuZ,EAAW2H,QAAQ,kBAAmB,CACpC7e,OAAQwnB,EAAa7pB,KAAKiF,IAC1B6kB,WAAW,IAEblE,GAAoBiE,EAAa9C,QACvC,CAAE,MAAOzjB,GACPsiB,IACF,CACF,IAAG,CAACzjB,IAEJ,OACEiE,EAAAA,GAAAA,MAACqd,GAAAA,QAAQ,CAACnd,MAAOC,GAAOC,OAAQkd,UAAW,GAAGvd,SAAA,EAC5CM,EAAAA,GAAAA,KAACkd,GAAAA,QAAS,CACRrd,MAAOC,GAAOqd,SACdva,QAAS,WACPkQ,EAAW6J,QACb,KAEF3c,EAAAA,GAAAA,KAACugB,GAAAA,QAAoB,CACnBC,SAA0B,YAAhB5c,GAAAA,QAAAA,GAA4B,UAAY,WAClD/D,MAAOC,GAAOwjB,gBAAgB5jB,UAE9BC,EAAAA,GAAAA,MAACyd,GAAI,CAACvd,MAAOC,GAAOyjB,MAAM7jB,SAAA,EACxBM,EAAAA,GAAAA,KAAC6B,GAAW,CAAChC,MAAOC,GAAOkB,KAAKtB,SAAC,+CAGjCM,EAAAA,GAAAA,KAACJ,GAAAA,QAAI,CAAAF,UACHM,EAAAA,GAAAA,KAAC4W,GAAK,CACJnR,GAAG,WACHI,MAAM,WACNjB,MAAOlJ,EACPgK,cAAegR,EACf1Q,UAAQ,EACRQ,UAAW,EACXqQ,eAAe,OACfpd,OAAQupB,EACRrc,UAAU,sCAGd3G,EAAAA,GAAAA,KAACyD,GAAa,CAACb,QAASugB,EAAiBzjB,SAAC,qBAKpD,EAIA,IAAMI,GAASU,GAAAA,QAAAA,OAAkB,CAC/BT,OAAQ,CACNU,KAAM,GAER0c,SAAU,CACR1c,KAAM,GAER6iB,gBAAiB,CACfzf,gBAAiBpE,GAAUY,aAC3BI,KAAM,EACNuC,MAAO,OACPd,eAAgB,SAChB4B,WAAY,UAEdyf,MAAO,CACL1f,gBAAiBpE,GAAUqjB,MAC3B9f,MAAO,MACPjB,gBAAiB,GACjBC,kBAAmB,GACnBE,eAAgB,iBAElBlB,KAAM,CACJuB,MAAO,OACPC,SAAU,GACVoF,UAAW,SACX7F,gBAAiB,MCPrB,SAnF8B,SAAHjN,GAGQ,IAFjCge,EAAUhe,EAAVge,WACAiK,EAAKjoB,EAALioB,MAEcyG,EAAe9lB,GAAaqf,EAAMQ,OAAO3hB,QAA/CrC,KACFtF,EAASib,IAAe,SAACxa,GAAK,OAAKA,EAAM4D,KAAKrE,MAAM,IAE1DwvB,EAAqB9lB,KAAdR,GAAqCoI,EAAAA,GAAAA,SAAAke,EAAA,GAA3B,GAEX9nB,EAAOkf,IAAS,kBAAM,IAAIC,GAAU,CAAC,EAAE,IAEvC7M,EAAOmF,KAEPpF,GAASV,EAAAA,EAAAA,cAAY,WACzB3R,EAAKqS,SACL7Q,EAAW,CACTvB,OAAQmhB,EAAMQ,OAAO3hB,OACrBwB,SAAUzB,EAAKyB,SACfC,YAAamU,MAAMqD,KAAKlZ,EAAKiP,QAEjC,GAAG,IAEH2I,EAAwBC,GAAY7X,EAAK4P,MAAOyC,EAAQC,GAAhD7E,EAAKmK,EAALnK,MAAO0F,EAAIyE,EAAJzE,MAEfnJ,EAAAA,EAAAA,YAAU,WACuB,aAAjB,MAAV6d,OAAU,EAAVA,EAAYE,aACdta,IAE6B,cAAjB,MAAVoa,OAAU,EAAVA,EAAYE,cACd5U,IACAsQ,GAAAA,QAAAA,MAAY,YAAgBoE,EAAWG,OAAM,QAAS,CACpD,CACE3iB,KAAM,OACN4B,QAAS,kBAAMkQ,EAAWyB,SAAS,OAAO,EAC1C1U,MAAO,iBAIf,GAAG,CAAW,MAAV2jB,OAAU,EAAVA,EAAYE,cAEhB/d,EAAAA,EAAAA,YAAU,WAOR,OANAxI,EAAW,CACTvB,OAAQmhB,EAAMQ,OAAO3hB,OACrBwB,SAAUzB,EAAKyB,SACfC,YAAamU,MAAMqD,KAAKlZ,EAAKiP,SAGxB,WACLzN,EAAW,CACTvB,OAAQmhB,EAAMQ,OAAO3hB,OACrBwB,UAAU,EACVC,YAAamU,MAAMqD,KAAKlZ,EAAKiP,QAEjC,CACF,GAAG,IAEH,IAAM0F,GAAchD,EAAAA,EAAAA,cAAY,SAAC+F,GAC/B1X,EAAK2X,aAAaD,GAClBpF,GACF,GAAG,IAMG2V,GAAgB1W,EAAAA,EAAAA,UACpB,eAAA2W,EAAA,OACyE,OADzEA,EACY,MAAVL,OAAU,EAAVA,EAAYM,QAAQC,QAAO,SAACC,GAAM,OAAKA,EAAOhpB,OAAS/G,CAAM,IAAE,GAAG2W,OAAKiZ,EACvE,EAAE,GACJ,CAACL,IAGH,OACExjB,EAAAA,GAAAA,KAACuJ,GAAkB,CAAA7J,UACjBM,EAAAA,GAAAA,KAACikB,GAAe,CACdtoB,KAAMA,EACN2U,YAAaA,EACb5Q,UAAUM,EAAAA,GAAAA,KAAC4J,GAAK,CAACgB,MAAOgZ,EAAe5W,WAAY,QAI3D,EAIexM,GAAAA,QAAAA,OAAkB,CAAC,GAAlC,I,WC7FM0jB,IAAMC,E,QAAAA,WA2DZ,SAzDsB,WACpB,IAAM5M,EAAarI,IAAe,SAACxa,GAAK,QAAOA,EAAM4D,KAAKpE,WAAW,IACrE,OACEyL,EAAAA,GAAAA,MAACukB,GAAIE,UAAS,CACZC,cAAe,CACbC,aAAa,EACbC,YAAa,CACX7jB,SAAU,WACV8jB,eAAgB,GAElBC,iBAAkB,CAChBjiB,SAAU,GACVvB,WAAY,UACZyjB,cAAe,GAEjBC,sBAAuB,SACvBC,wBAAyB,OACzBC,iBAAkB,kBAChB7kB,EAAAA,GAAAA,KAACgd,GAAAA,QAAQ,CAAC8H,KAAK,OAAO7H,UAAW,GAAIpd,MAAO,CAAEY,KAAM,IAAO,GAE7Df,SAAA,EAEFM,EAAAA,GAAAA,KAACkkB,GAAIa,OAAM,CACTxwB,KAAK,OACLywB,UAAWC,GACXC,QAAS,CACPC,WAAY,SAAArwB,GAAA,IAAGqb,EAAIrb,EAAJqb,KAAM5N,EAAKzN,EAALyN,MAAK,OACxBvC,EAAAA,GAAAA,KAACkQ,GAAAA,QAAW,CAAC3b,KAAK,OAAO4b,KAAMA,EAAM5N,MAAOA,GAAS,KAI1DgV,GACCvX,EAAAA,GAAAA,KAACkkB,GAAIa,OAAM,CACTxwB,KAAK,UACLywB,UAAWI,GACXF,QAAS,CACPC,WAAY,SAAA5vB,GAAA,IAAG4a,EAAI5a,EAAJ4a,KAAM5N,EAAKhN,EAALgN,MAAK,OACxBvC,EAAAA,GAAAA,KAACkQ,GAAAA,QAAW,CAAC3b,KAAK,OAAO4b,KAAMA,EAAM5N,MAAOA,GAAS,EAEvD+hB,aAAa,MAIjBtkB,EAAAA,GAAAA,KAACkkB,GAAIa,OAAM,CACTxwB,KAAK,QACLywB,UAAWK,GACXH,QAAS,CACPC,WAAY,SAAAhsB,GAAA,IAAGgX,EAAIhX,EAAJgX,KAAM5N,EAAKpJ,EAALoJ,MAAK,OACxBvC,EAAAA,GAAAA,KAACkQ,GAAAA,QAAW,CAAC3b,KAAK,UAAU4b,KAAMA,EAAM5N,MAAOA,GAAS,OAOtE,EC/CA,IAAM+iB,IAAQC,EAAAA,GAAAA,WA6Cd,SA3CsB,WACpB,OACE5lB,EAAAA,GAAAA,MAAC2lB,GAAMlB,UAAS,CAAA1kB,SAAA,EACdM,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CACXxwB,KAAK,OACLywB,UAAWQ,GACXN,QAAS,CAAEZ,aAAa,MAE1BtkB,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CAACxwB,KAAK,eAAeywB,UAAWS,MAC7CzlB,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CACXxwB,KAAK,YACLywB,UAAWU,GACXR,QAAS,CACPS,aAAc,mBACdrB,aAAa,EACbtb,UAAW,WAGfhJ,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CAACxwB,KAAK,cAAcywB,UAAWY,MAC5C5lB,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CACXxwB,KAAK,mBACLywB,UAAWa,GACXX,QAAS,CACPS,aAAc,mBACdrB,aAAa,EACbtb,UAAW,WAGfhJ,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CAACxwB,KAAK,kBAAkBywB,UAAWc,MAChD9lB,EAAAA,GAAAA,KAACslB,GAAMP,OAAM,CACXxwB,KAAK,WACLywB,UAAWe,GACXb,QAAS,CACPc,YAAa,WACbC,YAAa,CAAEpiB,gBAAiBpE,GAAUc,aAC1C2lB,iBAAkB,CAAE1jB,SAAU,GAAIvB,WAAY,WAC9CklB,gBAAiB1mB,GAAU6iB,WAKrC,E,eC1BA,SAhCqB,WACnB,IAAM8D,GACJne,EAAAA,EAAAA,QAA4D,MACxDoe,EAAgBnX,IAAe,SAACxa,GAAK,QAAOA,EAAM4D,KAAKlE,WAAW,IAClEmjB,EAAarI,IAAe,SAACxa,GAAK,QAAOA,EAAM4D,KAAKpE,WAAW,IAqBrE,OAnBAyR,EAAAA,EAAAA,YAAU,WACR,GAAI4R,EAAY,CACd,IAAM+D,EACJgL,GAAAA,yCAAsD,SAAC1sB,GACrD,IACyD2sB,EADnDhtB,EAAOK,EAAS4sB,aAAahtB,QAAQitB,QAAQltB,KAC/C,WAAYA,GAA+B,kBAAhBA,EAAKqC,SACb,OAArB2qB,EAAAH,EAAc/d,UAAdke,EAAuBhS,SAAS,kBAAmB,CACjD3Y,OAAQrC,EAAKqC,OACbynB,WAAW,IAGjB,IAEF,OAAO,WACL/H,EAAaC,QACf,CACF,CACF,GAAG,CAAChE,KAGFvX,EAAAA,GAAAA,KAAC0mB,GAAAA,QAAmB,CAAC9O,IAAKwO,EAAc1mB,SACpC2mB,GAAmCrmB,EAAAA,GAAAA,KAAC2mB,GAAa,KAAjC3mB,EAAAA,GAAAA,KAAC4mB,GAAY,KAGrC,E,eCVe,SAASC,KACtB,OACE7mB,EAAAA,GAAAA,KAAC8mB,EAAAA,SAAQ,CAACC,MAAOA,GAAMrnB,UACrBM,EAAAA,GAAAA,KAACgnB,GAAY,CAAAtnB,UACXM,EAAAA,GAAAA,KAACinB,GAAY,OAIrB,CA3BoB,QAAhBrjB,GAAAA,QAAAA,I/DHF,IAAItH,SAAQ,SAACC,EAASC,GACpBzG,EAAGgI,aAAY,SAACC,GACdA,EAAGC,WACD,wLAMA,IACA,WACE1B,GAAQ,EACV,IACA,SAAC1H,EAAGgI,GAEF,OADAL,EAAOK,IACA,CACT,GAEJ,GACF,I+DdGma,MAAK,WACJla,QAAQC,IAAI,0BACd,IACCmqB,OAAM,SAACrqB,GACNC,QAAQC,IAAI,0BACZD,QAAQC,IAAIF,EACd,IAGJypB,GAAAA,uBAAqC,CACnCa,mBAAmB,WAAD,IAAAC,GAAA1vB,EAAAA,EAAAA,UAAE,kBAAa,CAC/B2vB,iBAAiB,EACjBC,iBAAiB,EACjBC,gBAAgB,EACjB,IAAC,yBAAAH,EAAAlvB,MAAA,KAAAC,UAAA,EAJiB,I,28CCpBjBqvB,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB5d,IAAjB6d,EACH,OAAOA,EAAaC,QAGrB,IAAIC,EAASL,EAAyBE,GAAY,CAGjDE,QAAS,CAAC,GAOX,OAHAE,EAAoBJ,GAAUK,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASH,GAGpEI,EAAOD,OACf,CAGAH,EAAoBO,EAAIF,E,MCzBxB,IAAIG,EAAW,GACfR,EAAoBS,EAAI,CAAChqB,EAAQiqB,EAAUC,EAAIC,KAC9C,IAAGF,EAAH,CAMA,IAAIG,EAAeC,IACnB,IAAShW,EAAI,EAAGA,EAAI0V,EAAS/hB,OAAQqM,IAAK,CAGzC,IAFA,IAAK4V,EAAUC,EAAIC,GAAYJ,EAAS1V,GACpCxT,GAAY,EACPypB,EAAI,EAAGA,EAAIL,EAASjiB,OAAQsiB,MACpB,EAAXH,GAAsBC,GAAgBD,IAAangB,OAAOkW,KAAKqJ,EAAoBS,GAAGO,OAAO/d,GAAS+c,EAAoBS,EAAExd,GAAKyd,EAASK,MAC9IL,EAASO,OAAOF,IAAK,IAErBzpB,GAAY,EACTspB,EAAWC,IAAcA,EAAeD,IAG7C,GAAGtpB,EAAW,CACbkpB,EAASS,OAAOnW,IAAK,GACrB,IAAIvG,EAAIoc,SACEte,IAANkC,IAAiB9N,EAAS8N,EAC/B,CACD,CACA,OAAO9N,CAnBP,CAJCmqB,EAAWA,GAAY,EACvB,IAAI,IAAI9V,EAAI0V,EAAS/hB,OAAQqM,EAAI,GAAK0V,EAAS1V,EAAI,GAAG,GAAK8V,EAAU9V,IAAK0V,EAAS1V,GAAK0V,EAAS1V,EAAI,GACrG0V,EAAS1V,GAAK,CAAC4V,EAAUC,EAAIC,EAqBjB,C,KCzBdZ,EAAoBkB,EAAKd,IACxB,IAAIe,EAASf,GAAUA,EAAOgB,WAC7B,IAAOhB,EAAiB,QACxB,IAAM,EAEP,OADAJ,EAAoBqB,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,E,MCNd,IACII,EADAC,EAAW/gB,OAAOghB,eAAkBC,GAASjhB,OAAOghB,eAAeC,GAASA,GAASA,EAAa,UAQtG1B,EAAoB2B,EAAI,SAASxkB,EAAOykB,GAEvC,GADU,EAAPA,IAAUzkB,EAAQsF,KAAKtF,IAChB,EAAPykB,EAAU,OAAOzkB,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPykB,GAAazkB,EAAMikB,WAAY,OAAOjkB,EAC1C,GAAW,GAAPykB,GAAoC,oBAAfzkB,EAAMoS,KAAqB,OAAOpS,CAC5D,CACA,IAAI0kB,EAAKphB,OAAOqhB,OAAO,MACvB9B,EAAoBzb,EAAEsd,GACtB,IAAIE,EAAM,CAAC,EACXR,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAI5gB,EAAiB,EAAPghB,GAAYzkB,EAAyB,iBAAXyD,KAAyB2gB,EAAeS,QAAQphB,GAAUA,EAAU4gB,EAAS5gB,GACxHH,OAAOwhB,oBAAoBrhB,GAASshB,SAASjf,GAAS8e,EAAI9e,GAAO,IAAO9F,EAAM8F,KAI/E,OAFA8e,EAAa,QAAI,IAAM,EACvB/B,EAAoBqB,EAAEQ,EAAIE,GACnBF,CACR,C,KCxBA7B,EAAoBqB,EAAI,CAAClB,EAASgC,KACjC,IAAI,IAAIlf,KAAOkf,EACXnC,EAAoBoC,EAAED,EAAYlf,KAAS+c,EAAoBoC,EAAEjC,EAASld,IAC5ExC,OAAO0D,eAAegc,EAASld,EAAK,CAAEof,YAAY,EAAMnf,IAAKif,EAAWlf,IAE1E,ECND+c,EAAoBsC,EAAI,WACvB,GAA0B,kBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAO9f,MAAQ,IAAI+f,SAAS,cAAb,EAChB,CAAE,MAAOlwB,GACR,GAAsB,kBAAXqa,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBqT,EAAoBoC,EAAI,CAACV,EAAKe,IAAUhiB,OAAOiiB,UAAUC,eAAerC,KAAKoB,EAAKe,GCClFzC,EAAoBzb,EAAK4b,IACH,qBAAXyC,QAA0BA,OAAOC,aAC1CpiB,OAAO0D,eAAegc,EAASyC,OAAOC,YAAa,CAAE1lB,MAAO,WAE7DsD,OAAO0D,eAAegc,EAAS,aAAc,CAAEhjB,OAAO,GAAO,ECL9D6iB,EAAoB8C,EAAI,Y,MCKxB,IAAIC,EAAkB,CACrB,IAAK,GAaN/C,EAAoBS,EAAEM,EAAKiC,GAA0C,IAA7BD,EAAgBC,GAGxD,IAAIC,EAAuB,CAACC,EAA4BpxB,KACvD,IAGImuB,EAAU+C,GAHTtC,EAAUyC,EAAaC,GAAWtxB,EAGhBgZ,EAAI,EAC3B,GAAG4V,EAASruB,MAAM2L,GAAgC,IAAxB+kB,EAAgB/kB,KAAa,CACtD,IAAIiiB,KAAYkD,EACZnD,EAAoBoC,EAAEe,EAAalD,KACrCD,EAAoBO,EAAEN,GAAYkD,EAAYlD,IAGhD,GAAGmD,EAAS,IAAI3sB,EAAS2sB,EAAQpD,EAClC,CAEA,IADGkD,GAA4BA,EAA2BpxB,GACrDgZ,EAAI4V,EAASjiB,OAAQqM,IACzBkY,EAAUtC,EAAS5V,GAChBkV,EAAoBoC,EAAEW,EAAiBC,IAAYD,EAAgBC,IACrED,EAAgBC,GAAS,KAE1BD,EAAgBC,GAAW,EAE5B,OAAOhD,EAAoBS,EAAEhqB,EAAO,EAGjC4sB,EAAqBC,KAAsB,gBAAIA,KAAsB,iBAAK,GAC9ED,EAAmBnB,QAAQe,EAAqBM,KAAK,KAAM,IAC3DF,EAAmB3S,KAAOuS,EAAqBM,KAAK,KAAMF,EAAmB3S,KAAK6S,KAAKF,G,KC7CvF,IAAIG,EAAsBxD,EAAoBS,OAAEpe,EAAW,CAAC,MAAM,IAAO2d,EAAoB,QAC7FwD,EAAsBxD,EAAoBS,EAAE+C,E","sources":["store/auth.ts","store/gameState.ts","store/settings.ts","helpers/db.ts","services/gqlConfig.ts","constants/PersistedData.ts","store/authThunks.ts","services/gameApi.ts","store/scores.ts","store/index.ts","constants/Colors.ts","components/UI/GradientBackground.tsx","components/UI/DefaultText.tsx","components/UI/DefaultButton.tsx","components/UI/IconButton.tsx","components/Leaderboard/LeaderboardHeader.tsx","components/UI/Card.tsx","reducers/inputReducer.ts","components/UI/Input.tsx","components/Game/Cell.tsx","components/Game/Piece.tsx","components/UI/AnimatedBackground.tsx","constants/Points.ts","models/Board.ts","models/Piece.ts","components/Game/Board.tsx","hooks/useGameLoop.tsx","store/hooks.ts","components/Game/JoystickButton.tsx","constants/Commands.ts","components/Game/Joystick.tsx","hooks/useForceUpdate.tsx","components/Game/GameStatistic.tsx","components/Game/GameHeader.tsx","constants/Soundtracks.ts","hooks/useSounds.tsx","components/Game/Game.tsx","components/AppBootStrap.tsx","components/Leaderboard/ScoreItem.tsx","components/Leaderboard/ScoreListHeader.tsx","components/Modal/Gameover.tsx","components/Modal/Pause.tsx","components/Online/MultiplayerGame.tsx","screens/HomeScreen.tsx","hooks/useConst.tsx","models/Shape.ts","models/ShapeFactory.ts","models/PiecePool.ts","models/Game.ts","screens/SingleplayerScreen.tsx","screens/LeaderboardScreen.tsx","constants/defaultStyles.ts","screens/ProfileScreen.tsx","screens/GameModalScreen.tsx","hooks/useForm.tsx","hooks/usePushNotification.tsx","helpers/utils.ts","screens/AuthScreen.tsx","screens/SplashScreen.tsx","store/settingsThunks.ts","screens/SettingsScreen.tsx","screens/MultiplayerLobbyScreen.tsx","screens/MultiplayerGameScreen.tsx","config/RootNavigator.tsx","config/GameNavigator.tsx","config/AppNavigator.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { AuthData } from \"../types/User\";\n\nexport type AuthState = {\n  userId: string | null;\n  accessToken: string | null;\n  refreshToken: string | null;\n  didTryLogin: boolean;\n};\n\nconst initialState: AuthState = {\n  userId: null,\n  accessToken: null,\n  refreshToken: null,\n  didTryLogin: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setDidTryToLogin: (state) => ({\n      ...state,\n      didTryLogin: true,\n    }),\n    login: (\n      _,\n      {\n        payload: { userId, accessToken, refreshToken },\n      }: PayloadAction<AuthData>\n    ) => ({\n      userId,\n      accessToken,\n      refreshToken,\n      didTryLogin: true,\n    }),\n    logout: () => ({\n      ...initialState,\n      didTryLogin: true,\n    }),\n  },\n});\n\nexport const { login, logout, setDidTryToLogin } = authSlice.actions;\nexport default authSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { SerializedGameState } from \"../types/Game\";\n\nconst initialState: SerializedGameState = {};\n\nconst gameSlice = createSlice({\n  name: \"gameState\",\n  initialState,\n  reducers: {\n    setGameState: (_, { payload }: PayloadAction<SerializedGameState>) =>\n      payload,\n    setGameSpeed: (_, { payload }: PayloadAction<number>) => ({\n      initialSpeed: payload,\n    }),\n    resetGameState: (state) => ({\n      initialSpeed: state.initialSpeed,\n    }),\n  },\n});\n\nexport const { setGameState, setGameSpeed, resetGameState } = gameSlice.actions;\nexport default gameSlice.reducer;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nexport type SettingsState = {\n  sounds: boolean;\n  haptics: boolean;\n};\n\nconst initialState: SettingsState = {\n  sounds: false,\n  haptics: false,\n};\n\nconst settingsSlice = createSlice({\n  name: \"settings\",\n  initialState,\n  reducers: {\n    setSettings: (_, { payload }: PayloadAction<SettingsState>) => payload,\n  },\n});\n\nexport const { setSettings } = settingsSlice.actions;\nexport default settingsSlice.reducer;\n","import * as SQLite from \"expo-sqlite\";\nimport { ScoreData } from \"types/Score\";\n\nconst db = SQLite.openDatabase(\"buildie.db\");\n\nexport const init = () =>\n  new Promise((resolve, reject) => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"\\\n            CREATE TABLE IF NOT EXISTS scores (\\\n                _id INTEGER PRIMARY KEY, \\\n                username TEXT NOT NULL, \\\n                score INTEGER NOT NULL \\\n            );\",\n        [],\n        () => {\n          resolve(true);\n        },\n        (_, err) => {\n          reject(err);\n          return false;\n        }\n      );\n    });\n  });\n\nexport const fetchLocalScores = () =>\n  new Promise((resolve, reject) => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"SELECT * FROM scores WHERE score > 0 ORDER BY score DESC\",\n        [],\n        (_, result) => {\n          resolve(result);\n        },\n        (_, err) => {\n          reject(err);\n          return false;\n        }\n      );\n    });\n  });\n\nexport const submitLocalScore = (newScore: Omit<ScoreData, \"_id\">) =>\n  new Promise((resolve, reject) => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"INSERT INTO scores (username, score) VALUES (?, ?);\",\n        [newScore.username, newScore.score],\n        (_, result) => {\n          resolve(result);\n        },\n        (_, err) => {\n          reject(err);\n          return false;\n        }\n      );\n    });\n  });\n\nexport const clearLocalScores = () =>\n  new Promise((resolve, reject) => {\n    db.transaction((tx) => {\n      tx.executeSql(\n        \"DELETE FROM scores\",\n        [],\n        () => {\n          resolve(true);\n        },\n        (_, err) => {\n          reject(err);\n          return false;\n        }\n      );\n    });\n  });\n","import { gql } from \"graphql-request\";\n\nexport const SIGNUP_MUTATION = gql`\n  mutation ($input: SignupInput!) {\n    signup(input: $input) {\n      data {\n        accessToken\n        refreshToken\n        userId\n      }\n      problem\n    }\n  }\n`;\n\nexport const SIGNIN_MUTATION = gql`\n  mutation ($input: SigninInput!) {\n    signin(input: $input) {\n      data {\n        accessToken\n        refreshToken\n        userId\n      }\n      problem\n    }\n  }\n`;\n\nexport const REFRESH_TOKEN_MUTATION = gql`\n  mutation ($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      userId\n      refreshToken\n      accessToken\n    }\n  }\n`;\n\nexport const INVALIDATE_REFRESH_TOKEN_MUTATION = gql`\n  mutation ($refreshToken: String!) {\n    invalidateRefreshToken(refreshToken: $refreshToken)\n  }\n`;\n\nexport const SCORES_QUERY = gql`\n  query {\n    scores {\n      _id\n      score\n      username\n    }\n  }\n`;\n\nexport const SUBMIT_SCORE_MUTATION = gql`\n  mutation ($score: Int!) {\n    submitScore(score: $score) {\n      data {\n        _id\n        score\n        username\n      }\n      problem\n    }\n  }\n`;\n\nexport const CREATE_GAME_MUTATION = gql`\n  mutation ($username: String!) {\n    createGame(username: $username) {\n      data {\n        _id\n      }\n      problem\n    }\n  }\n`;\n\nexport const UPDATE_GAME_MUTATION = gql`\n  mutation ($gameId: ID!, $gameOver: Boolean!, $playerBoard: [Int!]!) {\n    updateGame(\n      gameId: $gameId\n      gameOver: $gameOver\n      playerBoard: $playerBoard\n    ) {\n      data {\n        gameStatus\n        players {\n          user\n          board\n        }\n      }\n      problem\n    }\n  }\n`;\n\nexport const GAME_QUERY = gql`\n  query ($gameId: String!) {\n    game(gameId: $gameId) {\n      gameStatus\n      players {\n        user\n        board\n      }\n    }\n  }\n`;\n","export const USER_DATA = \"userData\";\nexport const GAME_STATE = \"gameState\";\nexport const SETTINGS = \"settings\";\n","import * as SecureStore from \"expo-secure-store\";\nimport { AuthData } from \"../types/User\";\nimport { AppThunk } from \".\";\nimport { login } from \"./auth\";\nimport { USER_DATA } from \"@constants/PersistedData\";\n\nconst saveUserDataToStorage = (userData: AuthData) => {\n  SecureStore.setItemAsync(USER_DATA, JSON.stringify(userData));\n};\n\nexport const authenticate =\n  (authData: AuthData): AppThunk =>\n  async (dispatch) => {\n    dispatch(login(authData));\n    saveUserDataToStorage(authData);\n  };\n","import { createApi } from \"@reduxjs/toolkit/query/react\";\nimport type { BaseQueryFn } from \"@reduxjs/toolkit/dist/query/baseQueryTypes\";\nimport { request, ClientError } from \"graphql-request\";\nimport { createClient } from \"graphql-ws\";\nimport { graphqlRequestBaseQueryArgs } from \"./graphqlBaseQueryTypes\";\nimport * as SecureStore from \"expo-secure-store\";\nimport {\n  CREATE_GAME_MUTATION,\n  GAME_QUERY,\n  INVALIDATE_REFRESH_TOKEN_MUTATION,\n  SCORES_QUERY,\n  SIGNIN_MUTATION,\n  SIGNUP_MUTATION,\n  SUBMIT_SCORE_MUTATION,\n  UPDATE_GAME_MUTATION,\n  REFRESH_TOKEN_MUTATION,\n} from \"./gqlConfig\";\nimport { AuthResponse, SigninRequest, SignupRequest } from \"../types/User\";\nimport { ScoreData, ScoreResponse } from \"types/Score\";\nimport { GameData, GameRequest, GameResponse } from \"types/Game\";\nimport { authenticate } from \"@store/authThunks\";\nimport { AppThunk, RootState } from \"@store/index\";\nimport { logout } from \"@store/auth\";\nimport { USER_DATA } from \"@constants/PersistedData\";\n\nexport const invalidate = (): AppThunk => (dispatch, getState) => {\n  const refreshToken = (getState() as RootState).auth.refreshToken;\n  SecureStore.deleteItemAsync(USER_DATA);\n  dispatch(gameApi.endpoints.logout.initiate(refreshToken!));\n  dispatch(logout());\n};\n\nexport const graphqlBaseQueryWithReauth =\n  ({\n    baseUrl,\n    prepareHeaders = (headers) => headers,\n  }: graphqlRequestBaseQueryArgs): BaseQueryFn<\n    { body: string; variables?: any },\n    unknown,\n    Pick<ClientError, \"name\" | \"message\" | \"stack\">\n  > =>\n  async ({ body, variables }, { getState, dispatch }) => {\n    function headers() {\n      return prepareHeaders(new Headers(), {\n        getState,\n        dispatch,\n      });\n    }\n    try {\n      return { data: await request(baseUrl, body, variables, await headers()) };\n    } catch (error) {\n      if (error instanceof ClientError) {\n        if (\n          error.response.errors?.some(\n            (e) => e.extensions?.code === \"UNAUTHENTICATED\"\n          )\n        ) {\n          try {\n            const refreshToken = (getState() as RootState).auth.refreshToken;\n            const refreshResult = await request(\n              baseUrl,\n              REFRESH_TOKEN_MUTATION,\n              {\n                refreshToken,\n              }\n            );\n            dispatch(authenticate(refreshResult.refreshToken));\n            return {\n              data: await request(baseUrl, body, variables, await headers()),\n            };\n          } catch (error) {\n            dispatch(invalidate());\n            return {\n              error: {\n                name: \"REFRESH_TOKEN\",\n                message: \"Invalid or expired refresh token\",\n              },\n            };\n          }\n        }\n        const { name, message, stack } = error;\n        return { error: { name, message, stack } };\n      }\n      if (error instanceof Error) {\n        return { error: { name: \"Error\", message: error.message } };\n      }\n      throw error;\n    }\n  };\n\nexport const gameApi = createApi({\n  reducerPath: \"gameApi\",\n  baseQuery: graphqlBaseQueryWithReauth({\n    baseUrl: \"http:/192.168.178.90:4000/graphql\",\n    prepareHeaders: (headers, { getState }) => {\n      const accessToken = (getState() as RootState).auth.accessToken;\n      if (accessToken) {\n        headers.set(\"authorization\", `Bearer ${accessToken}`);\n      }\n      return headers;\n    },\n  }),\n  tagTypes: [\"Scores\"],\n  endpoints: (builder) => ({\n    signup: builder.mutation<AuthResponse, SignupRequest>({\n      query: (user) => ({\n        body: SIGNUP_MUTATION,\n        variables: { input: user },\n      }),\n      transformResponse: (response: { signup: AuthResponse }) =>\n        response.signup,\n    }),\n    signin: builder.mutation<AuthResponse, SigninRequest>({\n      query: (user) => ({\n        body: SIGNIN_MUTATION,\n        variables: { input: user },\n      }),\n      transformResponse: (response: { signin: AuthResponse }) =>\n        response.signin,\n    }),\n    logout: builder.mutation<boolean, string>({\n      query: (refreshToken) => ({\n        body: INVALIDATE_REFRESH_TOKEN_MUTATION,\n        variables: { refreshToken },\n      }),\n    }),\n    scores: builder.query<ScoreData[], void>({\n      query: () => ({\n        body: SCORES_QUERY,\n      }),\n      transformResponse: (response: { scores: ScoreData[] }) => response.scores,\n      providesTags: () => [\"Scores\"],\n    }),\n    submitScore: builder.mutation<ScoreResponse, number>({\n      query: (score) => ({\n        body: SUBMIT_SCORE_MUTATION,\n        variables: { score },\n      }),\n      transformResponse: (response: { submitScore: ScoreResponse }) =>\n        response.submitScore,\n      invalidatesTags: [\"Scores\"],\n    }),\n    createGame: builder.mutation({\n      query: (username) => ({\n        body: CREATE_GAME_MUTATION,\n        variables: { username },\n      }),\n      transformResponse: (response: { createGame: GameResponse }) =>\n        response.createGame,\n    }),\n    game: builder.query<GameData, string>({\n      query: (gameId) => ({\n        body: GAME_QUERY,\n        variables: { gameId },\n      }),\n      transformResponse: (response: { game: GameData }) => response.game,\n      async onCacheEntryAdded(\n        gameId,\n        { updateCachedData, cacheDataLoaded, cacheEntryRemoved }\n      ) {\n        const client = createClient({\n          url: \"ws://192.168.178.90:4000/graphql\",\n        });\n\n        try {\n          await cacheDataLoaded;\n\n          await new Promise((resolve, reject) => {\n            client.subscribe(\n              {\n                query: `subscription { gameUpdate(gameId: \"${gameId}\") { gameStatus winner players { user board } } }`,\n              },\n              {\n                next: (payload: { data: { gameUpdate: GameData } }) => {\n                  updateCachedData(() => {\n                    return payload.data.gameUpdate;\n                  });\n                },\n                error: reject,\n                complete: () => resolve,\n              }\n            );\n          });\n        } catch (err) {\n          console.log(err);\n        }\n\n        await cacheEntryRemoved;\n        client.dispose();\n      },\n    }),\n    updateGame: builder.mutation<GameResponse, GameRequest>({\n      query: (game) => ({\n        body: UPDATE_GAME_MUTATION,\n        variables: {\n          gameId: game.gameId,\n          gameOver: game.gameOver,\n          playerBoard: game.playerBoard,\n        },\n      }),\n      transformResponse: (response: { updateGame: GameResponse }) =>\n        response.updateGame,\n    }),\n  }),\n});\n\nexport const {\n  useSignupMutation,\n  useSigninMutation,\n  useScoresQuery,\n  useCreateGameMutation,\n  useGameQuery,\n  useUpdateGameMutation,\n} = gameApi;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { SQLError, SQLResultSet } from \"expo-sqlite\";\nimport { fetchLocalScores, submitLocalScore } from \"../helpers/db\";\nimport { gameApi } from \"../services/gameApi\";\nimport { ScoreData } from \"types/Score\";\nimport { resetGameState } from \"./gameState\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { GAME_STATE } from \"@constants/PersistedData\";\n\ntype ScoresState = {\n  localScores: ScoreData[];\n};\n\nconst initialState: ScoresState = {\n  localScores: [],\n};\n\nexport const loadScores = createAsyncThunk(\n  \"scores/loadScores\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const dbResult = (await fetchLocalScores()) as SQLResultSet;\n      return dbResult.rows._array as ScoreData[];\n    } catch (err) {\n      return rejectWithValue(err as SQLError);\n    }\n  }\n);\n\nexport const submitScore = createAsyncThunk(\n  \"scores/submitScore\",\n  async (newScore: Omit<ScoreData, \"_id\">, { dispatch, rejectWithValue }) => {\n    dispatch(gameApi.endpoints.submitScore.initiate(newScore.score));\n    try {\n      const dbResult = (await submitLocalScore(newScore)) as SQLResultSet;\n      return {\n        _id: dbResult.insertId!.toString(),\n        score: newScore.score,\n        username: newScore.username,\n      };\n    } catch (err) {\n      return rejectWithValue(err as SQLError);\n    } finally {\n      AsyncStorage.removeItem(GAME_STATE);\n      dispatch(resetGameState());\n    }\n  }\n);\n\nconst scoresSlice = createSlice({\n  name: \"scores\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(submitScore.fulfilled, (state, { payload }) => {\n      state.localScores = state.localScores.concat(payload);\n    }),\n      builder.addCase(loadScores.fulfilled, (state, { payload }) => {\n        state.localScores = payload;\n      });\n  },\n});\n\nexport default scoresSlice.reducer;\n","import { AnyAction, configureStore, ThunkAction } from \"@reduxjs/toolkit\";\nimport authSlice from \"./auth\";\nimport gameSlice from \"./gameState\";\nimport settingsSlice from \"./settings\";\nimport scoresSlice from \"./scores\";\nimport { gameApi } from \"../services/gameApi\";\n\nconst store = configureStore({\n  reducer: {\n    auth: authSlice,\n    game: gameSlice,\n    settings: settingsSlice,\n    scores: scoresSlice,\n    [gameApi.reducerPath]: gameApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(gameApi.middleware),\n});\n\nexport default store;\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  AnyAction\n>;\n","export const squareColors: { [key: number]: string } = {\n  \"-1\": \"transparent\",\n  0: \"#000000\",\n  1: \"#66CCFF\",\n  2: \"#FFD500\",\n  3: \"#FF971C\",\n  4: \"#0341AE\",\n  5: \"#72CB3B\",\n  6: \"#FF3213\",\n  7: \"#AA00FF\",\n  9: \"#808080\",\n};\n\nexport enum appColors {\n  black = \"#121212EE\",\n  white = \"#eee\",\n  primary = \"#3b5998\",\n  primaryLight = \"#4c669f\",\n  primaryDark = \"#192f6a\",\n  secondary = \"orange\",\n  error = \"#B00020\",\n}\n","import { appColors } from \"@constants/Colors\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\n\ntype GradientBackgroundProps = {\n  children: React.ReactNode;\n};\n\nconst GradientBackground = ({ children }: GradientBackgroundProps) => {\n  return (\n    <View style={styles.screen}>\n      <StatusBar style=\"light\" />\n      <LinearGradient\n        style={styles.background}\n        colors={[\n          appColors.primaryLight,\n          appColors.primary,\n          appColors.primaryDark,\n        ]}\n      />\n      {children}\n    </View>\n  );\n};\n\nexport default GradientBackground;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  background: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n  },\n});\n","import React from \"react\";\nimport { StyleSheet, Text, TextStyle } from \"react-native\";\n\ntype DefaultTextProps = {\n  children: React.ReactNode;\n  style?: TextStyle;\n};\n\nconst DefaultText = ({ children, style }: DefaultTextProps) => {\n  return <Text style={{ ...styles.text, ...style }}>{children}</Text>;\n};\n\nexport default DefaultText;\n\nconst styles = StyleSheet.create({\n  text: {\n    fontFamily: \"dogbyte\",\n  },\n});\n","import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  TouchableOpacity,\n  ViewStyle,\n  TouchableOpacityProps,\n  TextStyle,\n} from \"react-native\";\nimport DefaultText from \"./DefaultText\";\n\ntype MainButtonProps = {\n  children: React.ReactNode;\n  style?: ViewStyle;\n  textStyle?: TextStyle;\n} & TouchableOpacityProps;\n\nconst DefaultButton = ({\n  children,\n  style,\n  textStyle,\n  ...props\n}: MainButtonProps) => {\n  return (\n    <TouchableOpacity\n      style={[styles.button, style]}\n      activeOpacity={0.6}\n      {...props}\n    >\n      <View style={styles.buttonTextContainer}>\n        {props.disabled && (\n          <View style={styles.lineContainer}>\n            <View style={styles.line} />\n          </View>\n        )}\n        <DefaultText style={{ ...styles.buttonText, ...textStyle }}>\n          {children}\n        </DefaultText>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default DefaultButton;\n\nconst styles = StyleSheet.create({\n  button: {\n    paddingVertical: 12,\n    paddingHorizontal: 30,\n    borderRadius: 25,\n  },\n  lineContainer: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    justifyContent: \"center\",\n    zIndex: 1,\n  },\n  line: {\n    borderBottomWidth: 4,\n    borderColor: \"red\",\n  },\n  buttonTextContainer: {\n    alignSelf: \"center\",\n  },\n  buttonText: {\n    color: \"white\",\n    paddingVertical: 5,\n    fontSize: 26,\n  },\n});\n","import {\n  ImageSourcePropType,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  ViewStyle,\n} from \"react-native\";\nimport React from \"react\";\n\ntype IconButtonProps = {\n  pressHandler: () => void;\n  icon: ImageSourcePropType;\n  style?: ViewStyle;\n};\n\nconst IconButton = ({ pressHandler, icon, style }: IconButtonProps) => {\n  return (\n    <TouchableOpacity\n      onPress={pressHandler}\n      style={{ ...styles.button, ...style }}\n    >\n      <Image style={styles.icon} resizeMode=\"cover\" source={icon} />\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(IconButton);\n\nconst styles = StyleSheet.create({\n  button: {\n    width: 50,\n    height: 50,\n  },\n  icon: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n});\n","import React from \"react\";\nimport {\n  StyleSheet,\n  View,\n  Dimensions,\n  Platform,\n  StatusBar,\n} from \"react-native\";\nimport { GameMode } from \"screens/LeaderboardScreen\";\nimport DefaultButton from \"../UI/DefaultButton\";\nimport DefaultText from \"../UI/DefaultText\";\n\ntype LeaderboardHeaderProps = {\n  gameMode: GameMode;\n  setGameModeHandler: (gameMode: GameMode) => void;\n};\n\nconst LeaderboardHeader = ({\n  gameMode,\n  setGameModeHandler,\n}: LeaderboardHeaderProps) => {\n  return (\n    <View style={styles.leaderboardHeaderContainer}>\n      <View style={styles.leaderboardHeader}>\n        <View style={styles.titleContainer}>\n          <DefaultText style={styles.title}>HIGHSCORES</DefaultText>\n        </View>\n        <View style={styles.gameModeContainer}>\n          <DefaultButton\n            style={[\n              styles.gameMode,\n              gameMode === \"LOCAL\" && styles.selectedGameMode,\n            ]}\n            textStyle={{ color: gameMode === \"LOCAL\" ? \"black\" : \"white\" }}\n            onPress={() => {\n              setGameModeHandler(\"LOCAL\");\n            }}\n          >\n            LOCAL\n          </DefaultButton>\n          <DefaultButton\n            style={[\n              styles.gameMode,\n              gameMode === \"ONLINE\" && styles.selectedGameMode,\n            ]}\n            textStyle={{ color: gameMode === \"ONLINE\" ? \"black\" : \"white\" }}\n            onPress={() => {\n              setGameModeHandler(\"ONLINE\");\n            }}\n          >\n            ONLINE\n          </DefaultButton>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(LeaderboardHeader);\n\nconst styles = StyleSheet.create({\n  leaderboardHeaderContainer: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    backgroundColor: \"#000\",\n  },\n  leaderboardHeader: {\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    backgroundColor: \"#000\",\n    height: Dimensions.get(\"window\").height * 0.2,\n  },\n  titleContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  title: {\n    color: \"white\",\n    fontSize: 60,\n  },\n  gameModeContainer: {\n    flexDirection: \"row\",\n    paddingVertical: 10,\n  },\n  gameMode: {\n    flex: 1,\n    backgroundColor: \"black\",\n  },\n  selectedGameMode: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n});\n","import React, { ReactNode } from \"react\";\nimport { StyleSheet, View, ViewStyle } from \"react-native\";\n\ntype CardProps = {\n  children: ReactNode;\n  style?: ViewStyle;\n};\n\nconst Card = ({ children, style }: CardProps) => {\n  return <View style={{ ...styles.card, ...style }}>{children}</View>;\n};\n\nexport default Card;\n\nconst styles = StyleSheet.create({\n  card: {\n    backgroundColor: \"white\",\n    borderRadius: 12,\n    shadowColor: \"black\",\n    shadowOpacity: 0.26,\n    shadowOffset: { width: 0, height: 2 },\n    shadowRadius: 8,\n    elevation: 5,\n  },\n});\n","export enum InputActionType {\n  INPUT_CHANGE = \"INPUT_CHANGE\",\n  INPUT_BLUR = \"INPUT_BLUR\",\n}\n\ntype InputState = {\n  value: string;\n  isValid: boolean;\n  touched: boolean;\n};\n\ntype InputAction =\n  | {\n      type: InputActionType.INPUT_CHANGE;\n      value: string;\n      isValid: boolean;\n    }\n  | {\n      type: InputActionType.INPUT_BLUR;\n    };\n\nexport const inputReducer = (\n  state: InputState,\n  action: InputAction\n): InputState => {\n  switch (action.type) {\n    case InputActionType.INPUT_CHANGE:\n      return {\n        ...state,\n        value: action.value,\n        isValid: action.isValid,\n      };\n    case InputActionType.INPUT_BLUR:\n      return {\n        ...state,\n        touched: true,\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useEffect, useReducer } from \"react\";\nimport { StyleSheet, TextInput, TextInputProps, View } from \"react-native\";\nimport { InputActionType, inputReducer } from \"../../reducers/inputReducer\";\nimport DefaultText from \"./DefaultText\";\n\ntype InputProps = {\n  id: string;\n  label?: string;\n  error: boolean;\n  errorText: string;\n  initialValue?: string;\n  initiallyValid?: boolean;\n  onInputChange: (input: string, value: string, isValid: boolean) => void;\n  email?: boolean;\n  required?: boolean;\n  min?: number;\n  max?: number;\n  minLength?: number;\n};\n\nconst Input = (props: InputProps & TextInputProps) => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props?.initialValue ?? \"\",\n    isValid: props?.initiallyValid ?? false,\n    touched: false,\n  });\n\n  const { id, onInputChange } = props;\n\n  useEffect(() => {\n    if (inputState.touched) {\n      onInputChange(props.id, inputState.value, inputState.isValid);\n    }\n  }, [id, inputState, onInputChange]);\n\n  const valueChangeHandler = (text: string) => {\n    const emailRegex =\n      /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let isValid = true;\n    if (props.required && text.trim().length === 0) {\n      isValid = false;\n    }\n    if (props.email && !emailRegex.test(text.toLowerCase())) {\n      isValid = false;\n    }\n    if (props.min != null && +text < props.min) {\n      isValid = false;\n    }\n    if (props.max != null && +text > props.max) {\n      isValid = false;\n    }\n    if (props.minLength != null && text.length < props.minLength) {\n      isValid = false;\n    }\n\n    dispatch({\n      type: InputActionType.INPUT_CHANGE,\n      value: text,\n      isValid,\n    });\n  };\n\n  const lostFocusHandler = () => {\n    dispatch({ type: InputActionType.INPUT_BLUR });\n  };\n\n  return (\n    <View style={styles.control}>\n      <DefaultText style={styles.label}>{props.label}</DefaultText>\n      <TextInput\n        {...props}\n        style={styles.input}\n        value={inputState.value}\n        onChangeText={valueChangeHandler}\n        onBlur={lostFocusHandler}\n      />\n      {!inputState.isValid && inputState.touched && (\n        <View style={styles.errorContainer}>\n          <DefaultText style={styles.error}>{props.errorText}</DefaultText>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default React.memo(Input);\n\nconst styles = StyleSheet.create({\n  control: {\n    width: \"100%\",\n  },\n  label: {\n    color: \"#ccc\",\n    fontSize: 18,\n    marginVertical: 8,\n  },\n  input: {\n    paddingHorizontal: 2,\n    paddingVertical: 5,\n    borderBottomColor: \"#ccc\",\n    borderBottomWidth: 1,\n    fontSize: 18,\n    color: \"white\",\n  },\n  errorContainer: {\n    marginVertical: 5,\n  },\n  error: {\n    color: \"red\",\n    fontSize: 18,\n  },\n});\n","import { StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport { squareColors } from \"@constants/Colors\";\n\ntype CellProps = {\n  type: number;\n  width: number;\n  border?: boolean;\n};\n\nconst Cell = ({ type, width, border }: CellProps) => {\n  return (\n    <View\n      style={{\n        ...styles.cell,\n        ...{\n          borderBottomWidth: border ? 2 : 0,\n          borderColor: border ? \"black\" : \"\",\n          width,\n          height: width,\n          backgroundColor: squareColors[type],\n        },\n      }}\n    />\n  );\n};\n\nexport default React.memo(Cell);\n\nconst styles = StyleSheet.create({\n  cell: {\n    // borderBottomWidth: 2,\n    // borderColor: \"black\",\n    // borderBottomColor: \"rgba(0, 0, 0, 0.5)\",\n    // borderRightColor: \"rgba(0, 0, 0, 0.15)\",\n    // borderTopColor: \"rgba(255, 255, 255, 0.33)\",\n    // borderLeftColor: \"rgba(255, 255, 255, 0.20)\",\n  },\n});\n","import { Dimensions, StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport Cell from \"./Cell\";\nimport DefaultText from \"../UI/DefaultText\";\n\ntype PieceProps = {\n  title?: string;\n  piece?: string;\n  transparentBackground?: boolean;\n};\n\nexport const pieceWidth = Dimensions.get(\"window\").width * 0.15;\n\nconst Piece = ({ title, piece, transparentBackground }: PieceProps) => {\n  const currHeldPiece =\n    piece &&\n    [...piece].map((type, idx) => (\n      <Cell\n        key={`h_${idx}`}\n        type={+type === 0 && transparentBackground ? -1 : +type}\n        width={pieceWidth / 4}\n        border={!transparentBackground}\n      />\n    ));\n\n  return (\n    <>\n      <DefaultText style={styles.title}>{title}</DefaultText>\n      <View\n        style={{\n          ...styles.pieceContainer,\n          ...{\n            borderColor: transparentBackground ? \"\" : \"grey\",\n            borderWidth: transparentBackground ? 0 : 2,\n          },\n        }}\n      >\n        <View\n          style={{\n            ...styles.piece,\n            ...{\n              backgroundColor: transparentBackground ? \"\" : \"#000\",\n            },\n          }}\n        >\n          {currHeldPiece}\n        </View>\n      </View>\n    </>\n  );\n};\n\nexport default React.memo(Piece);\n\nconst styles = StyleSheet.create({\n  pieceContainer: {\n    marginBottom: 10,\n  },\n  title: {\n    color: \"#bbb\",\n    fontSize: 18,\n    textAlign: \"center\",\n  },\n  piece: {\n    width: pieceWidth,\n    height: pieceWidth,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n});\n","import { Animated, StyleSheet, Dimensions } from \"react-native\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport GradientBackground from \"./GradientBackground\";\nimport shapesJson from \"@constants/Shapes.json\";\nimport Piece, { pieceWidth } from \"../Game/Piece\";\n\ntype AnimatedBackgroundProps = {\n  children: React.ReactNode;\n};\n\nconst animationHeight = Dimensions.get(\"window\").height - pieceWidth;\nconst animationWidth = Dimensions.get(\"window\").width - pieceWidth;\n\nconst AnimatedBackground = ({ children }: AnimatedBackgroundProps) => {\n  const shapes = useRef(Object.values(shapesJson)).current;\n  const [rndWidth, setRndWidth] = useState(\n    Math.floor(Math.random() * animationWidth)\n  );\n  const translation = useRef(new Animated.Value(0)).current;\n\n  useEffect(() => {\n    const animation = () => {\n      Animated.timing(translation, {\n        toValue: animationHeight,\n        duration: 4000,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          setRndWidth(Math.floor(Math.random() * animationWidth));\n          translation.setValue(0);\n          animation();\n        }\n      });\n    };\n\n    animation();\n  }, []);\n\n  return (\n    <GradientBackground>\n      <Animated.View\n        style={{\n          left: rndWidth,\n          transform: [{ translateY: translation }],\n        }}\n      >\n        <Piece\n          piece={shapes[Math.floor(Math.random() * shapes.length)]}\n          transparentBackground\n        />\n      </Animated.View>\n      {children}\n    </GradientBackground>\n  );\n};\n\nexport default AnimatedBackground;\n\nconst styles = StyleSheet.create({\n  animatedPiece: {\n    position: \"absolute\",\n    top: 0,\n  },\n});\n","const Points: { [key: number]: number } = {\n  0: 1,\n  1: 100,\n  2: 300,\n  3: 500,\n  4: 800,\n};\n\nexport default Points;\n","import Points from \"@constants/Points\";\n\nclass Board {\n  private _board;\n  private _lines;\n  private _speed;\n  private _initialSpeed;\n  private _score;\n  static w = 12;\n  static h = 24;\n\n  constructor(\n    initialBoard?: Uint8Array,\n    initialSpeed = 1,\n    initialLines = 0,\n    initialScore = 0\n  ) {\n    this._initialSpeed = initialSpeed;\n    this._speed = initialSpeed;\n    this._lines = initialLines;\n    this._score = initialScore;\n    this._board = initialBoard ?? this.init();\n  }\n\n  get board() {\n    return this._board;\n  }\n\n  get lines() {\n    return this._lines;\n  }\n\n  get speed() {\n    return this._speed;\n  }\n\n  get score() {\n    return this._score;\n  }\n\n  init() {\n    const board = new Uint8Array(Board.h * Board.w);\n    for (let yIndex = 0; yIndex < Board.h; yIndex += 1)\n      for (let xIndex = 0; xIndex < Board.w; xIndex += 1) {\n        board[yIndex * Board.w + xIndex] =\n          xIndex === 0 || xIndex === Board.w - 1 || yIndex === Board.h - 1\n            ? 9\n            : 0;\n      }\n    return board;\n  }\n\n  // update method\n  clearLines(pyIndex: number) {\n    let clearedLines = 0;\n    // forward\n    for (let yFwIndex = pyIndex; yFwIndex < Board.h - 1; yFwIndex += 1) {\n      let isFilled = true;\n      for (let xIndex = 0; xIndex < Board.w; xIndex += 1) {\n        if (\n          this._board[yFwIndex * Board.w + xIndex] === 0 ||\n          this._board[yFwIndex * Board.w + xIndex] === undefined\n        ) {\n          isFilled = false;\n          break;\n        }\n      }\n\n      if (isFilled) {\n        // backward\n        for (let yBwIndex = yFwIndex; yBwIndex > 0; yBwIndex -= 1)\n          for (let xIndex = 1; xIndex < Board.w - 1; xIndex += 1) {\n            this.board[yBwIndex * Board.w + xIndex] =\n              this.board[(yBwIndex - 1) * Board.w + xIndex];\n          }\n        clearedLines++;\n        this._lines++;\n      }\n    }\n    // scoring\n    this._score += this.speed * clearedLines * Points[clearedLines];\n    // speed\n    this._speed = Math.floor((this.lines + 10) / 10) + (this._initialSpeed - 1);\n  }\n\n  reset() {\n    this._score = 0;\n    this._lines = 0;\n    this._speed = this._initialSpeed;\n    this._board = this.init();\n  }\n}\n\nexport default Board;\n","import Board from \"./Board\";\nimport Shape from \"./Shape\";\n\nclass Piece {\n  private _shape;\n  #board;\n  // current position\n  x;\n  y;\n  r;\n  collided;\n  static w = 4;\n\n  constructor(shape: Shape, board: Board) {\n    this.x = shape.x;\n    this.y = shape.y;\n    this.r = shape.r;\n    this._shape = shape;\n    this.#board = board;\n    this.collided = false;\n  }\n\n  get shape() {\n    return this._shape.shape;\n  }\n\n  get board() {\n    return this.#board.board;\n  }\n\n  reset() {\n    this.x = this._shape.x;\n    this.y = this._shape.y;\n    this.r = this._shape.r;\n    this.collided = false;\n  }\n\n  rotate(pxIndex: number, pyIndex: number, r: number) {\n    switch (r % 4) {\n      case 1:\n        // 90°) i = w(w-1) + y - wx\n        return Piece.w * (Piece.w - 1) + pyIndex - Piece.w * pxIndex;\n      case 2:\n        // 180°) i = w^2 - 1 - wy - x\n        return Piece.w * Piece.w - 1 - Piece.w * pyIndex - pxIndex;\n      case 3:\n        // 270°) i = w - 1 - y + wx\n        return Piece.w - 1 - pyIndex + Piece.w * pxIndex;\n      default:\n        // 0°) i = wy + x\n        return Piece.w * pyIndex + pxIndex;\n    }\n  }\n\n  collides(new_x = this.x, new_y = this.y, new_r = this.r) {\n    for (let pyIndex = 0; pyIndex < Piece.w; pyIndex += 1)\n      for (let pxIndex = 0; pxIndex < Piece.w; pxIndex += 1) {\n        if (\n          +this.shape[this.rotate(pxIndex, pyIndex, new_r)] !== 0 &&\n          this.board[(pyIndex + new_y) * Board.w + (pxIndex + new_x)] !== 0\n        )\n          return true;\n      }\n    return false;\n  }\n\n  private lock() {\n    for (let pyIndex = 0; pyIndex < Piece.w; pyIndex += 1)\n      for (let pxIndex = 0; pxIndex < Piece.w; pxIndex += 1) {\n        if (+this.shape[this.rotate(pxIndex, pyIndex, this.r)] !== 0)\n          this.board[(pyIndex + this.y) * Board.w + (pxIndex + this.x)] =\n            +this.shape[this.rotate(pxIndex, pyIndex, this.r)];\n      }\n  }\n\n  // update method\n  moveDown() {\n    if (this.collides(this.x, this.y + 1)) {\n      this.collided = true;\n      this.lock();\n      this.#board.clearLines(this.y);\n      return;\n    }\n    this.y += 1;\n  }\n\n  moveLeft() {\n    this.x -= !this.collides(this.x - 1) ? 1 : 0;\n  }\n\n  moveRight() {\n    this.x += !this.collides(this.x + 1) ? 1 : 0;\n  }\n\n  private wallKick(offset = 0): number {\n    // stop\n    if (\n      !this.collides(this.x + offset, this.y, this.r + 1) ||\n      offset < -1 ||\n      offset > 1\n    ) {\n      return offset;\n      // recursive\n    } else {\n      return this.wallKick((offset += this.x > Board.w / 2 ? -1 : 1));\n    }\n  }\n\n  rotateRight() {\n    // wall kick\n    const offset = this.wallKick();\n    if (!this.collides(this.x + this.wallKick(), this.y, this.r + 1)) {\n      this.x += offset;\n      this.r += 1;\n    }\n  }\n\n  hardDrop() {\n    while (!this.collided) this.moveDown();\n  }\n}\n\nexport default Piece;\n","import React, { useCallback, useMemo } from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport Cell from \"./Cell\";\nimport Piece from \"@models/Piece\";\nimport BoardClass from \"@models/Board\";\n\ntype BoardProps = {\n  currPiece?: Piece | null;\n  board: number[];\n  boardWidth: number;\n  border?: boolean;\n};\n\nconst Board = ({ currPiece, board, boardWidth, border }: BoardProps) => {\n  const cellWidth = useMemo(() => Math.floor(boardWidth / BoardClass.w), []);\n\n  const currBoard = useMemo(\n    () =>\n      board.map((type, idx) => {\n        return (\n          <Cell\n            key={`b_${idx}`}\n            type={type}\n            width={cellWidth}\n            border={border}\n          />\n        );\n      }),\n    [board]\n  );\n\n  const drawPiece = useCallback(\n    (board: JSX.Element[], piece: Piece, piece_y: number, isGhost = false) => {\n      for (let pyIndex = 0; pyIndex < Piece.w; pyIndex += 1)\n        for (let pxIndex = 0; pxIndex < Piece.w; pxIndex += 1) {\n          const bIndex =\n            (piece_y + pyIndex) * BoardClass.w + (piece.x + pxIndex);\n          const pIndex = piece.rotate(pxIndex, pyIndex, piece.r)!;\n          if (+piece.shape[pIndex] !== 0)\n            board[bIndex] = (\n              <Cell\n                key={`b_${bIndex}`}\n                type={isGhost ? 8 : +piece.shape[pIndex]}\n                width={cellWidth}\n                border={border}\n              />\n            );\n        }\n    },\n    []\n  );\n\n  const fillBoard = useCallback((board: JSX.Element[], piece: Piece) => {\n    let newBoard = [...board];\n\n    let ghost_y = null;\n    for (let bIndex = BoardClass.h - 2; bIndex > piece.y; bIndex -= 1) {\n      if (!piece.collides(piece.x, bIndex)) continue;\n      ghost_y = bIndex - 1;\n    }\n\n    // ghost piece\n    ghost_y && drawPiece(newBoard, piece, ghost_y, true);\n    // piece\n    drawPiece(newBoard, piece, piece.y);\n\n    return newBoard;\n  }, []);\n\n  return (\n    <View style={styles.gridContainer}>\n      <View style={{ ...styles.grid, width: boardWidth }}>\n        {currPiece ? fillBoard(currBoard, currPiece) : currBoard}\n      </View>\n    </View>\n  );\n};\n\nexport default Board;\n\nconst styles = StyleSheet.create({\n  gridContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  grid: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n});\n","import { useRef, useMemo, useCallback } from \"react\";\n\nconst useGameLoop = (speed: number, update: () => void, draw: () => void) => {\n  const rafRef = useRef<number | null>(null);\n  const ms_per_update = useMemo(() => 1000 / speed, [speed]);\n  const prevTimeRef = useRef(performance.now());\n  const lagRef = useRef(0);\n  const started = useRef(false);\n\n  const gameLoop = (time: number) => {\n    const elapsedTimeBetweenFrames = time - prevTimeRef.current;\n    prevTimeRef.current = time;\n    lagRef.current += elapsedTimeBetweenFrames;\n    let loops = 0;\n\n    while (lagRef.current >= ms_per_update) {\n      // update step\n      update();\n      lagRef.current -= ms_per_update;\n      // sanity check\n      if (++loops > 240) {\n        lagRef.current = 0;\n        break;\n      }\n    }\n\n    // draw step\n    // unnecessary to draw if there aren't updates yet\n    if (loops) draw();\n    rafRef.current = requestAnimationFrame(gameLoop);\n  };\n\n  const start = useCallback(() => {\n    if (!started.current) {\n      started.current = true;\n      // reset timers\n      prevTimeRef.current = performance.now();\n      lagRef.current = 0;\n      rafRef.current = requestAnimationFrame(gameLoop);\n    }\n  }, [started.current, speed]);\n\n  const stop = useCallback(() => {\n    started.current = false;\n    rafRef.current && cancelAnimationFrame(rafRef.current);\n  }, []);\n\n  return { start, stop };\n};\n\nexport default useGameLoop;\n","import { TypedUseSelectorHook, useSelector, useDispatch } from \"react-redux\";\nimport { RootState, AppDispatch } from \".\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useRef } from \"react\";\nimport { StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport * as Haptics from \"expo-haptics\";\nimport { useAppSelector } from \"@store/hooks\";\n\ntype JoystickButtonProps = {\n  pressHandler: () => void;\n  icon: keyof typeof FontAwesome.glyphMap;\n  feedback?: \"light\" | \"medium\";\n};\n\nconst JoystickButton = ({\n  pressHandler,\n  icon,\n  feedback = \"light\",\n}: JoystickButtonProps) => {\n  const timer = useRef<NodeJS.Timeout | null>(null);\n  const isHapticsEnabled = useAppSelector((state) => state.settings.haptics);\n\n  const handlePressIn = () => {\n    if (isHapticsEnabled)\n      switch (feedback) {\n        case \"medium\":\n          Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);\n          break;\n        default:\n          Haptics.selectionAsync();\n          break;\n      }\n    pressHandler();\n    timer.current = setTimeout(handlePressIn, 150);\n  };\n  const handlePressOut = () => {\n    clearTimeout(timer.current as NodeJS.Timeout);\n  };\n\n  return (\n    <View style={styles.buttonContainer}>\n      <TouchableOpacity\n        onPressIn={handlePressIn}\n        onPressOut={handlePressOut}\n        style={styles.joystickButton}\n      >\n        <FontAwesome name={icon} size={24} color=\"rgba(0,0,0, 0.8)\" />\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default JoystickButton;\n\nconst styles = StyleSheet.create({\n  buttonContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 5,\n  },\n  joystickButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"orange\",\n    width: 60,\n    height: 60,\n    borderWidth: 2,\n    borderColor: \"black\",\n    borderRadius: 30,\n    shadowRadius: 0.5,\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.5,\n  },\n});\n","enum Commands {\n  MoveLeft = \"MOVE_LEFT\",\n  MoveRight = \"MOVE_RIGHT\",\n  MoveDown = \"MOVE_DOWN\",\n  RotateRight = \"ROTATE_RIGHT\",\n  RotateLeft = \"ROTATE_LEFT\",\n  HardDrop = \"HARD_DROP\",\n  HoldPiece = \"HOLD_PIECE\",\n}\n\nexport default Commands;\n","import { Dimensions, StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport JoystickButton from \"./JoystickButton\";\nimport Commands from \"@constants/Commands\";\n\ntype JoystickProps = {\n  handleInput: (command: Commands) => void;\n};\n\nconst Joystick = ({ handleInput }: JoystickProps) => {\n  return (\n    <View style={styles.joystick}>\n      <View style={styles.joystickArrows}>\n        <JoystickButton\n          icon=\"arrow-up\"\n          pressHandler={() => handleInput(Commands.HardDrop)}\n          feedback=\"medium\"\n        />\n        <View style={styles.joystickArrowsContainer}>\n          <JoystickButton\n            icon=\"arrow-left\"\n            pressHandler={() => handleInput(Commands.MoveLeft)}\n          />\n          <JoystickButton\n            icon=\"arrow-down\"\n            pressHandler={() => handleInput(Commands.MoveDown)}\n          />\n          <JoystickButton\n            icon=\"arrow-right\"\n            pressHandler={() => handleInput(Commands.MoveRight)}\n          />\n        </View>\n      </View>\n      <View style={styles.joystickButtons}>\n        <JoystickButton\n          icon=\"exchange\"\n          pressHandler={() => handleInput(Commands.HoldPiece)}\n        />\n        <JoystickButton\n          icon=\"rotate-right\"\n          pressHandler={() => handleInput(Commands.RotateRight)}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(Joystick);\n\nconst styles = StyleSheet.create({\n  joystick: {\n    height: Dimensions.get(\"window\").height * 0.2,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  joystickArrows: {\n    flex: 2,\n  },\n  joystickArrowsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n  joystickButtons: {\n    flex: 1,\n  },\n});\n","import { useCallback, useState } from \"react\";\n\nconst useForceUpdate = () => {\n  const forceUpdate = useState(false)[1];\n\n  return useCallback(() => {\n    forceUpdate((s) => !s);\n  }, []);\n};\n\nexport default useForceUpdate;\n","import { Image, ImageSourcePropType, StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport DefaultText from \"../UI/DefaultText\";\n\ntype GameStatisticProps = {\n  title: string;\n  statistic: number;\n  icon: ImageSourcePropType;\n};\n\nconst GameStatistic = ({ title, statistic, icon }: GameStatisticProps) => {\n  return (\n    <View style={styles.gameStatisticContainer}>\n      <View style={styles.gameStatistic}>\n        <View style={styles.iconContainer}>\n          <Image style={styles.icon} resizeMode=\"cover\" source={icon} />\n        </View>\n      </View>\n      <DefaultText style={styles.title}>{title}</DefaultText>\n      <DefaultText style={styles.text}>{statistic}</DefaultText>\n    </View>\n  );\n};\n\nexport default React.memo(GameStatistic);\n\nconst styles = StyleSheet.create({\n  gameStatisticContainer: {\n    flex: 1,\n    justifyContent: \"flex-end\",\n    alignItems: \"center\",\n    marginBottom: 5,\n  },\n  gameStatistic: {\n    width: \"100%\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  iconContainer: {\n    height: 30,\n    width: 30,\n  },\n  icon: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  title: {\n    fontSize: 25,\n    color: \"#ccc\",\n  },\n  text: {\n    fontSize: 25,\n    color: \"#eee\",\n    marginTop: 5,\n  },\n});\n","import React from \"react\";\nimport {\n  Dimensions,\n  StyleSheet,\n  View,\n  StatusBar,\n  Platform,\n} from \"react-native\";\nimport GameStatistic from \"./GameStatistic\";\n\ntype GameHeaderProps = {\n  speed: number;\n  lines: number;\n  score: number;\n};\n\nconst GameHeader = ({ speed, lines, score }: GameHeaderProps) => {\n  return (\n    <View style={styles.gameHeaderContainer}>\n      <View style={styles.gameHeader}>\n        <GameStatistic\n          title=\"Level\"\n          statistic={speed}\n          icon={require(\"../../assets/images/lvl.png\")}\n        />\n        <GameStatistic\n          title=\"Lines\"\n          statistic={lines}\n          icon={require(\"../../assets/images/blocks.png\")}\n        />\n        <GameStatistic\n          title=\"Score\"\n          statistic={score}\n          icon={require(\"../../assets/images/trophy.png\")}\n        />\n      </View>\n    </View>\n  );\n};\n\nexport default GameHeader;\n\nconst styles = StyleSheet.create({\n  gameHeaderContainer: {\n    paddingTop: Platform.OS === \"android\" ? StatusBar.currentHeight : 0,\n    backgroundColor: \"#000\",\n  },\n  gameHeader: {\n    flexDirection: \"row\",\n    height: Dimensions.get(\"window\").height * 0.14,\n    width: \"100%\",\n    borderBottomWidth: 2,\n    borderColor: \"grey\",\n    backgroundColor: \"#000\",\n  },\n});\n","export default [\n  require(\"@assets/sfx/1.mp3\"),\n  require(\"@assets/sfx/2.mp3\"),\n  require(\"@assets/sfx/3.mp3\"),\n  require(\"@assets/sfx/4.mp3\"),\n  require(\"@assets/sfx/5.mp3\"),\n  require(\"@assets/sfx/6.mp3\"),\n  require(\"@assets/sfx/7.mp3\"),\n  require(\"@assets/sfx/8.mp3\"),\n  require(\"@assets/sfx/9.mp3\"),\n  require(\"@assets/sfx/10.mp3\"),\n  require(\"@assets/sfx/11.mp3\"),\n];\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Audio } from \"expo-av\";\nimport Soundtracks from \"@constants/Soundtracks\";\nimport { useAppSelector } from \"@store/hooks\";\n\n// object pool\nconst useSounds = () => {\n  const soundtracks = useRef<Audio.Sound[]>(\n    new Array(Soundtracks.length)\n  ).current;\n  const currSoundtrack = useRef<Audio.Sound | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [didFinish, setDidFinish] = useState(false);\n  const areSoundsEnabled = useAppSelector((state) => state.settings.sounds);\n\n  const playMusic = useCallback(\n    async (which: number) => {\n      if (!areSoundsEnabled) return;\n      try {\n        currSoundtrack.current = soundtracks[which];\n        await currSoundtrack.current.playFromPositionAsync(0);\n        setDidFinish(false);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    [areSoundsEnabled, currSoundtrack.current]\n  );\n\n  const stopMusic = useCallback(() => {\n    if (!areSoundsEnabled) return;\n    currSoundtrack.current && currSoundtrack.current.stopAsync();\n  }, [areSoundsEnabled, currSoundtrack.current]);\n\n  useEffect(() => {\n    if (!areSoundsEnabled) return;\n    //load soundtracks\n    try {\n      (async () => {\n        for (let i = 0; i < soundtracks.length; i += 1) {\n          const { sound: soundtrackObject } = await Audio.Sound.createAsync(\n            Soundtracks[i],\n            { volume: 0.2 },\n            ({ didJustFinish }: any) => {\n              if (didJustFinish) setDidFinish(true);\n            }\n          );\n          soundtracks[i] = soundtrackObject;\n        }\n        setIsLoading(false);\n      })();\n    } catch (err) {\n      console.log(err);\n    }\n    return () => {\n      //unload soundtracks\n      for (let i = 0; i < soundtracks.length; i += 1)\n        soundtracks[i] && soundtracks[i].unloadAsync();\n    };\n  }, []);\n\n  return [playMusic, stopMusic, { isLoading, didFinish }] as [\n    (which: number) => void,\n    () => void,\n    {\n      isLoading: boolean;\n      didFinish: boolean;\n    }\n  ];\n};\n\nexport default useSounds;\n","import React, { useCallback, useEffect, useLayoutEffect } from \"react\";\nimport { Dimensions, Platform, StyleSheet, View } from \"react-native\";\nimport GameClass from \"@models/Game\";\nimport Board from \"./Board\";\nimport useGameLoop from \"@hooks/useGameLoop\";\nimport Joystick from \"./Joystick\";\nimport useForceUpdate from \"@hooks/useForceUpdate\";\nimport { useFocusEffect, useNavigation } from \"@react-navigation/native\";\nimport GameHeader from \"./GameHeader\";\nimport Piece from \"./Piece\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport useSounds from \"@hooks/useSounds\";\nimport Commands from \"@constants/Commands\";\n\ntype GameProps = {\n    game: GameClass;\n    children: React.ReactNode;\n};\n\nconst boardWidth = Dimensions.get(\"window\").height * 0.3;\n\nconst Game = ({ game, children }: GameProps) => {\n    const navigation =\n    useNavigation<\n    NativeStackNavigationProp<StackNavigatorParams, \"Singleplayer\">\n>();\n    const [playMusic, _, { isLoading, didFinish }] = useSounds();\n    const draw = useForceUpdate();\n\n    const handleInput = useCallback((keyCode: string) => {\n        game.inputHandler(keyCode);\n        draw();\n    }, []);\n\n    const update = useCallback(() => {\n        game.update();\n    }, []);\n\n    const { start, stop } = useGameLoop(game.speed, update, draw);\n\n    useFocusEffect(\n        useCallback(() => {\n            if (game.gameOver) {\n                game.reset();\n            }\n            start();\n            return () => {\n                stop();\n            };\n        }, [game.speed])\n    );\n\n    // placeholder\n    useEffect(() => {\n         const handleKeyPress = (e: KeyboardEvent) => {\n                const command: (() => void) | undefined = {\n                    ArrowLeft: () => handleInput(Commands.MoveLeft),\n                    ArrowRight: () => handleInput(Commands.MoveRight),\n                    ArrowUp: () => handleInput(Commands.HardDrop),\n                    ArrowDown: () => handleInput(Commands.MoveDown),\n                    PageUp: () => handleInput(Commands.RotateLeft),\n                    PageDown: () => handleInput(Commands.RotateRight),\n                    ShiftLeft: () => handleInput(Commands.HoldPiece),\n                }[e.code];\n                command?.();\n            }\n        if (Platform.OS == 'web') {\n            window.addEventListener('keydown', handleKeyPress);\n            return () => removeEventListener('keydown', handleKeyPress);\n        }\n    }, []);\n\n    useEffect(() => {\n        if (!isLoading) {\n            playMusic(game.speed);\n        }\n    }, [isLoading, didFinish]);\n\n    useEffect(() => {\n        if (game.gameOver) {\n            navigation.navigate(\"GameModal\", { gameOver: true });\n        }\n    }, [game.gameOver]);\n\n    useLayoutEffect(() => {\n        navigation.setOptions({\n            header: () => (\n                <GameHeader speed={game.speed} lines={game.lines} score={game.score} />\n            ),\n        });\n    }, [game.speed, game.lines, game.score]);\n\n    return (\n        <View style={styles.gameContainer}>\n            <View style={styles.game}>\n                <Board\n                    currPiece={game.currPiece}\n                    board={Array.from(game.board)}\n                    boardWidth={boardWidth}\n                    border\n                />\n                <View style={styles.sidePanel}>\n                    <Piece title=\"hold\" piece={game.heldPiece} />\n                    <Piece title=\"next\" piece={game.nextPiece} />\n                    {children}\n                </View>\n            </View>\n            <Joystick handleInput={handleInput} />\n        </View>\n    );\n};\n\nexport default Game;\n\nconst styles = StyleSheet.create({\n    gameContainer: {\n        width: \"100%\",\n        height: \"100%\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n    },\n    game: {\n        flexDirection: \"row\",\n    },\n    sidePanel: {\n        marginLeft: 5,\n        alignItems: \"center\",\n    },\n});\n","import React, { useState, ReactNode } from \"react\";\nimport * as Font from \"expo-font\";\nimport AppLoading from \"expo-app-loading\";\n\ntype AppBootstrapProps = {\n  children: ReactNode;\n};\n\nconst fetchFonts = () => {\n  return Font.loadAsync({\n    dogbyte: require(\"../assets/fonts/dogbyte.otf\"),\n  });\n};\n\nconst AppBootstrap = ({ children }: AppBootstrapProps) => {\n  const [fontLoaded, setFontLoaded] = useState(false);\n\n  return fontLoaded ? (\n    <>{children}</>\n  ) : (\n    <AppLoading\n      startAsync={fetchFonts}\n      onFinish={() => setFontLoaded(true)}\n      onError={(err) => console.log(err)}\n    />\n  );\n};\n\nexport default AppBootstrap;\n","import { StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport DefaultText from \"../UI/DefaultText\";\n\ntype ScoreProps = {\n  rank: number;\n  score: number;\n  name: string;\n  me: boolean;\n};\n\nconst ScoreItem = ({ rank, score, name, me }: ScoreProps) => {\n  return (\n    <View style={styles.score}>\n      <View style={styles.field}>\n        <DefaultText style={{ ...styles.text, color: me ? \"yellow\" : \"white\" }}>\n          {rank}.\n        </DefaultText>\n      </View>\n      <View style={styles.field}>\n        <DefaultText style={{ ...styles.text, color: me ? \"yellow\" : \"white\" }}>\n          {score}\n        </DefaultText>\n      </View>\n      <View style={styles.field}>\n        <DefaultText style={{ ...styles.text, color: me ? \"yellow\" : \"white\" }}>\n          {name.slice(0, 7)}\n        </DefaultText>\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(ScoreItem);\n\nconst styles = StyleSheet.create({\n  score: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    paddingVertical: 10,\n  },\n  field: {\n    flex: 1,\n    flexShrink: 0,\n    alignItems: \"center\",\n  },\n  text: {\n    fontSize: 20,\n  },\n});\n","import { StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport DefaultText from \"../UI/DefaultText\";\nimport { appColors } from \"@constants/Colors\";\n\nconst ScoreListHeader = () => {\n  return (\n    <View style={styles.listHeader}>\n      <View style={styles.title}>\n        <DefaultText style={styles.text}>RANK</DefaultText>\n      </View>\n      <View style={styles.title}>\n        <DefaultText style={styles.text}>SCORE</DefaultText>\n      </View>\n      <View style={styles.title}>\n        <DefaultText style={styles.text}>NAME</DefaultText>\n      </View>\n    </View>\n  );\n};\n\nexport default React.memo(ScoreListHeader);\n\nconst styles = StyleSheet.create({\n  listHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    backgroundColor: \"#000\",\n  },\n  title: {\n    borderBottomColor: appColors.primary,\n    borderBottomWidth: 4,\n    paddingVertical: 2,\n  },\n  text: {\n    color: \"white\",\n    fontSize: 30,\n  },\n});\n","import { StyleSheet, Text, View } from \"react-native\";\nimport React, { useCallback, useState } from \"react\";\nimport DefaultText from \"../UI/DefaultText\";\nimport Input from \"../UI/Input\";\nimport DefaultButton from \"../UI/DefaultButton\";\nimport { useAppDispatch, useAppSelector } from \"@store/hooks\";\nimport { submitScore } from \"@store/scores\";\n\nconst Gameover = () => {\n  const score = useAppSelector((state) => state.game.initialScore);\n  const [name, setName] = useState(\"\");\n  const [nameIsValid, setNameIsValid] = useState(false);\n  const [scoreIsSubmitted, setScoreIsSubmitted] = useState(false);\n  const dispatch = useAppDispatch();\n\n  const nameChangeHandler = useCallback((_, text: string, isValid: boolean) => {\n    setName(text);\n    setNameIsValid(isValid);\n  }, []);\n\n  return (\n    <>\n      <DefaultText style={styles.title}>GAME OVER</DefaultText>\n      <DefaultText style={styles.text}>\n        Your score: <Text style={styles.score}> {score}</Text>\n      </DefaultText>\n      {!scoreIsSubmitted ? (\n        <View style={styles.form}>\n          <Input\n            id={\"name\"}\n            label={\"ENTER YOUR NAME:\"}\n            value={name}\n            onInputChange={nameChangeHandler}\n            error={!nameIsValid}\n            errorText={\"Enter at least 3 characters.\"}\n            autoCapitalize=\"none\"\n            min={3}\n            maxLength={6}\n          />\n          <DefaultButton\n            onPress={() => {\n              dispatch(submitScore({ username: name, score: score! }))\n                .unwrap()\n                .then(() => {\n                  setScoreIsSubmitted(true);\n                });\n            }}\n            disabled={!nameIsValid}\n          >\n            SAVE SCORE\n          </DefaultButton>\n        </View>\n      ) : (\n        <DefaultText style={styles.text}>Score saved !</DefaultText>\n      )}\n    </>\n  );\n};\n\nexport default Gameover;\n\nconst styles = StyleSheet.create({\n  title: {\n    color: \"#eee\",\n    fontSize: 30,\n  },\n  text: {\n    color: \"#ccc\",\n    fontSize: 20,\n  },\n  score: {\n    color: \"#eee\",\n    fontSize: 24,\n  },\n  form: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport DefaultText from \"../UI/DefaultText\";\n\nconst Pause = () => {\n  return (\n    <>\n      <DefaultText style={styles.title}>PAUSE</DefaultText>\n      <DefaultText style={styles.text}>\n        Anytime you quit or close the app, the game will be saved.\n      </DefaultText>\n    </>\n  );\n};\n\nexport default Pause;\n\nconst styles = StyleSheet.create({\n  title: {\n    color: \"#eee\",\n    fontSize: 30,\n  },\n  text: {\n    color: \"#ccc\",\n    fontSize: 20,\n    paddingVertical: 4,\n  },\n});\n","import React, { useEffect, useLayoutEffect } from \"react\";\nimport { Dimensions, StyleSheet, View } from \"react-native\";\nimport GameClass from \"@models/Game\";\nimport Board from \"../Game/Board\";\nimport Joystick from \"../Game/Joystick\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport GameHeader from \"../Game/GameHeader\";\nimport Piece from \"../Game/Piece\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport useSounds from \"@hooks/useSounds\";\n\ntype GameProps = {\n  game: GameClass;\n  children: React.ReactNode;\n  handleInput: (keyCode: string) => void;\n};\n\nconst boardWidth = Dimensions.get(\"window\").height * 0.3;\n\nconst MultiplayerGame = ({ game, children, handleInput }: GameProps) => {\n  const navigation =\n    useNavigation<\n      NativeStackNavigationProp<StackNavigatorParams, \"Singleplayer\">\n    >();\n  const [playMusic, _, { isLoading, didFinish }] = useSounds();\n\n  useEffect(() => {\n    if (!isLoading) {\n      playMusic(game.speed);\n    }\n  }, [isLoading, didFinish]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      header: () => (\n        <GameHeader speed={game.speed} lines={game.lines} score={game.score} />\n      ),\n    });\n  }, [game.speed, game.lines, game.score]);\n\n  return (\n    <View style={styles.gameContainer}>\n      <View style={styles.game}>\n        <Board\n          currPiece={game.currPiece}\n          board={Array.from(game.board)}\n          boardWidth={boardWidth}\n          border\n        />\n        <View style={styles.sidePanel}>\n          <Piece title=\"hold\" piece={game.heldPiece} />\n          <Piece title=\"next\" piece={game.nextPiece} />\n          {children}\n        </View>\n      </View>\n      <Joystick handleInput={handleInput} />\n    </View>\n  );\n};\n\nexport default MultiplayerGame;\n\nconst styles = StyleSheet.create({\n  gameContainer: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n  },\n  game: {\n    flexDirection: \"row\",\n  },\n  sidePanel: {\n    marginLeft: 5,\n    alignItems: \"center\",\n  },\n});\n","import React from \"react\";\nimport { DefaultText, AnimatedBackground, DefaultButton } from \"@components\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport { useBottomTabBarHeight } from \"@react-navigation/bottom-tabs\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { appColors, squareColors } from \"@constants/Colors\";\nimport { useAppSelector } from \"@store/hooks\";\n\ntype HomeProps = {\n  navigation: NativeStackNavigationProp<StackNavigatorParams, \"Root\">;\n};\n\nconst logo = \"Buildie\";\n\nconst Home = ({ navigation }: HomeProps) => {\n  const tabBarHeight = useBottomTabBarHeight();\n  const isSignedIn = useAppSelector((state) => !!state.auth.accessToken);\n  const activeGame = useAppSelector((state) => !!state.game.initialBoard);\n\n  return (\n    <AnimatedBackground>\n      <View style={{ marginBottom: tabBarHeight, ...styles.list }}>\n        <DefaultText style={styles.logo}>\n          {[...logo].map((char, idx) => (\n            <Text\n              style={{ color: squareColors[idx + 1] }}\n              key={`${char}_${idx}`}\n            >\n              {char}\n            </Text>\n          ))}\n        </DefaultText>\n        <DefaultButton\n          style={styles.homeButton}\n          onPress={() => {\n            navigation.navigate(\"Singleplayer\");\n          }}\n        >\n          {activeGame ? \"Resume\" : \"New game\"}\n        </DefaultButton>\n        <DefaultButton\n          style={styles.homeButton}\n          onPress={() => {\n            navigation.navigate(\"Leaderboard\");\n          }}\n        >\n          Leaderboard\n        </DefaultButton>\n        <DefaultButton\n          style={styles.homeButton}\n          disabled={!isSignedIn}\n          onPress={() => {\n            navigation.navigate(\"MultiplayerLobby\");\n          }}\n        >\n          Multiplayer\n        </DefaultButton>\n        <DefaultButton\n          style={styles.homeButton}\n          onPress={() => {\n            navigation.navigate(\"Settings\");\n          }}\n        >\n          Settings\n        </DefaultButton>\n      </View>\n    </AnimatedBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  logo: {\n    fontSize: 100,\n    color: \"white\",\n  },\n  list: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"space-evenly\",\n  },\n  homeButton: {\n    backgroundColor: appColors.primaryDark,\n    minWidth: 250,\n    shadowRadius: 0,\n    shadowOffset: { width: 0, height: 6 },\n    shadowOpacity: 1,\n  },\n});\n\nexport default Home;\n","import { useRef } from \"react\";\n\nconst useConst = <T,>(initialvalue: T | (() => T)): T => {\n  const ref = useRef<{ value: T }>();\n\n  if (ref.current === undefined) {\n    ref.current = {\n      value:\n        typeof initialvalue === \"function\"\n          ? (initialvalue as Function)()\n          : initialvalue,\n    };\n  }\n\n  return ref.current.value;\n};\n\nexport default useConst;\n","import Board from \"./Board\";\nimport Piece from \"./Piece\";\n\nclass Shape {\n  private _shape;\n  // initial position\n  private _x;\n  private _y;\n  private _r;\n\n  constructor(shape: string, x: number, y: number, r: number) {\n    this._shape = shape;\n    this._x = x;\n    this._y = y;\n    this._r = r;\n  }\n\n  get shape() {\n    return this._shape;\n  }\n\n  get x() {\n    return this._x;\n  }\n\n  get y() {\n    return this._y;\n  }\n\n  get r() {\n    return this._r;\n  }\n\n  newPiece(board: Board) {\n    return new Piece(this, board);\n  }\n}\n\nexport default Shape;\n","import Board from \"./Board\";\nimport Piece from \"./Piece\";\nimport Shape from \"./Shape\";\n\nclass ShapeFactory {\n  private _shapeTypes: Shape[] = [];\n\n  constructor(initialShapes: { [key: string]: string }) {\n    for (const shape in initialShapes) {\n      this._shapeTypes.push(\n        new Shape(initialShapes[shape], (Board.w - Piece.w) / 2, -1, 0)\n      );\n    }\n  }\n\n  get shapeTypes() {\n    return this._shapeTypes;\n  }\n}\n\nexport default ShapeFactory;\n","import Commands from \"@constants/Commands\";\nimport Board from \"./Board\";\nimport Piece from \"./Piece\";\nimport Shape from \"./Shape\";\n\nclass PiecePool {\n  private _pool: Piece[];\n  private _currPiece;\n  private _heldPiece;\n  private _nextPiece;\n  private alreadyHeld = false;\n  doesNextPieceFit = true;\n\n  constructor(\n    shapes: Shape[],\n    board: Board,\n    initialIndexCurrPiece?: number,\n    initialIndexHeldPiece?: number,\n    initialIndexNextPiece?: number\n  ) {\n    this._pool = new Array(shapes.length);\n\n    for (let sIndex = 0; sIndex < shapes.length; sIndex += 1)\n      this._pool[sIndex] = shapes[sIndex].newPiece(board);\n\n    // arrays are zero-indexed\n    this._currPiece = initialIndexCurrPiece\n      ? this._pool[initialIndexCurrPiece - 1]\n      : null;\n    this._heldPiece = initialIndexHeldPiece\n      ? this._pool[initialIndexHeldPiece - 1]\n      : null;\n    this._nextPiece = initialIndexNextPiece\n      ? this._pool[initialIndexNextPiece - 1]\n      : this.randomPiece();\n  }\n\n  get currPiece() {\n    return this._currPiece;\n  }\n\n  get nextPiece() {\n    return this._nextPiece;\n  }\n\n  get heldPiece() {\n    return this._heldPiece;\n  }\n\n  private set currPiece(nextPiece) {\n    this._currPiece = nextPiece;\n  }\n\n  private set nextPiece(newPiece) {\n    this._nextPiece = newPiece;\n  }\n\n  private set heldPiece(currPiece) {\n    this._heldPiece = currPiece;\n  }\n\n  randomPiece() {\n    const rndIndex = Math.floor(Math.random() * this._pool.length);\n    return this._pool[rndIndex];\n  }\n\n  private newPiece() {\n    this.currPiece?.reset();\n    this.alreadyHeld = false;\n\n    this.doesNextPieceFit = !this.nextPiece?.collides();\n    this.currPiece = this.doesNextPieceFit ? this.nextPiece : null;\n    if (this.doesNextPieceFit) this.nextPiece = this.randomPiece();\n  }\n\n  private holdPiece() {\n    if (this.currPiece !== null && !this.alreadyHeld) {\n      this.currPiece.reset();\n      if (this.heldPiece === null) {\n        this.heldPiece = this.currPiece;\n        this.newPiece();\n      } else {\n        let temp = this.currPiece;\n        this.currPiece = this.heldPiece;\n        this.heldPiece = temp;\n      }\n      this.alreadyHeld = true;\n    }\n  }\n\n  inputHandler = (keyCode: string) => {\n    if (this.currPiece?.collided) return;\n    if (keyCode === Commands.MoveLeft) this.currPiece?.moveLeft();\n    else if (keyCode === Commands.MoveRight) this.currPiece?.moveRight();\n    else if (keyCode === Commands.MoveDown) this.currPiece?.moveDown();\n    else if (keyCode === Commands.RotateRight) this.currPiece?.rotateRight();\n    else if (keyCode === Commands.HardDrop) this.currPiece?.hardDrop();\n    else if (keyCode === Commands.HoldPiece) this.holdPiece();\n  };\n\n  update() {\n    this.currPiece && !this.currPiece.collided\n      ? this.currPiece?.moveDown()\n      : this.newPiece();\n  }\n\n  reset() {\n    this.currPiece?.reset();\n    this.currPiece = null;\n    this.heldPiece = null;\n    this.nextPiece = this.randomPiece();\n  }\n}\n\nexport default PiecePool;\n","import ShapeFactory from \"./ShapeFactory\";\nimport shapes from \"@constants/Shapes.json\";\nimport Board from \"./Board\";\nimport PiecePool from \"./PiecePool\";\nimport { InitialGameState } from \"../types/Game\";\n\nclass Game {\n  private _piecePool;\n  private _board;\n\n  constructor({\n    initialBoard,\n    initialIndexCurrPiece,\n    initialIndexHeldPiece,\n    initialIndexNextPiece,\n    initialSpeed,\n    initialLines,\n    initialScore,\n  }: InitialGameState) {\n    this._board = new Board(\n      initialBoard,\n      initialSpeed,\n      initialLines,\n      initialScore\n    );\n    this._piecePool = new PiecePool(\n      new ShapeFactory(shapes).shapeTypes,\n      this._board,\n      initialIndexCurrPiece,\n      initialIndexHeldPiece,\n      initialIndexNextPiece\n    );\n  }\n\n  get board() {\n    return this._board.board;\n  }\n\n  get currPiece() {\n    return this._piecePool.currPiece;\n  }\n\n  get heldPiece() {\n    return this._piecePool.heldPiece?.shape;\n  }\n\n  get nextPiece() {\n    return this._piecePool.nextPiece?.shape;\n  }\n\n  get speed() {\n    return this._board.speed;\n  }\n\n  get lines() {\n    return this._board.lines;\n  }\n\n  get score() {\n    return this._board.score;\n  }\n\n  get gameOver() {\n    return !this._piecePool.doesNextPieceFit;\n  }\n\n  get inputHandler() {\n    return this._piecePool.inputHandler;\n  }\n\n  update() {\n    this._piecePool.update();\n  }\n\n  reset() {\n    this._board.reset();\n    this._piecePool.reset();\n  }\n}\n\nexport default Game;\n","import { GradientBackground, Game, IconButton } from \"@components\";\nimport { useAppDispatch, useAppSelector } from \"@store/hooks\";\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { AppState, AppStateStatus } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { setGameState } from \"@store/gameState\";\nimport useConst from \"@hooks/useConst\";\nimport GameClass from \"@models/Game\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { SerializedGameState } from \"../types/Game\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\n\nconst serializeGameState = (\n  board: Uint8Array,\n  speed: number,\n  lines: number,\n  score: number,\n  nextPiece: string,\n  currPiece?: string,\n  heldPiece?: string\n): SerializedGameState => {\n  return {\n    initialBoard: Array.from(board),\n    initialIndexCurrPiece:\n      (currPiece && +currPiece.replace(/^0+/, \"\")[0]) || undefined,\n    initialIndexHeldPiece:\n      (heldPiece && +heldPiece.replace(/^0+/, \"\")[0]) || undefined,\n    initialIndexNextPiece:\n      (nextPiece && +nextPiece.replace(/^0+/, \"\")[0]) || undefined,\n    initialSpeed: speed,\n    initialLines: lines,\n    initialScore: score,\n  };\n};\n\ntype SingleplayerScreenProps = {\n  navigation: NativeStackNavigationProp<StackNavigatorParams, \"Singleplayer\">;\n};\n\nconst SingleplayerScreen = ({ navigation }: SingleplayerScreenProps) => {\n  const {\n    initialBoard,\n    initialIndexCurrPiece,\n    initialIndexHeldPiece,\n    initialIndexNextPiece,\n    initialSpeed,\n    initialLines,\n    initialScore,\n  } = useAppSelector((state) => state.game);\n  const dispatch = useAppDispatch();\n  const appState = useRef(AppState.currentState);\n\n  const game = useConst(\n    () =>\n      new GameClass({\n        initialBoard: initialBoard && Uint8Array.from(initialBoard),\n        initialIndexCurrPiece,\n        initialIndexHeldPiece,\n        initialIndexNextPiece,\n        initialSpeed,\n        initialLines,\n        initialScore,\n      })\n  );\n\n  const saveGameStateToStorage = () => {\n    AsyncStorage.setItem(\n      \"gameState\",\n      JSON.stringify(\n        serializeGameState(\n          game.board,\n          game.speed,\n          game.lines,\n          game.score,\n          game.nextPiece,\n          game.currPiece?.shape,\n          game.heldPiece\n        )\n      )\n    );\n  };\n\n  const handleAppStateChange = useCallback((nextAppState: AppStateStatus) => {\n    if (\n      appState.current === \"active\" &&\n      nextAppState.match(/inactive|background/)\n    ) {\n      saveGameStateToStorage();\n    }\n    appState.current = nextAppState;\n  }, []);\n\n  const handlePause = useCallback(() => {\n    navigation.navigate(\"GameModal\", { gameOver: false });\n  }, []);\n\n  useFocusEffect(() => {\n    return () => {\n      dispatch(\n        setGameState(\n          serializeGameState(\n            game.board,\n            game.speed,\n            game.lines,\n            game.score,\n            game.nextPiece,\n            game.currPiece?.shape,\n            game.heldPiece\n          )\n        )\n      );\n    };\n  });\n\n  useEffect(() => {\n    const subscription = AppState.addEventListener(\n      \"change\",\n      handleAppStateChange\n    );\n    return () => {\n      subscription.remove();\n    };\n  }, []);\n\n  return (\n    <GradientBackground>\n      <Game game={game}>\n        <IconButton\n          pressHandler={handlePause}\n          icon={require(\"../assets/images/pause.png\")}\n        />\n      </Game>\n    </GradientBackground>\n  );\n};\n\nexport default SingleplayerScreen;\n","import { StyleSheet, View, FlatList } from \"react-native\";\nimport React, {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport {\n  DefaultButton,\n  LeaderboardHeader,\n  ScoreItem,\n  ScoreListHeader,\n} from \"@components\";\nimport { useScoresQuery } from \"../services/gameApi\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { ScoreData } from \"types/Score\";\nimport { useAppDispatch, useAppSelector } from \"@store/hooks\";\nimport { loadScores } from \"@store/scores\";\n\ntype LeaderboardScreenProps = {\n  navigation: NativeStackNavigationProp<StackNavigatorParams, \"Leaderboard\">;\n};\n\nexport type GameMode = \"LOCAL\" | \"ONLINE\";\n\nconst LeaderboardScreen = ({ navigation }: LeaderboardScreenProps) => {\n  const [gameMode, setGameMode] = useState<GameMode>(\"LOCAL\");\n  const listRef = useRef<FlatList>(null);\n  const localScores = useAppSelector((state) => state.scores.localScores);\n  const userId = useAppSelector((state) => state.auth.userId);\n  const { data: onlineScores } = useScoresQuery();\n  const dispatch = useAppDispatch();\n\n  const setGameModeHandler = useCallback((gameMode: GameMode) => {\n    setGameMode(gameMode);\n    listRef.current?.scrollToOffset({ animated: true, offset: 0 });\n  }, []);\n\n  const renderScoreItem = useCallback(\n    ({ item, index }: { item: ScoreData; index: number }) => {\n      return (\n        <ScoreItem\n          rank={index + 1}\n          score={item.score}\n          name={item.username}\n          me={item._id === userId}\n        />\n      );\n    },\n    [userId]\n  );\n\n  useEffect(() => {\n    dispatch(loadScores());\n  }, [dispatch]);\n\n  useLayoutEffect(() => {\n    navigation.setOptions({\n      header: () => (\n        <LeaderboardHeader\n          gameMode={gameMode}\n          setGameModeHandler={setGameModeHandler}\n        />\n      ),\n    });\n  }, [gameMode]);\n\n  return (\n    <View style={styles.leaderboardContainer}>\n      <FlatList\n        ref={listRef}\n        data={gameMode === \"LOCAL\" ? localScores : onlineScores}\n        keyExtractor={(item) => item._id}\n        renderItem={renderScoreItem}\n        stickyHeaderIndices={[0]}\n        ListHeaderComponent={<ScoreListHeader />}\n      />\n      <DefaultButton\n        onPress={() => {\n          navigation.goBack();\n        }}\n        textStyle={styles.button}\n      >\n        CLOSE\n      </DefaultButton>\n    </View>\n  );\n};\n\nexport default LeaderboardScreen;\n\nconst styles = StyleSheet.create({\n  leaderboardContainer: {\n    flex: 1,\n    backgroundColor: \"#000\",\n  },\n  button: {\n    fontSize: 50,\n  },\n});\n","import { StyleSheet } from \"react-native\";\n\nexport default StyleSheet.create({\n  centered: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n","import { DefaultButton, GradientBackground } from \"@components\";\nimport { appColors } from \"@constants/Colors\";\nimport defaultStyles from \"@constants/defaultStyles\";\nimport { useAppDispatch } from \"@store/hooks\";\nimport React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport { invalidate } from \"../services/gameApi\";\n\nconst Profile = () => {\n  const dispatch = useAppDispatch();\n  return (\n    <GradientBackground>\n      <View style={defaultStyles.centered}>\n        <DefaultButton\n          style={styles.logoutButton}\n          onPress={() => dispatch(invalidate())}\n        >\n          Logout\n        </DefaultButton>\n      </View>\n    </GradientBackground>\n  );\n};\n\nexport default Profile;\n\nconst styles = StyleSheet.create({\n  logoutButton: {\n    backgroundColor: appColors.error,\n  },\n});\n","import { Dimensions, Pressable, StyleSheet, View } from \"react-native\";\nimport React from \"react\";\nimport { BlurView } from \"expo-blur\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { RouteProp } from \"@react-navigation/native\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport { GameOver, IconButton, Pause } from \"@components\";\nimport { Card } from \"@components\";\n\nconst width = Dimensions.get(\"window\").width;\n\ntype GameModalScreenProps = {\n  navigation: NativeStackNavigationProp<StackNavigatorParams, \"GameModal\">;\n  route: RouteProp<StackNavigatorParams, \"GameModal\">;\n};\n\nconst GameModalScreen = ({ navigation, route }: GameModalScreenProps) => {\n  return (\n    <BlurView style={styles.screen} intensity={20}>\n      <Pressable\n        style={styles.backdrop}\n        onPress={() => {\n          navigation.goBack();\n        }}\n      >\n        <Card style={styles.modalContainer}>\n          <Pressable style={styles.modal}>\n            {route.params.gameOver ? <GameOver /> : <Pause />}\n            <View style={styles.actions}>\n              <IconButton\n                icon={require(\"@assets/images/escape.png\")}\n                pressHandler={() => {\n                  navigation.navigate(\"Root\");\n                }}\n              />\n              <IconButton\n                icon={\n                  route.params.gameOver\n                    ? require(\"@assets/images/replay.png\")\n                    : require(\"@assets/images/play.png\")\n                }\n                pressHandler={() => {\n                  navigation.goBack();\n                }}\n              />\n            </View>\n          </Pressable>\n        </Card>\n      </Pressable>\n    </BlurView>\n  );\n};\n\nexport default GameModalScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  backdrop: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modalContainer: {\n    width: width * 0.75,\n    height: width * 0.75,\n    backgroundColor: \"#121212EE\",\n    padding: 20,\n    borderRadius: 30,\n  },\n  modal: {\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  actions: {\n    flexDirection: \"row\",\n    width: \"50%\",\n    justifyContent: \"space-evenly\",\n  },\n});\n","import { useCallback, useReducer } from \"react\";\n\nexport enum FormActionType {\n  FORM_CHANGE = \"FORM_CHANGE\",\n}\n\ntype FormState<T> = {\n  inputValues: {\n    [K in keyof T]: string;\n  };\n  inputValidities: {\n    [K in keyof T]: boolean;\n  };\n  formIsValid: boolean;\n};\n\ntype FormAction = {\n  type: FormActionType.FORM_CHANGE;\n  payload: { value: string; isValid: boolean; input: string };\n};\n\nconst createFormReducer =\n  <T,>() =>\n  (state: FormState<T>, formAction: FormAction): FormState<T> => {\n    switch (formAction.type) {\n      case FormActionType.FORM_CHANGE:\n        const updatedValues = {\n          ...state.inputValues,\n          [formAction.payload.input]: formAction.payload.value,\n        };\n        const updatedValidities = {\n          ...state.inputValidities,\n          [formAction.payload.input]: formAction.payload.isValid,\n        };\n        let updatedFormIsValid = true;\n        for (const key in updatedValidities) {\n          if (updatedValidities[key] === false) {\n            updatedFormIsValid = false;\n            break;\n          }\n        }\n        return {\n          formIsValid: updatedFormIsValid,\n          inputValues: updatedValues,\n          inputValidities: updatedValidities,\n        };\n      default:\n        return state;\n    }\n  };\n\nconst useForm = <\n  T extends {\n    [key: string]: string;\n  }\n>(\n  form: T\n): [FormState<T>, (input: string, value: string, isValid: boolean) => void] => {\n  const [formState, dispatchFormState] = useReducer(createFormReducer<T>(), {\n    inputValues: {\n      ...form,\n    },\n    inputValidities: Object.keys(form).reduce((acc, curr) => {\n      return { ...acc, [curr]: form[curr] ? true : false };\n    }, {} as Record<keyof T, boolean>),\n    formIsValid: false,\n  });\n\n  const valueChangeHandler = useCallback(\n    (input: string, value: string, isValid: boolean) => {\n      dispatchFormState({\n        type: FormActionType.FORM_CHANGE,\n        payload: { value, isValid, input },\n      });\n    },\n    [dispatchFormState]\n  );\n\n  return [formState, valueChangeHandler];\n};\n\nexport default useForm;\n","import { useCallback } from \"react\";\nimport { usePermissions, getExpoPushTokenAsync } from \"expo-notifications\";\n\nconst usePushNotification = () => {\n  const [status, requestPermission] = usePermissions();\n\n  const getPushToken = useCallback(async () => {\n    let finalStatus;\n    let pushToken;\n    if (!status?.granted) {\n      finalStatus = (await requestPermission()).status;\n    }\n    if (status?.granted || finalStatus === \"granted\") {\n      pushToken = (await getExpoPushTokenAsync()).data;\n    }\n    return pushToken;\n  }, [status, requestPermission]);\n\n  return getPushToken;\n};\n\nexport default usePushNotification;\n","import { Alert } from \"react-native\";\n\nexport const handleErrorResponse = (\n  error: string = \"Something went wrong!\"\n) => {\n  Alert.alert(\"There's a problem\", error), [{ text: \"Okay\" }];\n};\n","import {\n  StyleSheet,\n  KeyboardAvoidingView,\n  ScrollView,\n  Platform,\n  ActivityIndicator,\n  View,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Card, DefaultButton, GradientBackground, Input } from \"@components\";\nimport { useSigninMutation, useSignupMutation } from \"../services/gameApi\";\nimport useForm from \"../hooks/useForm\";\nimport { useAppDispatch } from \"@store/hooks\";\nimport { authenticate } from \"@store/authThunks\";\nimport defaultStyles from \"@constants/defaultStyles\";\nimport usePushNotification from \"@hooks/usePushNotification\";\nimport { handleErrorResponse } from \"../helpers/utils\";\n\nconst AuthScreen = () => {\n  const [isNewUser, setIsNewUser] = useState(false);\n  const [{ inputValues, inputValidities, formIsValid }, inputChangeHandler] =\n    useForm({ username: \"\", email: \"\", password: \"\" });\n  const dispatch = useAppDispatch();\n  const getPushToken = usePushNotification();\n\n  const [signin, { isLoading }] = useSigninMutation({\n    fixedCacheKey: \"shared-auth\",\n  });\n  const [signup] = useSignupMutation({ fixedCacheKey: \"shared-auth\" });\n\n  const authHandler = async () => {\n    const expoToken = await getPushToken();\n    const { username, ...user } = inputValues;\n    try {\n      const authResponse = await (isNewUser\n        ? signup({ ...inputValues, expoToken })\n        : signin({ ...user, expoToken })\n      ).unwrap();\n      authResponse.data\n        ? dispatch(authenticate(authResponse.data))\n        : handleErrorResponse(authResponse.problem);\n    } catch (err) {\n      handleErrorResponse();\n    }\n  };\n\n  return (\n    <GradientBackground>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"android\" ? \"height\" : \"padding\"}\n        style={defaultStyles.centered}\n      >\n        <Card style={styles.formContainer}>\n          <ScrollView>\n            {isNewUser && (\n              <Input\n                id=\"username\"\n                label=\"USERNAME\"\n                value={inputValues.username}\n                onInputChange={inputChangeHandler}\n                required\n                minLength={6}\n                autoCapitalize=\"none\"\n                error={!inputValidities.username}\n                errorText=\"Please enter a valid username.\"\n              />\n            )}\n            <Input\n              id=\"email\"\n              label=\"EMAIL\"\n              value={inputValues.email}\n              onInputChange={inputChangeHandler}\n              required\n              email\n              minLength={10}\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n              error={!inputValidities.email}\n              errorText=\"Please enter a valid email address.\"\n            />\n            <Input\n              id=\"password\"\n              label=\"PASSWORD\"\n              value={inputValues.password}\n              onInputChange={inputChangeHandler}\n              required\n              secureTextEntry\n              minLength={6}\n              autoCapitalize=\"none\"\n              error={!inputValidities.password}\n              errorText=\"Please enter a valid password.\"\n            />\n            {isLoading ? (\n              <View style={styles.loadingSpinner}>\n                <ActivityIndicator size=\"large\" color=\"orange\" />\n              </View>\n            ) : (\n              <DefaultButton\n                style={styles.button}\n                disabled={\n                  isNewUser\n                    ? !formIsValid\n                    : !inputValidities.email || !inputValidities.password\n                }\n                onPress={authHandler}\n              >\n                {isNewUser ? \"REGISTER\" : \"LOGIN\"}\n              </DefaultButton>\n            )}\n            <DefaultButton\n              style={styles.button}\n              onPress={() => setIsNewUser((prevState) => !prevState)}\n            >\n              {isNewUser ? \"Switch to Login\" : \"Switch to Register\"}\n            </DefaultButton>\n          </ScrollView>\n        </Card>\n      </KeyboardAvoidingView>\n    </GradientBackground>\n  );\n};\n\nexport default AuthScreen;\n\nconst styles = StyleSheet.create({\n  formContainer: {\n    backgroundColor: \"#121212CC\",\n    width: \"80%\",\n    maxWidth: 400,\n    maxHeight: 400,\n    padding: 20,\n  },\n  loadingSpinner: {\n    marginTop: 10,\n  },\n  button: {\n    marginTop: 10,\n    alignSelf: \"center\",\n    paddingHorizontal: 0,\n  },\n});\n","import { ActivityIndicator, Platform, View } from \"react-native\";\nimport React, { useEffect } from \"react\";\nimport * as SecureStore from \"expo-secure-store\";\nimport { useAppDispatch } from \"@store/hooks\";\nimport { GradientBackground } from \"@components\";\nimport { setDidTryToLogin, login } from \"@store/auth\";\nimport defaultStyles from \"@constants/defaultStyles\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { GAME_STATE, SETTINGS, USER_DATA } from \"@constants/PersistedData\";\nimport { setGameState } from \"@store/gameState\";\nimport { setSettings } from \"@store/settings\";\n\nconst SplashScreen = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    // authSlice\n    (async () => {\n      let userData = null;\n      if (Platform.OS !== \"web\") {\n        userData = await SecureStore.getItemAsync(USER_DATA);\n      }\n\n      if (!userData) {\n        dispatch(setDidTryToLogin());\n        return;\n      }\n      dispatch(login(JSON.parse(userData)));\n    })();\n\n    // gameStateSlice\n    (async () => {\n      const gameState = await AsyncStorage.getItem(GAME_STATE);\n      if (!gameState) return;\n      dispatch(setGameState(JSON.parse(gameState)));\n    })();\n\n    // settingsSlice\n    (async () => {\n      const settings = await AsyncStorage.getItem(SETTINGS);\n      if (!settings) return;\n      dispatch(setSettings(JSON.parse(settings)));\n    })();\n  }, [dispatch]);\n\n  return (\n    <GradientBackground>\n      <View style={defaultStyles.centered}>\n        <ActivityIndicator size=\"large\" color=\"orange\" />\n      </View>\n    </GradientBackground>\n  );\n};\n\nexport default SplashScreen;\n","import { SETTINGS } from \"@constants/PersistedData\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { AppThunk } from \".\";\nimport { setGameSpeed } from \"./gameState\";\nimport { setSettings, SettingsState } from \"./settings\";\n\nconst saveSettingsToStorage = async (settings: SettingsState) => {\n  AsyncStorage.setItem(SETTINGS, JSON.stringify(settings));\n};\n\nexport const saveSettings =\n  ({ speed, sounds, haptics }: SettingsState & { speed: number }): AppThunk =>\n  (dispatch) => {\n    dispatch(setGameSpeed(speed));\n    dispatch(setSettings({ sounds, haptics }));\n    saveSettingsToStorage({ sounds, haptics });\n  };\n","import { ScrollView, StyleSheet, View, Switch } from \"react-native\";\nimport React, { useState } from \"react\";\nimport { Card, DefaultText, GradientBackground, IconButton } from \"@components\";\nimport Slider from \"@react-native-community/slider\";\nimport { appColors } from \"@constants/Colors\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport { useAppDispatch, useAppSelector } from \"@store/hooks\";\nimport { saveSettings } from \"@store/settingsThunks\";\n\ntype SettingsProps = {\n  navigation: NativeStackNavigationProp<StackNavigatorParams, \"Settings\">;\n};\n\nconst SettingsScreen = ({ navigation }: SettingsProps) => {\n  const savedGameSpeed = useAppSelector((state) => state.game.initialSpeed);\n  const savedSettings = useAppSelector((state) => state.settings);\n  const [speed, setSpeed] = useState(savedGameSpeed || 1);\n  const [sounds, setSounds] = useState(savedSettings.sounds);\n  const [haptics, setHaptics] = useState(savedSettings.haptics);\n  const dispatch = useAppDispatch();\n\n  return (\n    <GradientBackground>\n      <ScrollView contentContainerStyle={styles.settingsContainer}>\n        <Card style={styles.settings}>\n          <View style={styles.setting}>\n            <DefaultText style={styles.label}>LEVEL {speed}</DefaultText>\n            <View>\n              <Slider\n                value={speed}\n                onValueChange={(value) => {\n                  setSpeed(value);\n                }}\n                step={1}\n                minimumValue={1}\n                maximumValue={10}\n                style={styles.slider}\n                minimumTrackTintColor={appColors.primary}\n                thumbTintColor={appColors.white}\n              />\n            </View>\n          </View>\n          <View style={styles.noteContainer}>\n            <DefaultText style={styles.note}>\n              Please note, changing the game speed will reset the game.\n            </DefaultText>\n          </View>\n          <View style={styles.setting}>\n            <DefaultText style={styles.label}>SOUNDS</DefaultText>\n            <View>\n              <Switch\n                value={sounds}\n                onValueChange={() => {\n                  setSounds((state) => !state);\n                }}\n                trackColor={{ true: appColors.primary }}\n                thumbColor={appColors.white}\n              />\n            </View>\n          </View>\n          <View style={styles.setting}>\n            <DefaultText style={styles.label}>HAPTICS</DefaultText>\n            <View>\n              <Switch\n                value={haptics}\n                onValueChange={() => {\n                  setHaptics((state) => !state);\n                }}\n                trackColor={{ true: appColors.primary }}\n                thumbColor={appColors.white}\n              />\n            </View>\n          </View>\n          <IconButton\n            style={styles.button}\n            pressHandler={() => {\n              dispatch(saveSettings({ speed, sounds, haptics }));\n              navigation.goBack();\n            }}\n            icon={require(\"../assets/images/submit.png\")}\n          />\n        </Card>\n      </ScrollView>\n    </GradientBackground>\n  );\n};\n\nexport default SettingsScreen;\n\nconst styles = StyleSheet.create({\n  settingsContainer: {\n    padding: 30,\n  },\n  settings: {\n    padding: 30,\n    backgroundColor: appColors.black,\n    alignItems: \"center\",\n  },\n  setting: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    paddingVertical: 15,\n  },\n  label: {\n    color: appColors.white,\n    fontSize: 24,\n  },\n  noteContainer: {\n    paddingVertical: 10,\n    width: \"100%\",\n  },\n  note: {\n    fontSize: 18,\n    color: \"#ccc\",\n    paddingVertical: 4,\n  },\n  slider: {\n    width: 150,\n    height: 20,\n  },\n  button: {\n    marginTop: 10,\n  },\n});\n","import {\n  KeyboardAvoidingView,\n  Platform,\n  Pressable,\n  StyleSheet,\n  View,\n} from \"react-native\";\nimport React, { useCallback, useState } from \"react\";\nimport { Card, Input, DefaultButton, DefaultText } from \"@components\";\nimport { BlurView } from \"expo-blur\";\nimport { appColors } from \"@constants/Colors\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport { useCreateGameMutation } from \"../services/gameApi\";\nimport { handleErrorResponse } from \"../helpers/utils\";\n\ntype MultiplayerScreenProps = {\n  navigation: NativeStackNavigationProp<\n    StackNavigatorParams,\n    \"MultiplayerLobby\"\n  >;\n};\n\nconst MultiplayerScreen = ({ navigation }: MultiplayerScreenProps) => {\n  const [username, setUsername] = useState(\"\");\n  const [usernameIsValid, setUsernameIsValid] = useState(false);\n\n  const nameChangeHandler = useCallback((_, text: string, isValid: boolean) => {\n    setUsername(text);\n    setUsernameIsValid(isValid);\n  }, []);\n\n  const [createGame] = useCreateGameMutation();\n\n  const handleCreateGame = useCallback(async () => {\n    try {\n      const gameResponse = await createGame(username).unwrap();\n      gameResponse.data\n        ? navigation.replace(\"MultiplayerGame\", {\n            gameId: gameResponse.data._id,\n            initiator: true,\n          })\n        : handleErrorResponse(gameResponse.problem);\n    } catch (err) {\n      handleErrorResponse();\n    }\n  }, [username]);\n\n  return (\n    <BlurView style={styles.screen} intensity={20}>\n      <Pressable\n        style={styles.backdrop}\n        onPress={() => {\n          navigation.goBack();\n        }}\n      />\n      <KeyboardAvoidingView\n        behavior={Platform.OS === \"android\" ? \"padding\" : \"position\"}\n        style={styles.bottomContainer}\n      >\n        <Card style={styles.lobby}>\n          <DefaultText style={styles.text}>\n            Insert an username of player to challenge\n          </DefaultText>\n          <View>\n            <Input\n              id=\"username\"\n              label=\"USERNAME\"\n              value={username}\n              onInputChange={nameChangeHandler}\n              required\n              minLength={6}\n              autoCapitalize=\"none\"\n              error={!usernameIsValid}\n              errorText=\"Please enter a valid username.\"\n            />\n          </View>\n          <DefaultButton onPress={handleCreateGame}>Challenge</DefaultButton>\n        </Card>\n      </KeyboardAvoidingView>\n    </BlurView>\n  );\n};\n\nexport default MultiplayerScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  backdrop: {\n    flex: 3,\n  },\n  bottomContainer: {\n    backgroundColor: appColors.primaryLight,\n    flex: 2,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  lobby: {\n    backgroundColor: appColors.black,\n    width: \"75%\",\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    justifyContent: \"space-between\",\n  },\n  text: {\n    color: \"#eee\",\n    fontSize: 20,\n    textAlign: \"center\",\n    paddingVertical: 10,\n  },\n});\n","import { Alert, StyleSheet } from \"react-native\";\nimport React, { useCallback, useEffect, useMemo } from \"react\";\nimport { Board, GradientBackground, MultiplayerGame } from \"@components\";\nimport { useGameQuery, useUpdateGameMutation } from \"../services/gameApi\";\nimport { RouteProp } from \"@react-navigation/native\";\nimport { StackNavigatorParams } from \"@config/GameNavigator\";\nimport useConst from \"@hooks/useConst\";\nimport GameClass from \"@models/Game\";\nimport useGameLoop from \"@hooks/useGameLoop\";\nimport useForceUpdate from \"@hooks/useForceUpdate\";\nimport { NativeStackNavigationProp } from \"@react-navigation/native-stack\";\nimport { useAppSelector } from \"@store/hooks\";\n\ntype MultiplayerGameScreenProps = {\n  navigation: NativeStackNavigationProp<\n    StackNavigatorParams,\n    \"MultiplayerGame\"\n  >;\n  route: RouteProp<StackNavigatorParams, \"MultiplayerGame\">;\n};\n\nconst MultiplayerGameScreen = ({\n  navigation,\n  route,\n}: MultiplayerGameScreenProps) => {\n  const { data: sharedGame } = useGameQuery(route.params.gameId);\n  const userId = useAppSelector((state) => state.auth.userId);\n\n  const [updateGame] = useUpdateGameMutation();\n\n  const game = useConst(() => new GameClass({}));\n\n  const draw = useForceUpdate();\n\n  const update = useCallback(() => {\n    game.update();\n    updateGame({\n      gameId: route.params.gameId,\n      gameOver: game.gameOver,\n      playerBoard: Array.from(game.board),\n    });\n  }, []);\n\n  const { start, stop } = useGameLoop(game.speed, update, draw);\n\n  useEffect(() => {\n    if (sharedGame?.gameStatus === \"STARTED\") {\n      start();\n    }\n    if (sharedGame?.gameStatus === \"FINISHED\") {\n      stop();\n      Alert.alert(\"Game over\", `${sharedGame.winner} win!`, [\n        {\n          text: \"Home\",\n          onPress: () => navigation.navigate(\"Root\"),\n          style: \"destructive\",\n        },\n      ]);\n    }\n  }, [sharedGame?.gameStatus]);\n\n  useEffect(() => {\n    updateGame({\n      gameId: route.params.gameId,\n      gameOver: game.gameOver,\n      playerBoard: Array.from(game.board),\n    });\n\n    return () => {\n      updateGame({\n        gameId: route.params.gameId,\n        gameOver: true,\n        playerBoard: Array.from(game.board),\n      });\n    };\n  }, []);\n\n  const handleInput = useCallback((keyCode: string) => {\n    game.inputHandler(keyCode);\n    draw();\n  }, []);\n\n  /**\n   * TODO: not scalable, check for other solution later\n   * ideally we want to have many opponent boards as number of players.\n   */\n  const opponentBoard = useMemo(\n    () =>\n      sharedGame?.players.filter((player) => player.user !== userId)[0].board ??\n      [],\n    [sharedGame]\n  );\n\n  return (\n    <GradientBackground>\n      <MultiplayerGame\n        game={game}\n        handleInput={handleInput}\n        children={<Board board={opponentBoard} boardWidth={75} />}\n      />\n    </GradientBackground>\n  );\n};\n\nexport default MultiplayerGameScreen;\n\nconst styles = StyleSheet.create({});\n","import React from \"react\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { HomeScreen, ProfileScreen, AuthScreen } from \"@screens\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport { BlurView } from \"expo-blur\";\nimport { useAppSelector } from \"@store/hooks\";\n\nexport type TabNavigatorParams = {\n  Home: undefined;\n  Profile: undefined;\n  Login: undefined;\n};\n\nconst Tab = createBottomTabNavigator<TabNavigatorParams>();\n\nconst RootNavigator = () => {\n  const isSignedIn = useAppSelector((state) => !!state.auth.accessToken);\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n        tabBarStyle: {\n          position: \"absolute\",\n          borderTopWidth: 0,\n        },\n        tabBarLabelStyle: {\n          fontSize: 16,\n          fontFamily: \"dogbyte\",\n          paddingBottom: 5,\n        },\n        tabBarActiveTintColor: \"orange\",\n        tabBarInactiveTintColor: \"#bbb\",\n        tabBarBackground: () => (\n          <BlurView tint=\"dark\" intensity={40} style={{ flex: 1 }} />\n        ),\n      }}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          tabBarIcon: ({ size, color }) => (\n            <FontAwesome name=\"home\" size={size} color={color} />\n          ),\n        }}\n      />\n      {isSignedIn ? (\n        <Tab.Screen\n          name=\"Profile\"\n          component={ProfileScreen}\n          options={{\n            tabBarIcon: ({ size, color }) => (\n              <FontAwesome name=\"user\" size={size} color={color} />\n            ),\n            headerShown: false,\n          }}\n        />\n      ) : (\n        <Tab.Screen\n          name=\"Login\"\n          component={AuthScreen}\n          options={{\n            tabBarIcon: ({ size, color }) => (\n              <FontAwesome name=\"sign-in\" size={size} color={color} />\n            ),\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n};\n\nexport default RootNavigator;\n","import React from \"react\";\nimport {\n  GameModalScreen,\n  LeaderboardScreen,\n  SingleplayerScreen,\n  SettingsScreen,\n  MultiplayerLobbyScreen,\n  MultiplayerGameScreen,\n} from \"@screens\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport RootNavigator from \"./RootNavigator\";\nimport { appColors } from \"@constants/Colors\";\n\nexport type StackNavigatorParams = {\n  Root: undefined;\n  Singleplayer: undefined;\n  Leaderboard: undefined;\n  Settings: undefined;\n  GameModal: { gameOver: boolean };\n  MultiplayerLobby: undefined;\n  MultiplayerGame: { gameId: string; initiator: boolean };\n};\n\nconst Stack = createNativeStackNavigator<StackNavigatorParams>();\n\nconst GameNavigator = () => {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"Root\"\n        component={RootNavigator}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen name=\"Singleplayer\" component={SingleplayerScreen} />\n      <Stack.Screen\n        name=\"GameModal\"\n        component={GameModalScreen}\n        options={{\n          presentation: \"transparentModal\",\n          headerShown: false,\n          animation: \"none\",\n        }}\n      />\n      <Stack.Screen name=\"Leaderboard\" component={LeaderboardScreen} />\n      <Stack.Screen\n        name=\"MultiplayerLobby\"\n        component={MultiplayerLobbyScreen}\n        options={{\n          presentation: \"transparentModal\",\n          headerShown: false,\n          animation: \"fade\",\n        }}\n      />\n      <Stack.Screen name=\"MultiplayerGame\" component={MultiplayerGameScreen} />\n      <Stack.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          headerTitle: \"SETTINGS\",\n          headerStyle: { backgroundColor: appColors.primaryDark },\n          headerTitleStyle: { fontSize: 24, fontFamily: \"dogbyte\" },\n          headerTintColor: appColors.white,\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nexport default GameNavigator;\n","import React, { useEffect, useRef } from \"react\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport GameNavigator, { StackNavigatorParams } from \"./GameNavigator\";\nimport { SplashScreen } from \"@screens\";\nimport { useAppSelector } from \"@store/hooks\";\nimport { NavigationContainerRef } from \"@react-navigation/native\";\nimport * as Notifications from \"expo-notifications\";\n\nconst AppNavigator = () => {\n  const navigationRef =\n    useRef<NavigationContainerRef<StackNavigatorParams> | null>(null);\n  const didTryToLogin = useAppSelector((state) => !!state.auth.didTryLogin);\n  const isSignedIn = useAppSelector((state) => !!state.auth.accessToken);\n\n  useEffect(() => {\n    if (isSignedIn) {\n      const subscription =\n        Notifications.addNotificationResponseReceivedListener((response) => {\n          const data = response.notification.request.content.data;\n          if (\"gameId\" in data && typeof data.gameId === \"string\") {\n            navigationRef.current?.navigate(\"MultiplayerGame\", {\n              gameId: data.gameId,\n              initiator: false,\n            });\n          }\n        });\n\n      return () => {\n        subscription.remove();\n      };\n    }\n  }, [isSignedIn]);\n\n  return (\n    <NavigationContainer ref={navigationRef}>\n      {!didTryToLogin ? <SplashScreen /> : <GameNavigator />}\n    </NavigationContainer>\n  );\n};\n\nexport default AppNavigator;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport AppNavigator from \"@config/AppNavigator\";\nimport { AppBootstrap } from \"@components\";\nimport { init } from \"./helpers/db\";\nimport * as Notifications from \"expo-notifications\";\nimport { Platform } from \"react-native\";\n\nif (Platform.OS !== \"web\") {\n  init()\n    .then(() => {\n      console.log(\"Initialized db success.\");\n    })\n    .catch((err) => {\n      console.log(\"Initialized db failed.\");\n      console.log(err);\n    });\n}\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: true,\n    shouldSetBadge: true,\n  }),\n});\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <AppBootstrap>\n        <AppNavigator />\n      </AppBootstrap>\n    </Provider>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/Buildie/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [242], () => (__webpack_require__(9386)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["initialState","userId","accessToken","refreshToken","didTryLogin","authSlice","createSlice","name","reducers","setDidTryToLogin","state","_objectSpread","login","_","_ref","_ref$payload","payload","logout","_authSlice$actions","actions","gameSlice","setGameState","setGameSpeed","_ref2","initialSpeed","resetGameState","_gameSlice$actions","settingsSlice","sounds","haptics","setSettings","db","SQLite","SIGNUP_MUTATION","gql","_templateObject","_taggedTemplateLiteralLoose","SIGNIN_MUTATION","_templateObject2","REFRESH_TOKEN_MUTATION","_templateObject3","INVALIDATE_REFRESH_TOKEN_MUTATION","_templateObject4","SCORES_QUERY","_templateObject5","SUBMIT_SCORE_MUTATION","_templateObject6","CREATE_GAME_MUTATION","_templateObject7","UPDATE_GAME_MUTATION","_templateObject8","GAME_QUERY","_templateObject9","USER_DATA","GAME_STATE","SETTINGS","authenticate","authData","_asyncToGenerator","dispatch","userData","SecureStore","setItemAsync","JSON","stringify","_x","apply","arguments","invalidate","getState","auth","deleteItemAsync","gameApi","endpoints","initiate","createApi","reducerPath","baseQuery","baseUrl","_ref$prepareHeaders","prepareHeaders","headers","_ref4","_ref3","body","variables","Headers","data","request","error","ClientError","_error$response$error","response","errors","some","e","_e$extensions","extensions","code","refreshResult","message","stack","Error","_x2","graphqlBaseQueryWithReauth","_ref5","set","tagTypes","builder","signup","mutation","query","user","input","transformResponse","signin","scores","providesTags","submitScore","score","invalidatesTags","createGame","username","game","gameId","onCacheEntryAdded","_onCacheEntryAdded","_ref6","updateCachedData","cacheDataLoaded","cacheEntryRemoved","client","createClient","url","Promise","resolve","reject","subscribe","next","gameUpdate","complete","err","console","log","dispose","_x3","_x4","updateGame","gameOver","playerBoard","useSignupMutation","useSigninMutation","useScoresQuery","useCreateGameMutation","useGameQuery","useUpdateGameMutation","loadScores","createAsyncThunk","rejectWithValue","transaction","tx","executeSql","result","rows","_array","newScore","dbResult","submitLocalScore","_id","insertId","toString","AsyncStorage","localScores","extraReducers","addCase","fulfilled","concat","configureStore","reducer","_defineProperty","settings","scoresSlice","middleware","getDefaultMiddleware","squareColors","appColors","children","_jsxs","View","style","styles","screen","_jsx","StatusBar","LinearGradient","background","colors","primaryLight","primary","primaryDark","StyleSheet","flex","position","left","right","top","bottom","Text","text","fontFamily","textStyle","props","_objectWithoutProperties","_excluded","TouchableOpacity","button","activeOpacity","buttonTextContainer","disabled","lineContainer","line","DefaultText","buttonText","paddingVertical","paddingHorizontal","borderRadius","justifyContent","zIndex","borderBottomWidth","borderColor","alignSelf","color","fontSize","React","pressHandler","icon","onPress","Image","resizeMode","source","width","height","gameMode","setGameModeHandler","leaderboardHeaderContainer","leaderboardHeader","titleContainer","title","gameModeContainer","DefaultButton","selectedGameMode","paddingTop","Platform","backgroundColor","alignItems","Dimensions","flexDirection","card","shadowColor","shadowOpacity","shadowOffset","shadowRadius","elevation","InputActionType","inputReducer","action","type","INPUT_CHANGE","value","isValid","INPUT_BLUR","touched","_props$initialValue","_props$initiallyValid","_useReducer","useReducer","initialValue","initiallyValid","_useReducer2","_slicedToArray","inputState","id","onInputChange","useEffect","control","label","TextInput","onChangeText","required","trim","length","email","test","toLowerCase","min","max","minLength","onBlur","errorContainer","errorText","marginVertical","borderBottomColor","border","cell","pieceWidth","piece","transparentBackground","currHeldPiece","_toConsumableArray","map","idx","Cell","_Fragment","pieceContainer","borderWidth","marginBottom","textAlign","flexWrap","animationHeight","animationWidth","shapes","useRef","Object","values","shapesJson","current","_useState","useState","Math","floor","random","_useState2","rndWidth","setRndWidth","translation","Animated","animation","toValue","duration","useNativeDriver","start","finished","setValue","GradientBackground","transform","translateY","Piece","animatedPiece","Board","initialBoard","undefined","initialLines","initialScore","_classCallCheck","this","_initialSpeed","_speed","_lines","_score","_board","init","_createClass","key","get","board","Uint8Array","h","w","yIndex","xIndex","pyIndex","clearedLines","yFwIndex","isFilled","yBwIndex","speed","Points","lines","_classPrivateFieldLooseKey","shape","defineProperty","writable","x","y","r","_shape","_classPrivateFieldLooseBase","collided","pxIndex","new_x","new_y","new_r","rotate","collides","lock","clearLines","offset","wallKick","moveDown","currPiece","boardWidth","cellWidth","useMemo","BoardClass","currBoard","drawPiece","useCallback","piece_y","isGhost","bIndex","pIndex","fillBoard","newBoard","ghost_y","gridContainer","grid","update","draw","rafRef","ms_per_update","prevTimeRef","performance","now","lagRef","started","gameLoop","time","elapsedTimeBetweenFrames","loops","requestAnimationFrame","stop","cancelAnimationFrame","useAppDispatch","useDispatch","useAppSelector","useSelector","_ref$feedback","feedback","timer","isHapticsEnabled","buttonContainer","onPressIn","handlePressIn","Haptics","impactAsync","selectionAsync","setTimeout","onPressOut","clearTimeout","joystickButton","FontAwesome","size","margin","Commands","handleInput","joystick","joystickArrows","JoystickButton","joystickArrowsContainer","joystickButtons","forceUpdate","s","statistic","gameStatisticContainer","gameStatistic","iconContainer","marginTop","gameHeaderContainer","gameHeader","GameStatistic","require","soundtracks","Array","Soundtracks","currSoundtrack","isLoading","setIsLoading","_useState3","_useState4","didFinish","setDidFinish","areSoundsEnabled","playMusic","which","playFromPositionAsync","stopMusic","stopAsync","i","soundtrackObject","Audio","volume","didJustFinish","sound","unloadAsync","navigation","useNavigation","_useSounds","useSounds","_useSounds2","_useSounds2$","useForceUpdate","keyCode","inputHandler","_useGameLoop","useGameLoop","useFocusEffect","reset","handleKeyPress","command","ArrowLeft","ArrowRight","ArrowUp","ArrowDown","PageUp","PageDown","ShiftLeft","window","addEventListener","removeEventListener","navigate","useLayoutEffect","setOptions","header","GameHeader","gameContainer","from","sidePanel","heldPiece","nextPiece","Joystick","marginLeft","fetchFonts","Font","loadAsync","dogbyte","fontLoaded","setFontLoaded","AppLoading","startAsync","onFinish","onError","rank","me","field","slice","flexShrink","listHeader","setName","nameIsValid","setNameIsValid","_useState5","_useState6","scoreIsSubmitted","setScoreIsSubmitted","nameChangeHandler","form","Input","autoCapitalize","maxLength","unwrap","then","logo","list","homeButton","minWidth","tabBarHeight","useBottomTabBarHeight","isSignedIn","activeGame","AnimatedBackground","char","initialvalue","ref","Shape","_y","_r","ShapeFactory","initialShapes","_shapeTypes","push","PiecePool","initialIndexCurrPiece","initialIndexHeldPiece","initialIndexNextPiece","_this","alreadyHeld","doesNextPieceFit","_this$currPiece","_this$currPiece2","_this$currPiece3","_this$currPiece4","_this$currPiece5","_this$currPiece6","moveLeft","moveRight","rotateRight","hardDrop","holdPiece","_pool","sIndex","newPiece","_currPiece","_heldPiece","_nextPiece","randomPiece","rndIndex","_this$currPiece7","_this$nextPiece","temp","_this$currPiece8","_this$currPiece9","Game","_piecePool","shapeTypes","_this$_piecePool$held","_this$_piecePool$next","serializeGameState","replace","_useAppSelector","appState","AppState","useConst","GameClass","handleAppStateChange","nextAppState","match","_game$currPiece","saveGameStateToStorage","handlePause","_game$currPiece2","subscription","remove","IconButton","setGameMode","listRef","onlineScores","_listRef$current","scrollToOffset","animated","renderScoreItem","item","index","ScoreItem","LeaderboardHeader","leaderboardContainer","FlatList","keyExtractor","renderItem","stickyHeaderIndices","ListHeaderComponent","ScoreListHeader","goBack","centered","defaultStyles","logoutButton","route","BlurView","intensity","Pressable","backdrop","Card","modalContainer","modal","params","GameOver","Pause","padding","FormActionType","formAction","FORM_CHANGE","updatedValues","inputValues","updatedValidities","inputValidities","updatedFormIsValid","formIsValid","keys","reduce","acc","curr","formState","dispatchFormState","_usePermissions","usePermissions","_usePermissions2","status","requestPermission","finalStatus","pushToken","granted","getExpoPushTokenAsync","handleErrorResponse","Alert","isNewUser","setIsNewUser","_useForm","useForm","password","_useForm2","_useForm2$","inputChangeHandler","getPushToken","usePushNotification","_useSigninMutation","fixedCacheKey","_useSigninMutation2","_useSignupMutation","authHandler","expoToken","authResponse","problem","KeyboardAvoidingView","behavior","formContainer","ScrollView","keyboardType","secureTextEntry","loadingSpinner","ActivityIndicator","prevState","maxWidth","maxHeight","getItemAsync","parse","gameState","saveSettingsToStorage","savedGameSpeed","savedSettings","setSpeed","setSounds","setHaptics","contentContainerStyle","settingsContainer","setting","Slider","onValueChange","step","minimumValue","maximumValue","slider","minimumTrackTintColor","thumbTintColor","white","noteContainer","note","Switch","trackColor","true","thumbColor","saveSettings","black","setUsername","usernameIsValid","setUsernameIsValid","_useCreateGameMutatio","handleCreateGame","gameResponse","initiator","bottomContainer","lobby","sharedGame","_useUpdateGameMutatio","gameStatus","winner","opponentBoard","_sharedGame$players$f","players","filter","player","MultiplayerGame","Tab","createBottomTabNavigator","Navigator","screenOptions","headerShown","tabBarStyle","borderTopWidth","tabBarLabelStyle","paddingBottom","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarBackground","tint","Screen","component","HomeScreen","options","tabBarIcon","ProfileScreen","AuthScreen","Stack","createNativeStackNavigator","RootNavigator","SingleplayerScreen","GameModalScreen","presentation","LeaderboardScreen","MultiplayerLobbyScreen","MultiplayerGameScreen","SettingsScreen","headerTitle","headerStyle","headerTitleStyle","headerTintColor","navigationRef","didTryToLogin","Notifications","_navigationRef$curren","notification","content","NavigationContainer","GameNavigator","SplashScreen","App","Provider","store","AppBootstrap","AppNavigator","catch","handleNotification","_handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}